#include <armadillo>
#include <complex>

using namespace arma;

sp_cx_mat def_matrix()
{
   sp_cx_mat A(750,750);
   A(0, 3) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(3, 0) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(0, 29) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(29, 0) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(0, 603) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(603, 0) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1, 3) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(3, 1) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1, 4) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(4, 1) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1, 124) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(124, 1) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(2, 4) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(4, 2) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(2, 5) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(5, 2) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(2, 185) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(185, 2) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(3, 150) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(150, 3) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(4, 31) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(31, 4) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(5, 6) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(6, 5) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(5, 722) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(722, 5) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(6, 9) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(9, 6) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(6, 609) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(609, 6) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(7, 9) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(9, 7) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(7, 10) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(10, 7) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(7, 130) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(130, 7) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(8, 10) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(10, 8) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(8, 11) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(11, 8) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(8, 191) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(191, 8) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(9, 156) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(156, 9) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(10, 37) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(37, 10) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(11, 12) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(12, 11) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(11, 728) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(728, 11) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(12, 15) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(15, 12) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(12, 615) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(615, 12) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(13, 15) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(15, 13) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(13, 16) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(16, 13) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(13, 136) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(136, 13) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(14, 16) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(16, 14) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(14, 17) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(17, 14) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(14, 197) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(197, 14) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(15, 162) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(162, 15) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(16, 43) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(43, 16) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(17, 18) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(18, 17) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(17, 734) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(734, 17) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(18, 21) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(21, 18) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(18, 621) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(621, 18) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(19, 21) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(21, 19) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(19, 22) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(22, 19) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(19, 142) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(142, 19) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(20, 22) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(22, 20) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(20, 23) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(23, 20) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(20, 203) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(203, 20) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(21, 168) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(168, 21) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(22, 49) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(49, 22) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(23, 24) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(24, 23) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(23, 740) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(740, 23) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(24, 27) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(27, 24) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(24, 627) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(627, 24) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(25, 27) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(27, 25) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(25, 28) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(28, 25) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(25, 148) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(148, 25) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(26, 28) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(28, 26) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(26, 29) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(29, 26) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(26, 209) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(209, 26) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(27, 174) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(174, 27) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(28, 55) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(55, 28) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(29, 746) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(746, 29) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(30, 33) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(33, 30) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(30, 59) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(59, 30) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(30, 633) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(633, 30) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(31, 33) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(33, 31) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(31, 34) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(34, 31) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(32, 34) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(34, 32) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(32, 35) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(35, 32) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(32, 215) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(215, 32) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(33, 180) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(180, 33) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(34, 61) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(61, 34) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(35, 36) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(36, 35) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(35, 602) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(602, 35) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(36, 39) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(39, 36) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(36, 639) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(639, 36) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(37, 39) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(39, 37) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(37, 40) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(40, 37) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(38, 40) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(40, 38) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(38, 41) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(41, 38) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(38, 221) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(221, 38) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(39, 186) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(186, 39) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(40, 67) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(67, 40) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(41, 42) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(42, 41) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(41, 608) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(608, 41) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(42, 45) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(45, 42) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(42, 645) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(645, 42) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(43, 45) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(45, 43) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(43, 46) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(46, 43) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(44, 46) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(46, 44) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(44, 47) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(47, 44) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(44, 227) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(227, 44) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(45, 192) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(192, 45) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(46, 73) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(73, 46) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(47, 48) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(48, 47) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(47, 614) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(614, 47) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(48, 51) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(51, 48) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(48, 651) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(651, 48) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(49, 51) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(51, 49) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(49, 52) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(52, 49) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(50, 52) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(52, 50) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(50, 53) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(53, 50) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(50, 233) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(233, 50) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(51, 198) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(198, 51) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(52, 79) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(79, 52) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(53, 54) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(54, 53) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(53, 620) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(620, 53) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(54, 57) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(57, 54) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(54, 657) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(657, 54) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(55, 57) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(57, 55) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(55, 58) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(58, 55) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(56, 58) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(58, 56) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(56, 59) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(59, 56) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(56, 239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(239, 56) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(57, 204) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(204, 57) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(58, 85) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(85, 58) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(59, 626) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(626, 59) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(60, 63) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(63, 60) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(60, 89) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(89, 60) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(60, 663) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(663, 60) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(61, 63) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(63, 61) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(61, 64) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(64, 61) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(62, 64) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(64, 62) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(62, 65) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(65, 62) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(62, 245) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(245, 62) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(63, 210) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(210, 63) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(64, 91) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(91, 64) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(65, 66) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(66, 65) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(65, 632) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(632, 65) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(66, 69) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(69, 66) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(66, 669) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(669, 66) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(67, 69) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(69, 67) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(67, 70) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(70, 67) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(68, 70) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(70, 68) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(68, 71) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(71, 68) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(68, 251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(251, 68) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(69, 216) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(216, 69) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(70, 97) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(97, 70) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(71, 72) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(72, 71) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(71, 638) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(638, 71) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(72, 75) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(75, 72) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(72, 675) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(675, 72) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(73, 75) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(75, 73) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(73, 76) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(76, 73) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(74, 76) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(76, 74) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(74, 77) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(77, 74) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(74, 257) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(257, 74) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(75, 222) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(222, 75) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(76, 103) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(103, 76) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(77, 78) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(78, 77) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(77, 644) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(644, 77) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(78, 81) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(81, 78) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(78, 681) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(681, 78) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(79, 81) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(81, 79) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(79, 82) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(82, 79) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(80, 82) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(82, 80) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(80, 83) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(83, 80) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(80, 263) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(263, 80) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(81, 228) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(228, 81) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(82, 109) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(109, 82) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(83, 84) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(84, 83) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(83, 650) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(650, 83) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(84, 87) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(87, 84) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(84, 687) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(687, 84) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(85, 87) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(87, 85) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(85, 88) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(88, 85) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(86, 88) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(88, 86) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(86, 89) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(89, 86) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(86, 269) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(269, 86) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(87, 234) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(234, 87) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(88, 115) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(115, 88) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(89, 656) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(656, 89) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(90, 93) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(93, 90) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(90, 119) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(119, 90) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(90, 693) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(693, 90) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(91, 93) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(93, 91) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(91, 94) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(94, 91) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(92, 94) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(94, 92) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(92, 95) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(95, 92) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(92, 275) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(275, 92) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(93, 240) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(240, 93) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(94, 121) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(121, 94) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(95, 96) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(96, 95) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(95, 662) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(662, 95) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(96, 99) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(99, 96) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(96, 699) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(699, 96) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(97, 99) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(99, 97) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(97, 100) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(100, 97) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(98, 100) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(100, 98) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(98, 101) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(101, 98) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(98, 281) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(281, 98) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(99, 246) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(246, 99) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(100, 127) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(127, 100) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(101, 102) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(102, 101) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(101, 668) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(668, 101) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(102, 105) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(105, 102) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(102, 705) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(705, 102) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(103, 105) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(105, 103) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(103, 106) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(106, 103) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(104, 106) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(106, 104) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(104, 107) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(107, 104) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(104, 287) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(287, 104) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(105, 252) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(252, 105) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(106, 133) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(133, 106) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(107, 108) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(108, 107) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(107, 674) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(674, 107) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(108, 111) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(111, 108) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(108, 711) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(711, 108) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(109, 111) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(111, 109) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(109, 112) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(112, 109) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(110, 112) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(112, 110) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(110, 113) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(113, 110) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(110, 293) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(293, 110) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(111, 258) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(258, 111) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(112, 139) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(139, 112) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(113, 114) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(114, 113) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(113, 680) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(680, 113) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(114, 117) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(117, 114) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(114, 717) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(717, 114) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(115, 117) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(117, 115) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(115, 118) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(118, 115) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(116, 118) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(118, 116) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(116, 119) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(119, 116) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(116, 299) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(299, 116) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(117, 264) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(264, 117) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(118, 145) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(145, 118) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(119, 686) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(686, 119) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(120, 123) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(123, 120) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(120, 149) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(149, 120) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(120, 723) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(723, 120) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(121, 123) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(123, 121) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(121, 124) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(124, 121) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(122, 124) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(124, 122) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(122, 125) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(125, 122) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(122, 155) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(155, 122) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(123, 270) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(270, 123) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(125, 126) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(126, 125) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(125, 692) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(692, 125) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(126, 129) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(129, 126) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(126, 729) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(729, 126) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(127, 129) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(129, 127) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(127, 130) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(130, 127) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(128, 130) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(130, 128) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(128, 131) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(131, 128) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(128, 161) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(161, 128) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(129, 276) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(276, 129) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(131, 132) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(132, 131) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(131, 698) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(698, 131) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(132, 135) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(135, 132) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(132, 735) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(735, 132) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(133, 135) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(135, 133) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(133, 136) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(136, 133) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(134, 136) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(136, 134) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(134, 137) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(137, 134) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(134, 167) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(167, 134) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(135, 282) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(282, 135) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(137, 138) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(138, 137) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(137, 704) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(704, 137) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(138, 141) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(141, 138) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(138, 741) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(741, 138) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(139, 141) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(141, 139) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(139, 142) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(142, 139) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(140, 142) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(142, 140) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(140, 143) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(143, 140) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(140, 173) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(173, 140) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(141, 288) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(288, 141) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(143, 144) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(144, 143) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(143, 710) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(710, 143) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(144, 147) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(147, 144) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(144, 747) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(747, 144) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(145, 147) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(147, 145) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(145, 148) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(148, 145) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(146, 148) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(148, 146) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(146, 149) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(149, 146) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(146, 179) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(179, 146) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(147, 294) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(294, 147) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(149, 716) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(716, 149) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(150, 153) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(153, 150) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(150, 179) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(179, 150) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(151, 153) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(153, 151) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(151, 154) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(154, 151) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(151, 274) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(274, 151) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(152, 154) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(154, 152) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(152, 155) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(155, 152) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(152, 335) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(335, 152) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(153, 300) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(300, 153) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(154, 181) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(181, 154) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(155, 156) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(156, 155) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(156, 159) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(159, 156) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(157, 159) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(159, 157) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(157, 160) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(160, 157) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(157, 280) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(280, 157) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(158, 160) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(160, 158) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(158, 161) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(161, 158) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(158, 341) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(341, 158) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(159, 306) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(306, 159) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(160, 187) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(187, 160) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(161, 162) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(162, 161) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(162, 165) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(165, 162) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(163, 165) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(165, 163) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(163, 166) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(166, 163) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(163, 286) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(286, 163) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(164, 166) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(166, 164) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(164, 167) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(167, 164) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(164, 347) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(347, 164) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(165, 312) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(312, 165) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(166, 193) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(193, 166) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(167, 168) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(168, 167) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(168, 171) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(171, 168) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(169, 171) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(171, 169) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(169, 172) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(172, 169) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(169, 292) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(292, 169) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(170, 172) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(172, 170) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(170, 173) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(173, 170) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(170, 353) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(353, 170) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(171, 318) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(318, 171) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(172, 199) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(199, 172) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(173, 174) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(174, 173) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(174, 177) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(177, 174) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(175, 177) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(177, 175) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(175, 178) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(178, 175) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(175, 298) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(298, 175) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(176, 178) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(178, 176) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(176, 179) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(179, 176) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(176, 359) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(359, 176) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(177, 324) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(324, 177) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(178, 205) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(205, 178) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(180, 183) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(183, 180) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(180, 209) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(209, 180) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(181, 183) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(183, 181) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(181, 184) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(184, 181) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(182, 184) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(184, 182) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(182, 185) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(185, 182) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(182, 365) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(365, 182) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(183, 330) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(330, 183) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(184, 211) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(211, 184) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(185, 186) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(186, 185) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(186, 189) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(189, 186) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(187, 189) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(189, 187) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(187, 190) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(190, 187) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(188, 190) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(190, 188) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(188, 191) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(191, 188) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(188, 371) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(371, 188) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(189, 336) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(336, 189) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(190, 217) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(217, 190) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(191, 192) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(192, 191) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(192, 195) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(195, 192) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(193, 195) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(195, 193) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(193, 196) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(196, 193) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(194, 196) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(196, 194) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(194, 197) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(197, 194) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(194, 377) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(377, 194) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(195, 342) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(342, 195) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(196, 223) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(223, 196) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(197, 198) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(198, 197) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(198, 201) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(201, 198) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(199, 201) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(201, 199) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(199, 202) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(202, 199) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(200, 202) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(202, 200) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(200, 203) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(203, 200) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(200, 383) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(383, 200) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(201, 348) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(348, 201) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(202, 229) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(229, 202) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(203, 204) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(204, 203) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(204, 207) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(207, 204) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(205, 207) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(207, 205) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(205, 208) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(208, 205) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(206, 208) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(208, 206) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(206, 209) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(209, 206) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(206, 389) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(389, 206) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(207, 354) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(354, 207) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(208, 235) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(235, 208) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(210, 213) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(213, 210) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(210, 239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(239, 210) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(211, 213) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(213, 211) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(211, 214) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(214, 211) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(212, 214) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(214, 212) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(212, 215) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(215, 212) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(212, 395) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(395, 212) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(213, 360) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(360, 213) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(214, 241) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(241, 214) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(215, 216) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(216, 215) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(216, 219) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(219, 216) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(217, 219) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(219, 217) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(217, 220) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(220, 217) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(218, 220) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(220, 218) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(218, 221) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(221, 218) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(218, 401) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(401, 218) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(219, 366) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(366, 219) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(220, 247) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(247, 220) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(221, 222) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(222, 221) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(222, 225) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(225, 222) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(223, 225) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(225, 223) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(223, 226) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(226, 223) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(224, 226) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(226, 224) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(224, 227) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(227, 224) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(224, 407) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(407, 224) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(225, 372) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(372, 225) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(226, 253) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(253, 226) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(227, 228) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(228, 227) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(228, 231) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(231, 228) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(229, 231) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(231, 229) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(229, 232) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(232, 229) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(230, 232) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(232, 230) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(230, 233) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(233, 230) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(230, 413) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(413, 230) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(231, 378) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(378, 231) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(232, 259) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(259, 232) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(233, 234) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(234, 233) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(234, 237) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(237, 234) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(235, 237) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(237, 235) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(235, 238) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(238, 235) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(236, 238) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(238, 236) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(236, 239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(239, 236) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(236, 419) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(419, 236) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(237, 384) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(384, 237) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(238, 265) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(265, 238) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(240, 243) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(243, 240) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(240, 269) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(269, 240) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(241, 243) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(243, 241) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(241, 244) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(244, 241) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(242, 244) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(244, 242) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(242, 245) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(245, 242) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(242, 425) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(425, 242) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(243, 390) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(390, 243) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(244, 271) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(271, 244) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(245, 246) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(246, 245) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(246, 249) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(249, 246) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(247, 249) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(249, 247) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(247, 250) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(250, 247) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(248, 250) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(250, 248) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(248, 251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(251, 248) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(248, 431) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(431, 248) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(249, 396) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(396, 249) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(250, 277) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(277, 250) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(251, 252) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(252, 251) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(252, 255) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(255, 252) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(253, 255) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(255, 253) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(253, 256) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(256, 253) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(254, 256) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(256, 254) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(254, 257) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(257, 254) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(254, 437) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(437, 254) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(255, 402) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(402, 255) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(256, 283) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(283, 256) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(257, 258) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(258, 257) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(258, 261) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(261, 258) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(259, 261) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(261, 259) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(259, 262) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(262, 259) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(260, 262) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(262, 260) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(260, 263) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(263, 260) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(260, 443) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(443, 260) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(261, 408) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(408, 261) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(262, 289) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(289, 262) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(263, 264) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(264, 263) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(264, 267) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(267, 264) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(265, 267) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(267, 265) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(265, 268) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(268, 265) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(266, 268) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(268, 266) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(266, 269) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(269, 266) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(266, 449) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(449, 266) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(267, 414) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(414, 267) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(268, 295) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(295, 268) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(270, 273) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(273, 270) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(270, 299) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(299, 270) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(271, 273) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(273, 271) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(271, 274) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(274, 271) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(272, 274) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(274, 272) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(272, 275) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(275, 272) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(272, 305) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(305, 272) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(273, 420) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(420, 273) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(275, 276) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(276, 275) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(276, 279) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(279, 276) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(277, 279) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(279, 277) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(277, 280) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(280, 277) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(278, 280) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(280, 278) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(278, 281) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(281, 278) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(278, 311) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(311, 278) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(279, 426) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(426, 279) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(281, 282) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(282, 281) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(282, 285) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(285, 282) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(283, 285) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(285, 283) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(283, 286) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(286, 283) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(284, 286) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(286, 284) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(284, 287) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(287, 284) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(284, 317) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(317, 284) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(285, 432) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(432, 285) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(287, 288) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(288, 287) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(288, 291) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(291, 288) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(289, 291) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(291, 289) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(289, 292) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(292, 289) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(290, 292) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(292, 290) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(290, 293) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(293, 290) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(290, 323) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(323, 290) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(291, 438) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(438, 291) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(293, 294) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(294, 293) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(294, 297) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(297, 294) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(295, 297) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(297, 295) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(295, 298) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(298, 295) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(296, 298) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(298, 296) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(296, 299) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(299, 296) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(296, 329) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(329, 296) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(297, 444) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(444, 297) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(300, 303) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(303, 300) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(300, 329) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(329, 300) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(301, 303) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(303, 301) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(301, 304) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(304, 301) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(301, 424) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(424, 301) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(302, 304) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(304, 302) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(302, 305) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(305, 302) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(302, 485) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(485, 302) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(303, 450) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(450, 303) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(304, 331) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(331, 304) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(305, 306) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(306, 305) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(306, 309) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(309, 306) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(307, 309) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(309, 307) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(307, 310) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(310, 307) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(307, 430) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(430, 307) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(308, 310) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(310, 308) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(308, 311) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(311, 308) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(308, 491) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(491, 308) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(309, 456) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(456, 309) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(310, 337) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(337, 310) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(311, 312) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(312, 311) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(312, 315) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(315, 312) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(313, 315) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(315, 313) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(313, 316) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(316, 313) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(313, 436) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(436, 313) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(314, 316) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(316, 314) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(314, 317) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(317, 314) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(314, 497) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(497, 314) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(315, 462) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(462, 315) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(316, 343) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(343, 316) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(317, 318) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(318, 317) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(318, 321) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(321, 318) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(319, 321) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(321, 319) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(319, 322) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(322, 319) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(319, 442) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(442, 319) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(320, 322) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(322, 320) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(320, 323) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(323, 320) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(320, 503) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(503, 320) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(321, 468) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(468, 321) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(322, 349) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(349, 322) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(323, 324) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(324, 323) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(324, 327) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(327, 324) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(325, 327) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(327, 325) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(325, 328) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(328, 325) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(325, 448) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(448, 325) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(326, 328) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(328, 326) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(326, 329) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(329, 326) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(326, 509) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(509, 326) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(327, 474) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(474, 327) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(328, 355) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(355, 328) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(330, 333) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(333, 330) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(330, 359) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(359, 330) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(331, 333) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(333, 331) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(331, 334) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(334, 331) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(332, 334) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(334, 332) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(332, 335) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(335, 332) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(332, 515) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(515, 332) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(333, 480) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(480, 333) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(334, 361) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(361, 334) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(335, 336) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(336, 335) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(336, 339) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(339, 336) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(337, 339) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(339, 337) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(337, 340) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(340, 337) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(338, 340) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(340, 338) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(338, 341) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(341, 338) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(338, 521) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(521, 338) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(339, 486) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(486, 339) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(340, 367) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(367, 340) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(341, 342) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(342, 341) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(342, 345) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(345, 342) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(343, 345) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(345, 343) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(343, 346) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(346, 343) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(344, 346) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(346, 344) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(344, 347) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(347, 344) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(344, 527) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(527, 344) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(345, 492) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(492, 345) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(346, 373) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(373, 346) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(347, 348) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(348, 347) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(348, 351) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(351, 348) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(349, 351) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(351, 349) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(349, 352) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(352, 349) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(350, 352) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(352, 350) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(350, 353) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(353, 350) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(350, 533) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(533, 350) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(351, 498) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(498, 351) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(352, 379) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(379, 352) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(353, 354) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(354, 353) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(354, 357) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(357, 354) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(355, 357) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(357, 355) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(355, 358) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(358, 355) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(356, 358) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(358, 356) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(356, 359) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(359, 356) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(356, 539) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(539, 356) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(357, 504) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(504, 357) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(358, 385) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(385, 358) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(360, 363) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(363, 360) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(360, 389) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(389, 360) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(361, 363) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(363, 361) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(361, 364) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(364, 361) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(362, 364) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(364, 362) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(362, 365) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(365, 362) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(362, 545) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(545, 362) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(363, 510) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(510, 363) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(364, 391) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(391, 364) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(365, 366) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(366, 365) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(366, 369) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(369, 366) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(367, 369) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(369, 367) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(367, 370) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(370, 367) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(368, 370) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(370, 368) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(368, 371) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(371, 368) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(368, 551) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(551, 368) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(369, 516) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(516, 369) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(370, 397) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(397, 370) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(371, 372) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(372, 371) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(372, 375) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(375, 372) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(373, 375) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(375, 373) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(373, 376) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(376, 373) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(374, 376) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(376, 374) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(374, 377) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(377, 374) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(374, 557) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(557, 374) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(375, 522) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(522, 375) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(376, 403) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(403, 376) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(377, 378) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(378, 377) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(378, 381) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(381, 378) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(379, 381) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(381, 379) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(379, 382) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(382, 379) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(380, 382) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(382, 380) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(380, 383) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(383, 380) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(380, 563) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(563, 380) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(381, 528) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(528, 381) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(382, 409) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(409, 382) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(383, 384) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(384, 383) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(384, 387) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(387, 384) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(385, 387) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(387, 385) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(385, 388) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(388, 385) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(386, 388) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(388, 386) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(386, 389) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(389, 386) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(386, 569) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(569, 386) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(387, 534) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(534, 387) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(388, 415) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(415, 388) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(390, 393) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(393, 390) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(390, 419) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(419, 390) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(391, 393) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(393, 391) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(391, 394) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(394, 391) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(392, 394) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(394, 392) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(392, 395) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(395, 392) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(392, 575) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(575, 392) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(393, 540) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(540, 393) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(394, 421) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(421, 394) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(395, 396) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(396, 395) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(396, 399) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(399, 396) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(397, 399) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(399, 397) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(397, 400) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(400, 397) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(398, 400) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(400, 398) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(398, 401) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(401, 398) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(398, 581) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(581, 398) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(399, 546) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(546, 399) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(400, 427) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(427, 400) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(401, 402) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(402, 401) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(402, 405) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(405, 402) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(403, 405) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(405, 403) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(403, 406) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(406, 403) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(404, 406) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(406, 404) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(404, 407) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(407, 404) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(404, 587) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(587, 404) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(405, 552) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(552, 405) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(406, 433) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(433, 406) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(407, 408) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(408, 407) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(408, 411) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(411, 408) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(409, 411) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(411, 409) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(409, 412) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(412, 409) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(410, 412) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(412, 410) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(410, 413) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(413, 410) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(410, 593) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(593, 410) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(411, 558) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(558, 411) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(412, 439) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(439, 412) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(413, 414) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(414, 413) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(414, 417) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(417, 414) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(415, 417) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(417, 415) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(415, 418) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(418, 415) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(416, 418) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(418, 416) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(416, 419) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(419, 416) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(416, 599) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(599, 416) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(417, 564) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(564, 417) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(418, 445) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(445, 418) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(420, 423) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(423, 420) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(420, 449) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(449, 420) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(421, 423) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(423, 421) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(421, 424) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(424, 421) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(422, 424) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(424, 422) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(422, 425) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(425, 422) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(422, 455) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(455, 422) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(423, 570) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(570, 423) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(425, 426) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(426, 425) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(426, 429) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(429, 426) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(427, 429) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(429, 427) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(427, 430) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(430, 427) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(428, 430) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(430, 428) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(428, 431) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(431, 428) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(428, 461) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(461, 428) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(429, 576) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(576, 429) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(431, 432) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(432, 431) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(432, 435) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(435, 432) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(433, 435) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(435, 433) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(433, 436) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(436, 433) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(434, 436) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(436, 434) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(434, 437) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(437, 434) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(434, 467) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(467, 434) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(435, 582) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(582, 435) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(437, 438) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(438, 437) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(438, 441) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(441, 438) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(439, 441) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(441, 439) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(439, 442) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(442, 439) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(440, 442) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(442, 440) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(440, 443) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(443, 440) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(440, 473) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(473, 440) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(441, 588) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(588, 441) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(443, 444) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(444, 443) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(444, 447) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(447, 444) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(445, 447) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(447, 445) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(445, 448) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(448, 445) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(446, 448) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(448, 446) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(446, 449) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(449, 446) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(446, 479) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(479, 446) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(447, 594) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(594, 447) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(450, 453) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(453, 450) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(450, 479) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(479, 450) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(451, 453) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(453, 451) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(451, 454) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(454, 451) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(451, 574) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(574, 451) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(452, 454) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(454, 452) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(452, 455) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(455, 452) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(452, 635) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(635, 452) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(453, 600) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(600, 453) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(454, 481) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(481, 454) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(455, 456) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(456, 455) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(456, 459) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(459, 456) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(457, 459) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(459, 457) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(457, 460) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(460, 457) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(457, 580) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(580, 457) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(458, 460) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(460, 458) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(458, 461) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(461, 458) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(458, 641) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(641, 458) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(459, 606) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(606, 459) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(460, 487) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(487, 460) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(461, 462) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(462, 461) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(462, 465) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(465, 462) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(463, 465) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(465, 463) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(463, 466) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(466, 463) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(463, 586) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(586, 463) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(464, 466) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(466, 464) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(464, 467) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(467, 464) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(464, 647) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(647, 464) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(465, 612) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(612, 465) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(466, 493) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(493, 466) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(467, 468) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(468, 467) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(468, 471) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(471, 468) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(469, 471) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(471, 469) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(469, 472) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(472, 469) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(469, 592) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(592, 469) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(470, 472) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(472, 470) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(470, 473) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(473, 470) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(470, 653) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(653, 470) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(471, 618) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(618, 471) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(472, 499) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(499, 472) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(473, 474) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(474, 473) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(474, 477) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(477, 474) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(475, 477) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(477, 475) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(475, 478) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(478, 475) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(475, 598) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(598, 475) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(476, 478) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(478, 476) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(476, 479) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(479, 476) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(476, 659) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(659, 476) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(477, 624) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(624, 477) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(478, 505) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(505, 478) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(480, 483) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(483, 480) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(480, 509) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(509, 480) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(481, 483) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(483, 481) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(481, 484) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(484, 481) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(482, 484) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(484, 482) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(482, 485) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(485, 482) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(482, 665) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(665, 482) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(483, 630) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(630, 483) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(484, 511) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(511, 484) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(485, 486) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(486, 485) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(486, 489) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(489, 486) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(487, 489) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(489, 487) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(487, 490) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(490, 487) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(488, 490) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(490, 488) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(488, 491) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(491, 488) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(488, 671) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(671, 488) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(489, 636) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(636, 489) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(490, 517) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(517, 490) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(491, 492) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(492, 491) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(492, 495) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(495, 492) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(493, 495) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(495, 493) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(493, 496) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(496, 493) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(494, 496) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(496, 494) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(494, 497) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(497, 494) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(494, 677) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(677, 494) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(495, 642) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(642, 495) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(496, 523) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(523, 496) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(497, 498) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(498, 497) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(498, 501) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(501, 498) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(499, 501) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(501, 499) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(499, 502) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(502, 499) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(500, 502) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(502, 500) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(500, 503) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(503, 500) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(500, 683) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(683, 500) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(501, 648) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(648, 501) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(502, 529) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(529, 502) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(503, 504) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(504, 503) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(504, 507) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(507, 504) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(505, 507) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(507, 505) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(505, 508) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(508, 505) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(506, 508) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(508, 506) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(506, 509) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(509, 506) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(506, 689) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(689, 506) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(507, 654) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(654, 507) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(508, 535) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(535, 508) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(510, 513) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(513, 510) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(510, 539) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(539, 510) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(511, 513) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(513, 511) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(511, 514) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(514, 511) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(512, 514) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(514, 512) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(512, 515) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(515, 512) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(512, 695) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(695, 512) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(513, 660) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(660, 513) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(514, 541) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(541, 514) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(515, 516) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(516, 515) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(516, 519) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(519, 516) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(517, 519) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(519, 517) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(517, 520) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(520, 517) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(518, 520) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(520, 518) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(518, 521) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(521, 518) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(518, 701) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(701, 518) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(519, 666) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(666, 519) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(520, 547) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(547, 520) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(521, 522) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(522, 521) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(522, 525) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(525, 522) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(523, 525) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(525, 523) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(523, 526) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(526, 523) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(524, 526) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(526, 524) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(524, 527) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(527, 524) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(524, 707) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(707, 524) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(525, 672) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(672, 525) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(526, 553) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(553, 526) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(527, 528) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(528, 527) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(528, 531) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(531, 528) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(529, 531) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(531, 529) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(529, 532) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(532, 529) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(530, 532) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(532, 530) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(530, 533) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(533, 530) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(530, 713) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(713, 530) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(531, 678) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(678, 531) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(532, 559) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(559, 532) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(533, 534) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(534, 533) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(534, 537) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(537, 534) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(535, 537) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(537, 535) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(535, 538) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(538, 535) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(536, 538) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(538, 536) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(536, 539) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(539, 536) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(536, 719) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(719, 536) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(537, 684) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(684, 537) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(538, 565) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(565, 538) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(540, 543) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(543, 540) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(540, 569) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(569, 540) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(541, 543) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(543, 541) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(541, 544) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(544, 541) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(542, 544) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(544, 542) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(542, 545) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(545, 542) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(542, 725) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(725, 542) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(543, 690) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(690, 543) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(544, 571) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(571, 544) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(545, 546) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(546, 545) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(546, 549) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(549, 546) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(547, 549) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(549, 547) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(547, 550) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(550, 547) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(548, 550) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(550, 548) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(548, 551) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(551, 548) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(548, 731) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(731, 548) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(549, 696) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(696, 549) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(550, 577) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(577, 550) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(551, 552) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(552, 551) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(552, 555) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(555, 552) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(553, 555) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(555, 553) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(553, 556) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(556, 553) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(554, 556) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(556, 554) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(554, 557) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(557, 554) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(554, 737) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(737, 554) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(555, 702) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(702, 555) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(556, 583) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(583, 556) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(557, 558) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(558, 557) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(558, 561) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(561, 558) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(559, 561) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(561, 559) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(559, 562) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(562, 559) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(560, 562) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(562, 560) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(560, 563) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(563, 560) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(560, 743) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(743, 560) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(561, 708) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(708, 561) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(562, 589) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(589, 562) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(563, 564) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(564, 563) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(564, 567) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(567, 564) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(565, 567) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(567, 565) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(565, 568) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(568, 565) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(566, 568) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(568, 566) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(566, 569) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(569, 566) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(566, 749) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(749, 566) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(567, 714) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(714, 567) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(568, 595) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(595, 568) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(570, 573) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(573, 570) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(570, 599) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(599, 570) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(571, 573) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(573, 571) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(571, 574) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(574, 571) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(572, 574) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(574, 572) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(572, 575) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(575, 572) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(572, 605) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(605, 572) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(573, 720) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(720, 573) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(575, 576) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(576, 575) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(576, 579) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(579, 576) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(577, 579) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(579, 577) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(577, 580) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(580, 577) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(578, 580) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(580, 578) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(578, 581) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(581, 578) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(578, 611) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(611, 578) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(579, 726) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(726, 579) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(581, 582) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(582, 581) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(582, 585) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(585, 582) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(583, 585) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(585, 583) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(583, 586) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(586, 583) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(584, 586) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(586, 584) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(584, 587) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(587, 584) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(584, 617) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(617, 584) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(585, 732) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(732, 585) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(587, 588) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(588, 587) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(588, 591) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(591, 588) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(589, 591) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(591, 589) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(589, 592) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(592, 589) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(590, 592) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(592, 590) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(590, 593) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(593, 590) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(590, 623) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(623, 590) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(591, 738) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(738, 591) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(593, 594) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(594, 593) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(594, 597) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(597, 594) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(595, 597) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(597, 595) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(595, 598) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(598, 595) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(596, 598) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(598, 596) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(596, 599) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(599, 596) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(596, 629) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(629, 596) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(597, 744) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(744, 597) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(600, 603) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(603, 600) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(600, 629) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(629, 600) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(601, 603) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(603, 601) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(601, 604) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(604, 601) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(601, 724) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(724, 601) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(602, 604) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(604, 602) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(602, 605) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(605, 602) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(604, 631) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(631, 604) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(605, 606) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(606, 605) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(606, 609) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(609, 606) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(607, 609) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(609, 607) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(607, 610) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(610, 607) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(607, 730) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(730, 607) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(608, 610) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(610, 608) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(608, 611) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(611, 608) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(610, 637) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(637, 610) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(611, 612) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(612, 611) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(612, 615) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(615, 612) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(613, 615) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(615, 613) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(613, 616) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(616, 613) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(613, 736) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(736, 613) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(614, 616) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(616, 614) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(614, 617) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(617, 614) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(616, 643) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(643, 616) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(617, 618) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(618, 617) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(618, 621) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(621, 618) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(619, 621) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(621, 619) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(619, 622) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(622, 619) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(619, 742) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(742, 619) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(620, 622) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(622, 620) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(620, 623) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(623, 620) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(622, 649) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(649, 622) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(623, 624) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(624, 623) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(624, 627) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(627, 624) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(625, 627) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(627, 625) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(625, 628) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(628, 625) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(625, 748) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(748, 625) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(626, 628) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(628, 626) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(626, 629) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(629, 626) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(628, 655) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(655, 628) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(630, 633) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(633, 630) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(630, 659) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(659, 630) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(631, 633) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(633, 631) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(631, 634) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(634, 631) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(632, 634) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(634, 632) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(632, 635) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(635, 632) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(634, 661) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(661, 634) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(635, 636) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(636, 635) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(636, 639) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(639, 636) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(637, 639) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(639, 637) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(637, 640) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(640, 637) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(638, 640) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(640, 638) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(638, 641) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(641, 638) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(640, 667) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(667, 640) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(641, 642) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(642, 641) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(642, 645) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(645, 642) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(643, 645) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(645, 643) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(643, 646) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(646, 643) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(644, 646) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(646, 644) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(644, 647) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(647, 644) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(646, 673) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(673, 646) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(647, 648) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(648, 647) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(648, 651) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(651, 648) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(649, 651) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(651, 649) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(649, 652) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(652, 649) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(650, 652) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(652, 650) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(650, 653) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(653, 650) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(652, 679) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(679, 652) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(653, 654) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(654, 653) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(654, 657) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(657, 654) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(655, 657) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(657, 655) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(655, 658) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(658, 655) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(656, 658) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(658, 656) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(656, 659) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(659, 656) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(658, 685) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(685, 658) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(660, 663) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(663, 660) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(660, 689) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(689, 660) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(661, 663) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(663, 661) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(661, 664) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(664, 661) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(662, 664) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(664, 662) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(662, 665) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(665, 662) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(664, 691) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(691, 664) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(665, 666) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(666, 665) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(666, 669) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(669, 666) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(667, 669) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(669, 667) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(667, 670) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(670, 667) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(668, 670) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(670, 668) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(668, 671) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(671, 668) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(670, 697) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(697, 670) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(671, 672) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(672, 671) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(672, 675) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(675, 672) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(673, 675) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(675, 673) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(673, 676) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(676, 673) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(674, 676) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(676, 674) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(674, 677) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(677, 674) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(676, 703) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(703, 676) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(677, 678) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(678, 677) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(678, 681) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(681, 678) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(679, 681) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(681, 679) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(679, 682) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(682, 679) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(680, 682) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(682, 680) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(680, 683) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(683, 680) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(682, 709) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(709, 682) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(683, 684) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(684, 683) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(684, 687) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(687, 684) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(685, 687) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(687, 685) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(685, 688) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(688, 685) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(686, 688) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(688, 686) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(686, 689) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(689, 686) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(688, 715) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(715, 688) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(690, 693) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(693, 690) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(690, 719) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(719, 690) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(691, 693) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(693, 691) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(691, 694) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(694, 691) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(692, 694) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(694, 692) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(692, 695) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(695, 692) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(694, 721) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(721, 694) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(695, 696) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(696, 695) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(696, 699) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(699, 696) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(697, 699) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(699, 697) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(697, 700) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(700, 697) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(698, 700) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(700, 698) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(698, 701) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(701, 698) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(700, 727) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(727, 700) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(701, 702) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(702, 701) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(702, 705) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(705, 702) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(703, 705) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(705, 703) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(703, 706) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(706, 703) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(704, 706) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(706, 704) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(704, 707) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(707, 704) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(706, 733) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(733, 706) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(707, 708) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(708, 707) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(708, 711) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(711, 708) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(709, 711) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(711, 709) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(709, 712) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(712, 709) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(710, 712) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(712, 710) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(710, 713) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(713, 710) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(712, 739) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(739, 712) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(713, 714) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(714, 713) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(714, 717) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(717, 714) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(715, 717) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(717, 715) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(715, 718) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(718, 715) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(716, 718) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(718, 716) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(716, 719) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(719, 716) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(718, 745) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(745, 718) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(720, 723) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(723, 720) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(720, 749) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(749, 720) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(721, 723) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(723, 721) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(721, 724) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(724, 721) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(722, 724) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(724, 722) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(722, 725) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(725, 722) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(725, 726) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(726, 725) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(726, 729) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(729, 726) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(727, 729) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(729, 727) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(727, 730) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(730, 727) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(728, 730) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(730, 728) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(728, 731) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(731, 728) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(731, 732) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(732, 731) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(732, 735) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(735, 732) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(733, 735) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(735, 733) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(733, 736) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(736, 733) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(734, 736) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(736, 734) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(734, 737) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(737, 734) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(737, 738) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(738, 737) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(738, 741) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(741, 738) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(739, 741) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(741, 739) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(739, 742) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(742, 739) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(740, 742) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(742, 740) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(740, 743) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(743, 740) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(743, 744) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(744, 743) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(744, 747) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(747, 744) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(745, 747) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(747, 745) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(745, 748) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(748, 745) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(746, 748) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(748, 746) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(746, 749) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(749, 746) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   return A;
}

std::vector<int> non_zeros()
{
    std::vector<int> nz;
    int coo;
    coo = 750*0 + 3;
    nz.push_back(coo);
    coo = 750*0 + 29;
    nz.push_back(coo);
    coo = 750*0 + 603;
    nz.push_back(coo);
    coo = 750*1 + 3;
    nz.push_back(coo);
    coo = 750*1 + 4;
    nz.push_back(coo);
    coo = 750*1 + 124;
    nz.push_back(coo);
    coo = 750*2 + 4;
    nz.push_back(coo);
    coo = 750*2 + 5;
    nz.push_back(coo);
    coo = 750*2 + 185;
    nz.push_back(coo);
    coo = 750*3 + 150;
    nz.push_back(coo);
    coo = 750*4 + 31;
    nz.push_back(coo);
    coo = 750*5 + 6;
    nz.push_back(coo);
    coo = 750*5 + 722;
    nz.push_back(coo);
    coo = 750*6 + 9;
    nz.push_back(coo);
    coo = 750*6 + 609;
    nz.push_back(coo);
    coo = 750*7 + 9;
    nz.push_back(coo);
    coo = 750*7 + 10;
    nz.push_back(coo);
    coo = 750*7 + 130;
    nz.push_back(coo);
    coo = 750*8 + 10;
    nz.push_back(coo);
    coo = 750*8 + 11;
    nz.push_back(coo);
    coo = 750*8 + 191;
    nz.push_back(coo);
    coo = 750*9 + 156;
    nz.push_back(coo);
    coo = 750*10 + 37;
    nz.push_back(coo);
    coo = 750*11 + 12;
    nz.push_back(coo);
    coo = 750*11 + 728;
    nz.push_back(coo);
    coo = 750*12 + 15;
    nz.push_back(coo);
    coo = 750*12 + 615;
    nz.push_back(coo);
    coo = 750*13 + 15;
    nz.push_back(coo);
    coo = 750*13 + 16;
    nz.push_back(coo);
    coo = 750*13 + 136;
    nz.push_back(coo);
    coo = 750*14 + 16;
    nz.push_back(coo);
    coo = 750*14 + 17;
    nz.push_back(coo);
    coo = 750*14 + 197;
    nz.push_back(coo);
    coo = 750*15 + 162;
    nz.push_back(coo);
    coo = 750*16 + 43;
    nz.push_back(coo);
    coo = 750*17 + 18;
    nz.push_back(coo);
    coo = 750*17 + 734;
    nz.push_back(coo);
    coo = 750*18 + 21;
    nz.push_back(coo);
    coo = 750*18 + 621;
    nz.push_back(coo);
    coo = 750*19 + 21;
    nz.push_back(coo);
    coo = 750*19 + 22;
    nz.push_back(coo);
    coo = 750*19 + 142;
    nz.push_back(coo);
    coo = 750*20 + 22;
    nz.push_back(coo);
    coo = 750*20 + 23;
    nz.push_back(coo);
    coo = 750*20 + 203;
    nz.push_back(coo);
    coo = 750*21 + 168;
    nz.push_back(coo);
    coo = 750*22 + 49;
    nz.push_back(coo);
    coo = 750*23 + 24;
    nz.push_back(coo);
    coo = 750*23 + 740;
    nz.push_back(coo);
    coo = 750*24 + 27;
    nz.push_back(coo);
    coo = 750*24 + 627;
    nz.push_back(coo);
    coo = 750*25 + 27;
    nz.push_back(coo);
    coo = 750*25 + 28;
    nz.push_back(coo);
    coo = 750*25 + 148;
    nz.push_back(coo);
    coo = 750*26 + 28;
    nz.push_back(coo);
    coo = 750*26 + 29;
    nz.push_back(coo);
    coo = 750*26 + 209;
    nz.push_back(coo);
    coo = 750*27 + 174;
    nz.push_back(coo);
    coo = 750*28 + 55;
    nz.push_back(coo);
    coo = 750*29 + 746;
    nz.push_back(coo);
    coo = 750*30 + 33;
    nz.push_back(coo);
    coo = 750*30 + 59;
    nz.push_back(coo);
    coo = 750*30 + 633;
    nz.push_back(coo);
    coo = 750*31 + 33;
    nz.push_back(coo);
    coo = 750*31 + 34;
    nz.push_back(coo);
    coo = 750*32 + 34;
    nz.push_back(coo);
    coo = 750*32 + 35;
    nz.push_back(coo);
    coo = 750*32 + 215;
    nz.push_back(coo);
    coo = 750*33 + 180;
    nz.push_back(coo);
    coo = 750*34 + 61;
    nz.push_back(coo);
    coo = 750*35 + 36;
    nz.push_back(coo);
    coo = 750*35 + 602;
    nz.push_back(coo);
    coo = 750*36 + 39;
    nz.push_back(coo);
    coo = 750*36 + 639;
    nz.push_back(coo);
    coo = 750*37 + 39;
    nz.push_back(coo);
    coo = 750*37 + 40;
    nz.push_back(coo);
    coo = 750*38 + 40;
    nz.push_back(coo);
    coo = 750*38 + 41;
    nz.push_back(coo);
    coo = 750*38 + 221;
    nz.push_back(coo);
    coo = 750*39 + 186;
    nz.push_back(coo);
    coo = 750*40 + 67;
    nz.push_back(coo);
    coo = 750*41 + 42;
    nz.push_back(coo);
    coo = 750*41 + 608;
    nz.push_back(coo);
    coo = 750*42 + 45;
    nz.push_back(coo);
    coo = 750*42 + 645;
    nz.push_back(coo);
    coo = 750*43 + 45;
    nz.push_back(coo);
    coo = 750*43 + 46;
    nz.push_back(coo);
    coo = 750*44 + 46;
    nz.push_back(coo);
    coo = 750*44 + 47;
    nz.push_back(coo);
    coo = 750*44 + 227;
    nz.push_back(coo);
    coo = 750*45 + 192;
    nz.push_back(coo);
    coo = 750*46 + 73;
    nz.push_back(coo);
    coo = 750*47 + 48;
    nz.push_back(coo);
    coo = 750*47 + 614;
    nz.push_back(coo);
    coo = 750*48 + 51;
    nz.push_back(coo);
    coo = 750*48 + 651;
    nz.push_back(coo);
    coo = 750*49 + 51;
    nz.push_back(coo);
    coo = 750*49 + 52;
    nz.push_back(coo);
    coo = 750*50 + 52;
    nz.push_back(coo);
    coo = 750*50 + 53;
    nz.push_back(coo);
    coo = 750*50 + 233;
    nz.push_back(coo);
    coo = 750*51 + 198;
    nz.push_back(coo);
    coo = 750*52 + 79;
    nz.push_back(coo);
    coo = 750*53 + 54;
    nz.push_back(coo);
    coo = 750*53 + 620;
    nz.push_back(coo);
    coo = 750*54 + 57;
    nz.push_back(coo);
    coo = 750*54 + 657;
    nz.push_back(coo);
    coo = 750*55 + 57;
    nz.push_back(coo);
    coo = 750*55 + 58;
    nz.push_back(coo);
    coo = 750*56 + 58;
    nz.push_back(coo);
    coo = 750*56 + 59;
    nz.push_back(coo);
    coo = 750*56 + 239;
    nz.push_back(coo);
    coo = 750*57 + 204;
    nz.push_back(coo);
    coo = 750*58 + 85;
    nz.push_back(coo);
    coo = 750*59 + 626;
    nz.push_back(coo);
    coo = 750*60 + 63;
    nz.push_back(coo);
    coo = 750*60 + 89;
    nz.push_back(coo);
    coo = 750*60 + 663;
    nz.push_back(coo);
    coo = 750*61 + 63;
    nz.push_back(coo);
    coo = 750*61 + 64;
    nz.push_back(coo);
    coo = 750*62 + 64;
    nz.push_back(coo);
    coo = 750*62 + 65;
    nz.push_back(coo);
    coo = 750*62 + 245;
    nz.push_back(coo);
    coo = 750*63 + 210;
    nz.push_back(coo);
    coo = 750*64 + 91;
    nz.push_back(coo);
    coo = 750*65 + 66;
    nz.push_back(coo);
    coo = 750*65 + 632;
    nz.push_back(coo);
    coo = 750*66 + 69;
    nz.push_back(coo);
    coo = 750*66 + 669;
    nz.push_back(coo);
    coo = 750*67 + 69;
    nz.push_back(coo);
    coo = 750*67 + 70;
    nz.push_back(coo);
    coo = 750*68 + 70;
    nz.push_back(coo);
    coo = 750*68 + 71;
    nz.push_back(coo);
    coo = 750*68 + 251;
    nz.push_back(coo);
    coo = 750*69 + 216;
    nz.push_back(coo);
    coo = 750*70 + 97;
    nz.push_back(coo);
    coo = 750*71 + 72;
    nz.push_back(coo);
    coo = 750*71 + 638;
    nz.push_back(coo);
    coo = 750*72 + 75;
    nz.push_back(coo);
    coo = 750*72 + 675;
    nz.push_back(coo);
    coo = 750*73 + 75;
    nz.push_back(coo);
    coo = 750*73 + 76;
    nz.push_back(coo);
    coo = 750*74 + 76;
    nz.push_back(coo);
    coo = 750*74 + 77;
    nz.push_back(coo);
    coo = 750*74 + 257;
    nz.push_back(coo);
    coo = 750*75 + 222;
    nz.push_back(coo);
    coo = 750*76 + 103;
    nz.push_back(coo);
    coo = 750*77 + 78;
    nz.push_back(coo);
    coo = 750*77 + 644;
    nz.push_back(coo);
    coo = 750*78 + 81;
    nz.push_back(coo);
    coo = 750*78 + 681;
    nz.push_back(coo);
    coo = 750*79 + 81;
    nz.push_back(coo);
    coo = 750*79 + 82;
    nz.push_back(coo);
    coo = 750*80 + 82;
    nz.push_back(coo);
    coo = 750*80 + 83;
    nz.push_back(coo);
    coo = 750*80 + 263;
    nz.push_back(coo);
    coo = 750*81 + 228;
    nz.push_back(coo);
    coo = 750*82 + 109;
    nz.push_back(coo);
    coo = 750*83 + 84;
    nz.push_back(coo);
    coo = 750*83 + 650;
    nz.push_back(coo);
    coo = 750*84 + 87;
    nz.push_back(coo);
    coo = 750*84 + 687;
    nz.push_back(coo);
    coo = 750*85 + 87;
    nz.push_back(coo);
    coo = 750*85 + 88;
    nz.push_back(coo);
    coo = 750*86 + 88;
    nz.push_back(coo);
    coo = 750*86 + 89;
    nz.push_back(coo);
    coo = 750*86 + 269;
    nz.push_back(coo);
    coo = 750*87 + 234;
    nz.push_back(coo);
    coo = 750*88 + 115;
    nz.push_back(coo);
    coo = 750*89 + 656;
    nz.push_back(coo);
    coo = 750*90 + 93;
    nz.push_back(coo);
    coo = 750*90 + 119;
    nz.push_back(coo);
    coo = 750*90 + 693;
    nz.push_back(coo);
    coo = 750*91 + 93;
    nz.push_back(coo);
    coo = 750*91 + 94;
    nz.push_back(coo);
    coo = 750*92 + 94;
    nz.push_back(coo);
    coo = 750*92 + 95;
    nz.push_back(coo);
    coo = 750*92 + 275;
    nz.push_back(coo);
    coo = 750*93 + 240;
    nz.push_back(coo);
    coo = 750*94 + 121;
    nz.push_back(coo);
    coo = 750*95 + 96;
    nz.push_back(coo);
    coo = 750*95 + 662;
    nz.push_back(coo);
    coo = 750*96 + 99;
    nz.push_back(coo);
    coo = 750*96 + 699;
    nz.push_back(coo);
    coo = 750*97 + 99;
    nz.push_back(coo);
    coo = 750*97 + 100;
    nz.push_back(coo);
    coo = 750*98 + 100;
    nz.push_back(coo);
    coo = 750*98 + 101;
    nz.push_back(coo);
    coo = 750*98 + 281;
    nz.push_back(coo);
    coo = 750*99 + 246;
    nz.push_back(coo);
    coo = 750*100 + 127;
    nz.push_back(coo);
    coo = 750*101 + 102;
    nz.push_back(coo);
    coo = 750*101 + 668;
    nz.push_back(coo);
    coo = 750*102 + 105;
    nz.push_back(coo);
    coo = 750*102 + 705;
    nz.push_back(coo);
    coo = 750*103 + 105;
    nz.push_back(coo);
    coo = 750*103 + 106;
    nz.push_back(coo);
    coo = 750*104 + 106;
    nz.push_back(coo);
    coo = 750*104 + 107;
    nz.push_back(coo);
    coo = 750*104 + 287;
    nz.push_back(coo);
    coo = 750*105 + 252;
    nz.push_back(coo);
    coo = 750*106 + 133;
    nz.push_back(coo);
    coo = 750*107 + 108;
    nz.push_back(coo);
    coo = 750*107 + 674;
    nz.push_back(coo);
    coo = 750*108 + 111;
    nz.push_back(coo);
    coo = 750*108 + 711;
    nz.push_back(coo);
    coo = 750*109 + 111;
    nz.push_back(coo);
    coo = 750*109 + 112;
    nz.push_back(coo);
    coo = 750*110 + 112;
    nz.push_back(coo);
    coo = 750*110 + 113;
    nz.push_back(coo);
    coo = 750*110 + 293;
    nz.push_back(coo);
    coo = 750*111 + 258;
    nz.push_back(coo);
    coo = 750*112 + 139;
    nz.push_back(coo);
    coo = 750*113 + 114;
    nz.push_back(coo);
    coo = 750*113 + 680;
    nz.push_back(coo);
    coo = 750*114 + 117;
    nz.push_back(coo);
    coo = 750*114 + 717;
    nz.push_back(coo);
    coo = 750*115 + 117;
    nz.push_back(coo);
    coo = 750*115 + 118;
    nz.push_back(coo);
    coo = 750*116 + 118;
    nz.push_back(coo);
    coo = 750*116 + 119;
    nz.push_back(coo);
    coo = 750*116 + 299;
    nz.push_back(coo);
    coo = 750*117 + 264;
    nz.push_back(coo);
    coo = 750*118 + 145;
    nz.push_back(coo);
    coo = 750*119 + 686;
    nz.push_back(coo);
    coo = 750*120 + 123;
    nz.push_back(coo);
    coo = 750*120 + 149;
    nz.push_back(coo);
    coo = 750*120 + 723;
    nz.push_back(coo);
    coo = 750*121 + 123;
    nz.push_back(coo);
    coo = 750*121 + 124;
    nz.push_back(coo);
    coo = 750*122 + 124;
    nz.push_back(coo);
    coo = 750*122 + 125;
    nz.push_back(coo);
    coo = 750*122 + 155;
    nz.push_back(coo);
    coo = 750*123 + 270;
    nz.push_back(coo);
    coo = 750*125 + 126;
    nz.push_back(coo);
    coo = 750*125 + 692;
    nz.push_back(coo);
    coo = 750*126 + 129;
    nz.push_back(coo);
    coo = 750*126 + 729;
    nz.push_back(coo);
    coo = 750*127 + 129;
    nz.push_back(coo);
    coo = 750*127 + 130;
    nz.push_back(coo);
    coo = 750*128 + 130;
    nz.push_back(coo);
    coo = 750*128 + 131;
    nz.push_back(coo);
    coo = 750*128 + 161;
    nz.push_back(coo);
    coo = 750*129 + 276;
    nz.push_back(coo);
    coo = 750*131 + 132;
    nz.push_back(coo);
    coo = 750*131 + 698;
    nz.push_back(coo);
    coo = 750*132 + 135;
    nz.push_back(coo);
    coo = 750*132 + 735;
    nz.push_back(coo);
    coo = 750*133 + 135;
    nz.push_back(coo);
    coo = 750*133 + 136;
    nz.push_back(coo);
    coo = 750*134 + 136;
    nz.push_back(coo);
    coo = 750*134 + 137;
    nz.push_back(coo);
    coo = 750*134 + 167;
    nz.push_back(coo);
    coo = 750*135 + 282;
    nz.push_back(coo);
    coo = 750*137 + 138;
    nz.push_back(coo);
    coo = 750*137 + 704;
    nz.push_back(coo);
    coo = 750*138 + 141;
    nz.push_back(coo);
    coo = 750*138 + 741;
    nz.push_back(coo);
    coo = 750*139 + 141;
    nz.push_back(coo);
    coo = 750*139 + 142;
    nz.push_back(coo);
    coo = 750*140 + 142;
    nz.push_back(coo);
    coo = 750*140 + 143;
    nz.push_back(coo);
    coo = 750*140 + 173;
    nz.push_back(coo);
    coo = 750*141 + 288;
    nz.push_back(coo);
    coo = 750*143 + 144;
    nz.push_back(coo);
    coo = 750*143 + 710;
    nz.push_back(coo);
    coo = 750*144 + 147;
    nz.push_back(coo);
    coo = 750*144 + 747;
    nz.push_back(coo);
    coo = 750*145 + 147;
    nz.push_back(coo);
    coo = 750*145 + 148;
    nz.push_back(coo);
    coo = 750*146 + 148;
    nz.push_back(coo);
    coo = 750*146 + 149;
    nz.push_back(coo);
    coo = 750*146 + 179;
    nz.push_back(coo);
    coo = 750*147 + 294;
    nz.push_back(coo);
    coo = 750*149 + 716;
    nz.push_back(coo);
    coo = 750*150 + 153;
    nz.push_back(coo);
    coo = 750*150 + 179;
    nz.push_back(coo);
    coo = 750*151 + 153;
    nz.push_back(coo);
    coo = 750*151 + 154;
    nz.push_back(coo);
    coo = 750*151 + 274;
    nz.push_back(coo);
    coo = 750*152 + 154;
    nz.push_back(coo);
    coo = 750*152 + 155;
    nz.push_back(coo);
    coo = 750*152 + 335;
    nz.push_back(coo);
    coo = 750*153 + 300;
    nz.push_back(coo);
    coo = 750*154 + 181;
    nz.push_back(coo);
    coo = 750*155 + 156;
    nz.push_back(coo);
    coo = 750*156 + 159;
    nz.push_back(coo);
    coo = 750*157 + 159;
    nz.push_back(coo);
    coo = 750*157 + 160;
    nz.push_back(coo);
    coo = 750*157 + 280;
    nz.push_back(coo);
    coo = 750*158 + 160;
    nz.push_back(coo);
    coo = 750*158 + 161;
    nz.push_back(coo);
    coo = 750*158 + 341;
    nz.push_back(coo);
    coo = 750*159 + 306;
    nz.push_back(coo);
    coo = 750*160 + 187;
    nz.push_back(coo);
    coo = 750*161 + 162;
    nz.push_back(coo);
    coo = 750*162 + 165;
    nz.push_back(coo);
    coo = 750*163 + 165;
    nz.push_back(coo);
    coo = 750*163 + 166;
    nz.push_back(coo);
    coo = 750*163 + 286;
    nz.push_back(coo);
    coo = 750*164 + 166;
    nz.push_back(coo);
    coo = 750*164 + 167;
    nz.push_back(coo);
    coo = 750*164 + 347;
    nz.push_back(coo);
    coo = 750*165 + 312;
    nz.push_back(coo);
    coo = 750*166 + 193;
    nz.push_back(coo);
    coo = 750*167 + 168;
    nz.push_back(coo);
    coo = 750*168 + 171;
    nz.push_back(coo);
    coo = 750*169 + 171;
    nz.push_back(coo);
    coo = 750*169 + 172;
    nz.push_back(coo);
    coo = 750*169 + 292;
    nz.push_back(coo);
    coo = 750*170 + 172;
    nz.push_back(coo);
    coo = 750*170 + 173;
    nz.push_back(coo);
    coo = 750*170 + 353;
    nz.push_back(coo);
    coo = 750*171 + 318;
    nz.push_back(coo);
    coo = 750*172 + 199;
    nz.push_back(coo);
    coo = 750*173 + 174;
    nz.push_back(coo);
    coo = 750*174 + 177;
    nz.push_back(coo);
    coo = 750*175 + 177;
    nz.push_back(coo);
    coo = 750*175 + 178;
    nz.push_back(coo);
    coo = 750*175 + 298;
    nz.push_back(coo);
    coo = 750*176 + 178;
    nz.push_back(coo);
    coo = 750*176 + 179;
    nz.push_back(coo);
    coo = 750*176 + 359;
    nz.push_back(coo);
    coo = 750*177 + 324;
    nz.push_back(coo);
    coo = 750*178 + 205;
    nz.push_back(coo);
    coo = 750*180 + 183;
    nz.push_back(coo);
    coo = 750*180 + 209;
    nz.push_back(coo);
    coo = 750*181 + 183;
    nz.push_back(coo);
    coo = 750*181 + 184;
    nz.push_back(coo);
    coo = 750*182 + 184;
    nz.push_back(coo);
    coo = 750*182 + 185;
    nz.push_back(coo);
    coo = 750*182 + 365;
    nz.push_back(coo);
    coo = 750*183 + 330;
    nz.push_back(coo);
    coo = 750*184 + 211;
    nz.push_back(coo);
    coo = 750*185 + 186;
    nz.push_back(coo);
    coo = 750*186 + 189;
    nz.push_back(coo);
    coo = 750*187 + 189;
    nz.push_back(coo);
    coo = 750*187 + 190;
    nz.push_back(coo);
    coo = 750*188 + 190;
    nz.push_back(coo);
    coo = 750*188 + 191;
    nz.push_back(coo);
    coo = 750*188 + 371;
    nz.push_back(coo);
    coo = 750*189 + 336;
    nz.push_back(coo);
    coo = 750*190 + 217;
    nz.push_back(coo);
    coo = 750*191 + 192;
    nz.push_back(coo);
    coo = 750*192 + 195;
    nz.push_back(coo);
    coo = 750*193 + 195;
    nz.push_back(coo);
    coo = 750*193 + 196;
    nz.push_back(coo);
    coo = 750*194 + 196;
    nz.push_back(coo);
    coo = 750*194 + 197;
    nz.push_back(coo);
    coo = 750*194 + 377;
    nz.push_back(coo);
    coo = 750*195 + 342;
    nz.push_back(coo);
    coo = 750*196 + 223;
    nz.push_back(coo);
    coo = 750*197 + 198;
    nz.push_back(coo);
    coo = 750*198 + 201;
    nz.push_back(coo);
    coo = 750*199 + 201;
    nz.push_back(coo);
    coo = 750*199 + 202;
    nz.push_back(coo);
    coo = 750*200 + 202;
    nz.push_back(coo);
    coo = 750*200 + 203;
    nz.push_back(coo);
    coo = 750*200 + 383;
    nz.push_back(coo);
    coo = 750*201 + 348;
    nz.push_back(coo);
    coo = 750*202 + 229;
    nz.push_back(coo);
    coo = 750*203 + 204;
    nz.push_back(coo);
    coo = 750*204 + 207;
    nz.push_back(coo);
    coo = 750*205 + 207;
    nz.push_back(coo);
    coo = 750*205 + 208;
    nz.push_back(coo);
    coo = 750*206 + 208;
    nz.push_back(coo);
    coo = 750*206 + 209;
    nz.push_back(coo);
    coo = 750*206 + 389;
    nz.push_back(coo);
    coo = 750*207 + 354;
    nz.push_back(coo);
    coo = 750*208 + 235;
    nz.push_back(coo);
    coo = 750*210 + 213;
    nz.push_back(coo);
    coo = 750*210 + 239;
    nz.push_back(coo);
    coo = 750*211 + 213;
    nz.push_back(coo);
    coo = 750*211 + 214;
    nz.push_back(coo);
    coo = 750*212 + 214;
    nz.push_back(coo);
    coo = 750*212 + 215;
    nz.push_back(coo);
    coo = 750*212 + 395;
    nz.push_back(coo);
    coo = 750*213 + 360;
    nz.push_back(coo);
    coo = 750*214 + 241;
    nz.push_back(coo);
    coo = 750*215 + 216;
    nz.push_back(coo);
    coo = 750*216 + 219;
    nz.push_back(coo);
    coo = 750*217 + 219;
    nz.push_back(coo);
    coo = 750*217 + 220;
    nz.push_back(coo);
    coo = 750*218 + 220;
    nz.push_back(coo);
    coo = 750*218 + 221;
    nz.push_back(coo);
    coo = 750*218 + 401;
    nz.push_back(coo);
    coo = 750*219 + 366;
    nz.push_back(coo);
    coo = 750*220 + 247;
    nz.push_back(coo);
    coo = 750*221 + 222;
    nz.push_back(coo);
    coo = 750*222 + 225;
    nz.push_back(coo);
    coo = 750*223 + 225;
    nz.push_back(coo);
    coo = 750*223 + 226;
    nz.push_back(coo);
    coo = 750*224 + 226;
    nz.push_back(coo);
    coo = 750*224 + 227;
    nz.push_back(coo);
    coo = 750*224 + 407;
    nz.push_back(coo);
    coo = 750*225 + 372;
    nz.push_back(coo);
    coo = 750*226 + 253;
    nz.push_back(coo);
    coo = 750*227 + 228;
    nz.push_back(coo);
    coo = 750*228 + 231;
    nz.push_back(coo);
    coo = 750*229 + 231;
    nz.push_back(coo);
    coo = 750*229 + 232;
    nz.push_back(coo);
    coo = 750*230 + 232;
    nz.push_back(coo);
    coo = 750*230 + 233;
    nz.push_back(coo);
    coo = 750*230 + 413;
    nz.push_back(coo);
    coo = 750*231 + 378;
    nz.push_back(coo);
    coo = 750*232 + 259;
    nz.push_back(coo);
    coo = 750*233 + 234;
    nz.push_back(coo);
    coo = 750*234 + 237;
    nz.push_back(coo);
    coo = 750*235 + 237;
    nz.push_back(coo);
    coo = 750*235 + 238;
    nz.push_back(coo);
    coo = 750*236 + 238;
    nz.push_back(coo);
    coo = 750*236 + 239;
    nz.push_back(coo);
    coo = 750*236 + 419;
    nz.push_back(coo);
    coo = 750*237 + 384;
    nz.push_back(coo);
    coo = 750*238 + 265;
    nz.push_back(coo);
    coo = 750*240 + 243;
    nz.push_back(coo);
    coo = 750*240 + 269;
    nz.push_back(coo);
    coo = 750*241 + 243;
    nz.push_back(coo);
    coo = 750*241 + 244;
    nz.push_back(coo);
    coo = 750*242 + 244;
    nz.push_back(coo);
    coo = 750*242 + 245;
    nz.push_back(coo);
    coo = 750*242 + 425;
    nz.push_back(coo);
    coo = 750*243 + 390;
    nz.push_back(coo);
    coo = 750*244 + 271;
    nz.push_back(coo);
    coo = 750*245 + 246;
    nz.push_back(coo);
    coo = 750*246 + 249;
    nz.push_back(coo);
    coo = 750*247 + 249;
    nz.push_back(coo);
    coo = 750*247 + 250;
    nz.push_back(coo);
    coo = 750*248 + 250;
    nz.push_back(coo);
    coo = 750*248 + 251;
    nz.push_back(coo);
    coo = 750*248 + 431;
    nz.push_back(coo);
    coo = 750*249 + 396;
    nz.push_back(coo);
    coo = 750*250 + 277;
    nz.push_back(coo);
    coo = 750*251 + 252;
    nz.push_back(coo);
    coo = 750*252 + 255;
    nz.push_back(coo);
    coo = 750*253 + 255;
    nz.push_back(coo);
    coo = 750*253 + 256;
    nz.push_back(coo);
    coo = 750*254 + 256;
    nz.push_back(coo);
    coo = 750*254 + 257;
    nz.push_back(coo);
    coo = 750*254 + 437;
    nz.push_back(coo);
    coo = 750*255 + 402;
    nz.push_back(coo);
    coo = 750*256 + 283;
    nz.push_back(coo);
    coo = 750*257 + 258;
    nz.push_back(coo);
    coo = 750*258 + 261;
    nz.push_back(coo);
    coo = 750*259 + 261;
    nz.push_back(coo);
    coo = 750*259 + 262;
    nz.push_back(coo);
    coo = 750*260 + 262;
    nz.push_back(coo);
    coo = 750*260 + 263;
    nz.push_back(coo);
    coo = 750*260 + 443;
    nz.push_back(coo);
    coo = 750*261 + 408;
    nz.push_back(coo);
    coo = 750*262 + 289;
    nz.push_back(coo);
    coo = 750*263 + 264;
    nz.push_back(coo);
    coo = 750*264 + 267;
    nz.push_back(coo);
    coo = 750*265 + 267;
    nz.push_back(coo);
    coo = 750*265 + 268;
    nz.push_back(coo);
    coo = 750*266 + 268;
    nz.push_back(coo);
    coo = 750*266 + 269;
    nz.push_back(coo);
    coo = 750*266 + 449;
    nz.push_back(coo);
    coo = 750*267 + 414;
    nz.push_back(coo);
    coo = 750*268 + 295;
    nz.push_back(coo);
    coo = 750*270 + 273;
    nz.push_back(coo);
    coo = 750*270 + 299;
    nz.push_back(coo);
    coo = 750*271 + 273;
    nz.push_back(coo);
    coo = 750*271 + 274;
    nz.push_back(coo);
    coo = 750*272 + 274;
    nz.push_back(coo);
    coo = 750*272 + 275;
    nz.push_back(coo);
    coo = 750*272 + 305;
    nz.push_back(coo);
    coo = 750*273 + 420;
    nz.push_back(coo);
    coo = 750*275 + 276;
    nz.push_back(coo);
    coo = 750*276 + 279;
    nz.push_back(coo);
    coo = 750*277 + 279;
    nz.push_back(coo);
    coo = 750*277 + 280;
    nz.push_back(coo);
    coo = 750*278 + 280;
    nz.push_back(coo);
    coo = 750*278 + 281;
    nz.push_back(coo);
    coo = 750*278 + 311;
    nz.push_back(coo);
    coo = 750*279 + 426;
    nz.push_back(coo);
    coo = 750*281 + 282;
    nz.push_back(coo);
    coo = 750*282 + 285;
    nz.push_back(coo);
    coo = 750*283 + 285;
    nz.push_back(coo);
    coo = 750*283 + 286;
    nz.push_back(coo);
    coo = 750*284 + 286;
    nz.push_back(coo);
    coo = 750*284 + 287;
    nz.push_back(coo);
    coo = 750*284 + 317;
    nz.push_back(coo);
    coo = 750*285 + 432;
    nz.push_back(coo);
    coo = 750*287 + 288;
    nz.push_back(coo);
    coo = 750*288 + 291;
    nz.push_back(coo);
    coo = 750*289 + 291;
    nz.push_back(coo);
    coo = 750*289 + 292;
    nz.push_back(coo);
    coo = 750*290 + 292;
    nz.push_back(coo);
    coo = 750*290 + 293;
    nz.push_back(coo);
    coo = 750*290 + 323;
    nz.push_back(coo);
    coo = 750*291 + 438;
    nz.push_back(coo);
    coo = 750*293 + 294;
    nz.push_back(coo);
    coo = 750*294 + 297;
    nz.push_back(coo);
    coo = 750*295 + 297;
    nz.push_back(coo);
    coo = 750*295 + 298;
    nz.push_back(coo);
    coo = 750*296 + 298;
    nz.push_back(coo);
    coo = 750*296 + 299;
    nz.push_back(coo);
    coo = 750*296 + 329;
    nz.push_back(coo);
    coo = 750*297 + 444;
    nz.push_back(coo);
    coo = 750*300 + 303;
    nz.push_back(coo);
    coo = 750*300 + 329;
    nz.push_back(coo);
    coo = 750*301 + 303;
    nz.push_back(coo);
    coo = 750*301 + 304;
    nz.push_back(coo);
    coo = 750*301 + 424;
    nz.push_back(coo);
    coo = 750*302 + 304;
    nz.push_back(coo);
    coo = 750*302 + 305;
    nz.push_back(coo);
    coo = 750*302 + 485;
    nz.push_back(coo);
    coo = 750*303 + 450;
    nz.push_back(coo);
    coo = 750*304 + 331;
    nz.push_back(coo);
    coo = 750*305 + 306;
    nz.push_back(coo);
    coo = 750*306 + 309;
    nz.push_back(coo);
    coo = 750*307 + 309;
    nz.push_back(coo);
    coo = 750*307 + 310;
    nz.push_back(coo);
    coo = 750*307 + 430;
    nz.push_back(coo);
    coo = 750*308 + 310;
    nz.push_back(coo);
    coo = 750*308 + 311;
    nz.push_back(coo);
    coo = 750*308 + 491;
    nz.push_back(coo);
    coo = 750*309 + 456;
    nz.push_back(coo);
    coo = 750*310 + 337;
    nz.push_back(coo);
    coo = 750*311 + 312;
    nz.push_back(coo);
    coo = 750*312 + 315;
    nz.push_back(coo);
    coo = 750*313 + 315;
    nz.push_back(coo);
    coo = 750*313 + 316;
    nz.push_back(coo);
    coo = 750*313 + 436;
    nz.push_back(coo);
    coo = 750*314 + 316;
    nz.push_back(coo);
    coo = 750*314 + 317;
    nz.push_back(coo);
    coo = 750*314 + 497;
    nz.push_back(coo);
    coo = 750*315 + 462;
    nz.push_back(coo);
    coo = 750*316 + 343;
    nz.push_back(coo);
    coo = 750*317 + 318;
    nz.push_back(coo);
    coo = 750*318 + 321;
    nz.push_back(coo);
    coo = 750*319 + 321;
    nz.push_back(coo);
    coo = 750*319 + 322;
    nz.push_back(coo);
    coo = 750*319 + 442;
    nz.push_back(coo);
    coo = 750*320 + 322;
    nz.push_back(coo);
    coo = 750*320 + 323;
    nz.push_back(coo);
    coo = 750*320 + 503;
    nz.push_back(coo);
    coo = 750*321 + 468;
    nz.push_back(coo);
    coo = 750*322 + 349;
    nz.push_back(coo);
    coo = 750*323 + 324;
    nz.push_back(coo);
    coo = 750*324 + 327;
    nz.push_back(coo);
    coo = 750*325 + 327;
    nz.push_back(coo);
    coo = 750*325 + 328;
    nz.push_back(coo);
    coo = 750*325 + 448;
    nz.push_back(coo);
    coo = 750*326 + 328;
    nz.push_back(coo);
    coo = 750*326 + 329;
    nz.push_back(coo);
    coo = 750*326 + 509;
    nz.push_back(coo);
    coo = 750*327 + 474;
    nz.push_back(coo);
    coo = 750*328 + 355;
    nz.push_back(coo);
    coo = 750*330 + 333;
    nz.push_back(coo);
    coo = 750*330 + 359;
    nz.push_back(coo);
    coo = 750*331 + 333;
    nz.push_back(coo);
    coo = 750*331 + 334;
    nz.push_back(coo);
    coo = 750*332 + 334;
    nz.push_back(coo);
    coo = 750*332 + 335;
    nz.push_back(coo);
    coo = 750*332 + 515;
    nz.push_back(coo);
    coo = 750*333 + 480;
    nz.push_back(coo);
    coo = 750*334 + 361;
    nz.push_back(coo);
    coo = 750*335 + 336;
    nz.push_back(coo);
    coo = 750*336 + 339;
    nz.push_back(coo);
    coo = 750*337 + 339;
    nz.push_back(coo);
    coo = 750*337 + 340;
    nz.push_back(coo);
    coo = 750*338 + 340;
    nz.push_back(coo);
    coo = 750*338 + 341;
    nz.push_back(coo);
    coo = 750*338 + 521;
    nz.push_back(coo);
    coo = 750*339 + 486;
    nz.push_back(coo);
    coo = 750*340 + 367;
    nz.push_back(coo);
    coo = 750*341 + 342;
    nz.push_back(coo);
    coo = 750*342 + 345;
    nz.push_back(coo);
    coo = 750*343 + 345;
    nz.push_back(coo);
    coo = 750*343 + 346;
    nz.push_back(coo);
    coo = 750*344 + 346;
    nz.push_back(coo);
    coo = 750*344 + 347;
    nz.push_back(coo);
    coo = 750*344 + 527;
    nz.push_back(coo);
    coo = 750*345 + 492;
    nz.push_back(coo);
    coo = 750*346 + 373;
    nz.push_back(coo);
    coo = 750*347 + 348;
    nz.push_back(coo);
    coo = 750*348 + 351;
    nz.push_back(coo);
    coo = 750*349 + 351;
    nz.push_back(coo);
    coo = 750*349 + 352;
    nz.push_back(coo);
    coo = 750*350 + 352;
    nz.push_back(coo);
    coo = 750*350 + 353;
    nz.push_back(coo);
    coo = 750*350 + 533;
    nz.push_back(coo);
    coo = 750*351 + 498;
    nz.push_back(coo);
    coo = 750*352 + 379;
    nz.push_back(coo);
    coo = 750*353 + 354;
    nz.push_back(coo);
    coo = 750*354 + 357;
    nz.push_back(coo);
    coo = 750*355 + 357;
    nz.push_back(coo);
    coo = 750*355 + 358;
    nz.push_back(coo);
    coo = 750*356 + 358;
    nz.push_back(coo);
    coo = 750*356 + 359;
    nz.push_back(coo);
    coo = 750*356 + 539;
    nz.push_back(coo);
    coo = 750*357 + 504;
    nz.push_back(coo);
    coo = 750*358 + 385;
    nz.push_back(coo);
    coo = 750*360 + 363;
    nz.push_back(coo);
    coo = 750*360 + 389;
    nz.push_back(coo);
    coo = 750*361 + 363;
    nz.push_back(coo);
    coo = 750*361 + 364;
    nz.push_back(coo);
    coo = 750*362 + 364;
    nz.push_back(coo);
    coo = 750*362 + 365;
    nz.push_back(coo);
    coo = 750*362 + 545;
    nz.push_back(coo);
    coo = 750*363 + 510;
    nz.push_back(coo);
    coo = 750*364 + 391;
    nz.push_back(coo);
    coo = 750*365 + 366;
    nz.push_back(coo);
    coo = 750*366 + 369;
    nz.push_back(coo);
    coo = 750*367 + 369;
    nz.push_back(coo);
    coo = 750*367 + 370;
    nz.push_back(coo);
    coo = 750*368 + 370;
    nz.push_back(coo);
    coo = 750*368 + 371;
    nz.push_back(coo);
    coo = 750*368 + 551;
    nz.push_back(coo);
    coo = 750*369 + 516;
    nz.push_back(coo);
    coo = 750*370 + 397;
    nz.push_back(coo);
    coo = 750*371 + 372;
    nz.push_back(coo);
    coo = 750*372 + 375;
    nz.push_back(coo);
    coo = 750*373 + 375;
    nz.push_back(coo);
    coo = 750*373 + 376;
    nz.push_back(coo);
    coo = 750*374 + 376;
    nz.push_back(coo);
    coo = 750*374 + 377;
    nz.push_back(coo);
    coo = 750*374 + 557;
    nz.push_back(coo);
    coo = 750*375 + 522;
    nz.push_back(coo);
    coo = 750*376 + 403;
    nz.push_back(coo);
    coo = 750*377 + 378;
    nz.push_back(coo);
    coo = 750*378 + 381;
    nz.push_back(coo);
    coo = 750*379 + 381;
    nz.push_back(coo);
    coo = 750*379 + 382;
    nz.push_back(coo);
    coo = 750*380 + 382;
    nz.push_back(coo);
    coo = 750*380 + 383;
    nz.push_back(coo);
    coo = 750*380 + 563;
    nz.push_back(coo);
    coo = 750*381 + 528;
    nz.push_back(coo);
    coo = 750*382 + 409;
    nz.push_back(coo);
    coo = 750*383 + 384;
    nz.push_back(coo);
    coo = 750*384 + 387;
    nz.push_back(coo);
    coo = 750*385 + 387;
    nz.push_back(coo);
    coo = 750*385 + 388;
    nz.push_back(coo);
    coo = 750*386 + 388;
    nz.push_back(coo);
    coo = 750*386 + 389;
    nz.push_back(coo);
    coo = 750*386 + 569;
    nz.push_back(coo);
    coo = 750*387 + 534;
    nz.push_back(coo);
    coo = 750*388 + 415;
    nz.push_back(coo);
    coo = 750*390 + 393;
    nz.push_back(coo);
    coo = 750*390 + 419;
    nz.push_back(coo);
    coo = 750*391 + 393;
    nz.push_back(coo);
    coo = 750*391 + 394;
    nz.push_back(coo);
    coo = 750*392 + 394;
    nz.push_back(coo);
    coo = 750*392 + 395;
    nz.push_back(coo);
    coo = 750*392 + 575;
    nz.push_back(coo);
    coo = 750*393 + 540;
    nz.push_back(coo);
    coo = 750*394 + 421;
    nz.push_back(coo);
    coo = 750*395 + 396;
    nz.push_back(coo);
    coo = 750*396 + 399;
    nz.push_back(coo);
    coo = 750*397 + 399;
    nz.push_back(coo);
    coo = 750*397 + 400;
    nz.push_back(coo);
    coo = 750*398 + 400;
    nz.push_back(coo);
    coo = 750*398 + 401;
    nz.push_back(coo);
    coo = 750*398 + 581;
    nz.push_back(coo);
    coo = 750*399 + 546;
    nz.push_back(coo);
    coo = 750*400 + 427;
    nz.push_back(coo);
    coo = 750*401 + 402;
    nz.push_back(coo);
    coo = 750*402 + 405;
    nz.push_back(coo);
    coo = 750*403 + 405;
    nz.push_back(coo);
    coo = 750*403 + 406;
    nz.push_back(coo);
    coo = 750*404 + 406;
    nz.push_back(coo);
    coo = 750*404 + 407;
    nz.push_back(coo);
    coo = 750*404 + 587;
    nz.push_back(coo);
    coo = 750*405 + 552;
    nz.push_back(coo);
    coo = 750*406 + 433;
    nz.push_back(coo);
    coo = 750*407 + 408;
    nz.push_back(coo);
    coo = 750*408 + 411;
    nz.push_back(coo);
    coo = 750*409 + 411;
    nz.push_back(coo);
    coo = 750*409 + 412;
    nz.push_back(coo);
    coo = 750*410 + 412;
    nz.push_back(coo);
    coo = 750*410 + 413;
    nz.push_back(coo);
    coo = 750*410 + 593;
    nz.push_back(coo);
    coo = 750*411 + 558;
    nz.push_back(coo);
    coo = 750*412 + 439;
    nz.push_back(coo);
    coo = 750*413 + 414;
    nz.push_back(coo);
    coo = 750*414 + 417;
    nz.push_back(coo);
    coo = 750*415 + 417;
    nz.push_back(coo);
    coo = 750*415 + 418;
    nz.push_back(coo);
    coo = 750*416 + 418;
    nz.push_back(coo);
    coo = 750*416 + 419;
    nz.push_back(coo);
    coo = 750*416 + 599;
    nz.push_back(coo);
    coo = 750*417 + 564;
    nz.push_back(coo);
    coo = 750*418 + 445;
    nz.push_back(coo);
    coo = 750*420 + 423;
    nz.push_back(coo);
    coo = 750*420 + 449;
    nz.push_back(coo);
    coo = 750*421 + 423;
    nz.push_back(coo);
    coo = 750*421 + 424;
    nz.push_back(coo);
    coo = 750*422 + 424;
    nz.push_back(coo);
    coo = 750*422 + 425;
    nz.push_back(coo);
    coo = 750*422 + 455;
    nz.push_back(coo);
    coo = 750*423 + 570;
    nz.push_back(coo);
    coo = 750*425 + 426;
    nz.push_back(coo);
    coo = 750*426 + 429;
    nz.push_back(coo);
    coo = 750*427 + 429;
    nz.push_back(coo);
    coo = 750*427 + 430;
    nz.push_back(coo);
    coo = 750*428 + 430;
    nz.push_back(coo);
    coo = 750*428 + 431;
    nz.push_back(coo);
    coo = 750*428 + 461;
    nz.push_back(coo);
    coo = 750*429 + 576;
    nz.push_back(coo);
    coo = 750*431 + 432;
    nz.push_back(coo);
    coo = 750*432 + 435;
    nz.push_back(coo);
    coo = 750*433 + 435;
    nz.push_back(coo);
    coo = 750*433 + 436;
    nz.push_back(coo);
    coo = 750*434 + 436;
    nz.push_back(coo);
    coo = 750*434 + 437;
    nz.push_back(coo);
    coo = 750*434 + 467;
    nz.push_back(coo);
    coo = 750*435 + 582;
    nz.push_back(coo);
    coo = 750*437 + 438;
    nz.push_back(coo);
    coo = 750*438 + 441;
    nz.push_back(coo);
    coo = 750*439 + 441;
    nz.push_back(coo);
    coo = 750*439 + 442;
    nz.push_back(coo);
    coo = 750*440 + 442;
    nz.push_back(coo);
    coo = 750*440 + 443;
    nz.push_back(coo);
    coo = 750*440 + 473;
    nz.push_back(coo);
    coo = 750*441 + 588;
    nz.push_back(coo);
    coo = 750*443 + 444;
    nz.push_back(coo);
    coo = 750*444 + 447;
    nz.push_back(coo);
    coo = 750*445 + 447;
    nz.push_back(coo);
    coo = 750*445 + 448;
    nz.push_back(coo);
    coo = 750*446 + 448;
    nz.push_back(coo);
    coo = 750*446 + 449;
    nz.push_back(coo);
    coo = 750*446 + 479;
    nz.push_back(coo);
    coo = 750*447 + 594;
    nz.push_back(coo);
    coo = 750*450 + 453;
    nz.push_back(coo);
    coo = 750*450 + 479;
    nz.push_back(coo);
    coo = 750*451 + 453;
    nz.push_back(coo);
    coo = 750*451 + 454;
    nz.push_back(coo);
    coo = 750*451 + 574;
    nz.push_back(coo);
    coo = 750*452 + 454;
    nz.push_back(coo);
    coo = 750*452 + 455;
    nz.push_back(coo);
    coo = 750*452 + 635;
    nz.push_back(coo);
    coo = 750*453 + 600;
    nz.push_back(coo);
    coo = 750*454 + 481;
    nz.push_back(coo);
    coo = 750*455 + 456;
    nz.push_back(coo);
    coo = 750*456 + 459;
    nz.push_back(coo);
    coo = 750*457 + 459;
    nz.push_back(coo);
    coo = 750*457 + 460;
    nz.push_back(coo);
    coo = 750*457 + 580;
    nz.push_back(coo);
    coo = 750*458 + 460;
    nz.push_back(coo);
    coo = 750*458 + 461;
    nz.push_back(coo);
    coo = 750*458 + 641;
    nz.push_back(coo);
    coo = 750*459 + 606;
    nz.push_back(coo);
    coo = 750*460 + 487;
    nz.push_back(coo);
    coo = 750*461 + 462;
    nz.push_back(coo);
    coo = 750*462 + 465;
    nz.push_back(coo);
    coo = 750*463 + 465;
    nz.push_back(coo);
    coo = 750*463 + 466;
    nz.push_back(coo);
    coo = 750*463 + 586;
    nz.push_back(coo);
    coo = 750*464 + 466;
    nz.push_back(coo);
    coo = 750*464 + 467;
    nz.push_back(coo);
    coo = 750*464 + 647;
    nz.push_back(coo);
    coo = 750*465 + 612;
    nz.push_back(coo);
    coo = 750*466 + 493;
    nz.push_back(coo);
    coo = 750*467 + 468;
    nz.push_back(coo);
    coo = 750*468 + 471;
    nz.push_back(coo);
    coo = 750*469 + 471;
    nz.push_back(coo);
    coo = 750*469 + 472;
    nz.push_back(coo);
    coo = 750*469 + 592;
    nz.push_back(coo);
    coo = 750*470 + 472;
    nz.push_back(coo);
    coo = 750*470 + 473;
    nz.push_back(coo);
    coo = 750*470 + 653;
    nz.push_back(coo);
    coo = 750*471 + 618;
    nz.push_back(coo);
    coo = 750*472 + 499;
    nz.push_back(coo);
    coo = 750*473 + 474;
    nz.push_back(coo);
    coo = 750*474 + 477;
    nz.push_back(coo);
    coo = 750*475 + 477;
    nz.push_back(coo);
    coo = 750*475 + 478;
    nz.push_back(coo);
    coo = 750*475 + 598;
    nz.push_back(coo);
    coo = 750*476 + 478;
    nz.push_back(coo);
    coo = 750*476 + 479;
    nz.push_back(coo);
    coo = 750*476 + 659;
    nz.push_back(coo);
    coo = 750*477 + 624;
    nz.push_back(coo);
    coo = 750*478 + 505;
    nz.push_back(coo);
    coo = 750*480 + 483;
    nz.push_back(coo);
    coo = 750*480 + 509;
    nz.push_back(coo);
    coo = 750*481 + 483;
    nz.push_back(coo);
    coo = 750*481 + 484;
    nz.push_back(coo);
    coo = 750*482 + 484;
    nz.push_back(coo);
    coo = 750*482 + 485;
    nz.push_back(coo);
    coo = 750*482 + 665;
    nz.push_back(coo);
    coo = 750*483 + 630;
    nz.push_back(coo);
    coo = 750*484 + 511;
    nz.push_back(coo);
    coo = 750*485 + 486;
    nz.push_back(coo);
    coo = 750*486 + 489;
    nz.push_back(coo);
    coo = 750*487 + 489;
    nz.push_back(coo);
    coo = 750*487 + 490;
    nz.push_back(coo);
    coo = 750*488 + 490;
    nz.push_back(coo);
    coo = 750*488 + 491;
    nz.push_back(coo);
    coo = 750*488 + 671;
    nz.push_back(coo);
    coo = 750*489 + 636;
    nz.push_back(coo);
    coo = 750*490 + 517;
    nz.push_back(coo);
    coo = 750*491 + 492;
    nz.push_back(coo);
    coo = 750*492 + 495;
    nz.push_back(coo);
    coo = 750*493 + 495;
    nz.push_back(coo);
    coo = 750*493 + 496;
    nz.push_back(coo);
    coo = 750*494 + 496;
    nz.push_back(coo);
    coo = 750*494 + 497;
    nz.push_back(coo);
    coo = 750*494 + 677;
    nz.push_back(coo);
    coo = 750*495 + 642;
    nz.push_back(coo);
    coo = 750*496 + 523;
    nz.push_back(coo);
    coo = 750*497 + 498;
    nz.push_back(coo);
    coo = 750*498 + 501;
    nz.push_back(coo);
    coo = 750*499 + 501;
    nz.push_back(coo);
    coo = 750*499 + 502;
    nz.push_back(coo);
    coo = 750*500 + 502;
    nz.push_back(coo);
    coo = 750*500 + 503;
    nz.push_back(coo);
    coo = 750*500 + 683;
    nz.push_back(coo);
    coo = 750*501 + 648;
    nz.push_back(coo);
    coo = 750*502 + 529;
    nz.push_back(coo);
    coo = 750*503 + 504;
    nz.push_back(coo);
    coo = 750*504 + 507;
    nz.push_back(coo);
    coo = 750*505 + 507;
    nz.push_back(coo);
    coo = 750*505 + 508;
    nz.push_back(coo);
    coo = 750*506 + 508;
    nz.push_back(coo);
    coo = 750*506 + 509;
    nz.push_back(coo);
    coo = 750*506 + 689;
    nz.push_back(coo);
    coo = 750*507 + 654;
    nz.push_back(coo);
    coo = 750*508 + 535;
    nz.push_back(coo);
    coo = 750*510 + 513;
    nz.push_back(coo);
    coo = 750*510 + 539;
    nz.push_back(coo);
    coo = 750*511 + 513;
    nz.push_back(coo);
    coo = 750*511 + 514;
    nz.push_back(coo);
    coo = 750*512 + 514;
    nz.push_back(coo);
    coo = 750*512 + 515;
    nz.push_back(coo);
    coo = 750*512 + 695;
    nz.push_back(coo);
    coo = 750*513 + 660;
    nz.push_back(coo);
    coo = 750*514 + 541;
    nz.push_back(coo);
    coo = 750*515 + 516;
    nz.push_back(coo);
    coo = 750*516 + 519;
    nz.push_back(coo);
    coo = 750*517 + 519;
    nz.push_back(coo);
    coo = 750*517 + 520;
    nz.push_back(coo);
    coo = 750*518 + 520;
    nz.push_back(coo);
    coo = 750*518 + 521;
    nz.push_back(coo);
    coo = 750*518 + 701;
    nz.push_back(coo);
    coo = 750*519 + 666;
    nz.push_back(coo);
    coo = 750*520 + 547;
    nz.push_back(coo);
    coo = 750*521 + 522;
    nz.push_back(coo);
    coo = 750*522 + 525;
    nz.push_back(coo);
    coo = 750*523 + 525;
    nz.push_back(coo);
    coo = 750*523 + 526;
    nz.push_back(coo);
    coo = 750*524 + 526;
    nz.push_back(coo);
    coo = 750*524 + 527;
    nz.push_back(coo);
    coo = 750*524 + 707;
    nz.push_back(coo);
    coo = 750*525 + 672;
    nz.push_back(coo);
    coo = 750*526 + 553;
    nz.push_back(coo);
    coo = 750*527 + 528;
    nz.push_back(coo);
    coo = 750*528 + 531;
    nz.push_back(coo);
    coo = 750*529 + 531;
    nz.push_back(coo);
    coo = 750*529 + 532;
    nz.push_back(coo);
    coo = 750*530 + 532;
    nz.push_back(coo);
    coo = 750*530 + 533;
    nz.push_back(coo);
    coo = 750*530 + 713;
    nz.push_back(coo);
    coo = 750*531 + 678;
    nz.push_back(coo);
    coo = 750*532 + 559;
    nz.push_back(coo);
    coo = 750*533 + 534;
    nz.push_back(coo);
    coo = 750*534 + 537;
    nz.push_back(coo);
    coo = 750*535 + 537;
    nz.push_back(coo);
    coo = 750*535 + 538;
    nz.push_back(coo);
    coo = 750*536 + 538;
    nz.push_back(coo);
    coo = 750*536 + 539;
    nz.push_back(coo);
    coo = 750*536 + 719;
    nz.push_back(coo);
    coo = 750*537 + 684;
    nz.push_back(coo);
    coo = 750*538 + 565;
    nz.push_back(coo);
    coo = 750*540 + 543;
    nz.push_back(coo);
    coo = 750*540 + 569;
    nz.push_back(coo);
    coo = 750*541 + 543;
    nz.push_back(coo);
    coo = 750*541 + 544;
    nz.push_back(coo);
    coo = 750*542 + 544;
    nz.push_back(coo);
    coo = 750*542 + 545;
    nz.push_back(coo);
    coo = 750*542 + 725;
    nz.push_back(coo);
    coo = 750*543 + 690;
    nz.push_back(coo);
    coo = 750*544 + 571;
    nz.push_back(coo);
    coo = 750*545 + 546;
    nz.push_back(coo);
    coo = 750*546 + 549;
    nz.push_back(coo);
    coo = 750*547 + 549;
    nz.push_back(coo);
    coo = 750*547 + 550;
    nz.push_back(coo);
    coo = 750*548 + 550;
    nz.push_back(coo);
    coo = 750*548 + 551;
    nz.push_back(coo);
    coo = 750*548 + 731;
    nz.push_back(coo);
    coo = 750*549 + 696;
    nz.push_back(coo);
    coo = 750*550 + 577;
    nz.push_back(coo);
    coo = 750*551 + 552;
    nz.push_back(coo);
    coo = 750*552 + 555;
    nz.push_back(coo);
    coo = 750*553 + 555;
    nz.push_back(coo);
    coo = 750*553 + 556;
    nz.push_back(coo);
    coo = 750*554 + 556;
    nz.push_back(coo);
    coo = 750*554 + 557;
    nz.push_back(coo);
    coo = 750*554 + 737;
    nz.push_back(coo);
    coo = 750*555 + 702;
    nz.push_back(coo);
    coo = 750*556 + 583;
    nz.push_back(coo);
    coo = 750*557 + 558;
    nz.push_back(coo);
    coo = 750*558 + 561;
    nz.push_back(coo);
    coo = 750*559 + 561;
    nz.push_back(coo);
    coo = 750*559 + 562;
    nz.push_back(coo);
    coo = 750*560 + 562;
    nz.push_back(coo);
    coo = 750*560 + 563;
    nz.push_back(coo);
    coo = 750*560 + 743;
    nz.push_back(coo);
    coo = 750*561 + 708;
    nz.push_back(coo);
    coo = 750*562 + 589;
    nz.push_back(coo);
    coo = 750*563 + 564;
    nz.push_back(coo);
    coo = 750*564 + 567;
    nz.push_back(coo);
    coo = 750*565 + 567;
    nz.push_back(coo);
    coo = 750*565 + 568;
    nz.push_back(coo);
    coo = 750*566 + 568;
    nz.push_back(coo);
    coo = 750*566 + 569;
    nz.push_back(coo);
    coo = 750*566 + 749;
    nz.push_back(coo);
    coo = 750*567 + 714;
    nz.push_back(coo);
    coo = 750*568 + 595;
    nz.push_back(coo);
    coo = 750*570 + 573;
    nz.push_back(coo);
    coo = 750*570 + 599;
    nz.push_back(coo);
    coo = 750*571 + 573;
    nz.push_back(coo);
    coo = 750*571 + 574;
    nz.push_back(coo);
    coo = 750*572 + 574;
    nz.push_back(coo);
    coo = 750*572 + 575;
    nz.push_back(coo);
    coo = 750*572 + 605;
    nz.push_back(coo);
    coo = 750*573 + 720;
    nz.push_back(coo);
    coo = 750*575 + 576;
    nz.push_back(coo);
    coo = 750*576 + 579;
    nz.push_back(coo);
    coo = 750*577 + 579;
    nz.push_back(coo);
    coo = 750*577 + 580;
    nz.push_back(coo);
    coo = 750*578 + 580;
    nz.push_back(coo);
    coo = 750*578 + 581;
    nz.push_back(coo);
    coo = 750*578 + 611;
    nz.push_back(coo);
    coo = 750*579 + 726;
    nz.push_back(coo);
    coo = 750*581 + 582;
    nz.push_back(coo);
    coo = 750*582 + 585;
    nz.push_back(coo);
    coo = 750*583 + 585;
    nz.push_back(coo);
    coo = 750*583 + 586;
    nz.push_back(coo);
    coo = 750*584 + 586;
    nz.push_back(coo);
    coo = 750*584 + 587;
    nz.push_back(coo);
    coo = 750*584 + 617;
    nz.push_back(coo);
    coo = 750*585 + 732;
    nz.push_back(coo);
    coo = 750*587 + 588;
    nz.push_back(coo);
    coo = 750*588 + 591;
    nz.push_back(coo);
    coo = 750*589 + 591;
    nz.push_back(coo);
    coo = 750*589 + 592;
    nz.push_back(coo);
    coo = 750*590 + 592;
    nz.push_back(coo);
    coo = 750*590 + 593;
    nz.push_back(coo);
    coo = 750*590 + 623;
    nz.push_back(coo);
    coo = 750*591 + 738;
    nz.push_back(coo);
    coo = 750*593 + 594;
    nz.push_back(coo);
    coo = 750*594 + 597;
    nz.push_back(coo);
    coo = 750*595 + 597;
    nz.push_back(coo);
    coo = 750*595 + 598;
    nz.push_back(coo);
    coo = 750*596 + 598;
    nz.push_back(coo);
    coo = 750*596 + 599;
    nz.push_back(coo);
    coo = 750*596 + 629;
    nz.push_back(coo);
    coo = 750*597 + 744;
    nz.push_back(coo);
    coo = 750*600 + 603;
    nz.push_back(coo);
    coo = 750*600 + 629;
    nz.push_back(coo);
    coo = 750*601 + 603;
    nz.push_back(coo);
    coo = 750*601 + 604;
    nz.push_back(coo);
    coo = 750*601 + 724;
    nz.push_back(coo);
    coo = 750*602 + 604;
    nz.push_back(coo);
    coo = 750*602 + 605;
    nz.push_back(coo);
    coo = 750*604 + 631;
    nz.push_back(coo);
    coo = 750*605 + 606;
    nz.push_back(coo);
    coo = 750*606 + 609;
    nz.push_back(coo);
    coo = 750*607 + 609;
    nz.push_back(coo);
    coo = 750*607 + 610;
    nz.push_back(coo);
    coo = 750*607 + 730;
    nz.push_back(coo);
    coo = 750*608 + 610;
    nz.push_back(coo);
    coo = 750*608 + 611;
    nz.push_back(coo);
    coo = 750*610 + 637;
    nz.push_back(coo);
    coo = 750*611 + 612;
    nz.push_back(coo);
    coo = 750*612 + 615;
    nz.push_back(coo);
    coo = 750*613 + 615;
    nz.push_back(coo);
    coo = 750*613 + 616;
    nz.push_back(coo);
    coo = 750*613 + 736;
    nz.push_back(coo);
    coo = 750*614 + 616;
    nz.push_back(coo);
    coo = 750*614 + 617;
    nz.push_back(coo);
    coo = 750*616 + 643;
    nz.push_back(coo);
    coo = 750*617 + 618;
    nz.push_back(coo);
    coo = 750*618 + 621;
    nz.push_back(coo);
    coo = 750*619 + 621;
    nz.push_back(coo);
    coo = 750*619 + 622;
    nz.push_back(coo);
    coo = 750*619 + 742;
    nz.push_back(coo);
    coo = 750*620 + 622;
    nz.push_back(coo);
    coo = 750*620 + 623;
    nz.push_back(coo);
    coo = 750*622 + 649;
    nz.push_back(coo);
    coo = 750*623 + 624;
    nz.push_back(coo);
    coo = 750*624 + 627;
    nz.push_back(coo);
    coo = 750*625 + 627;
    nz.push_back(coo);
    coo = 750*625 + 628;
    nz.push_back(coo);
    coo = 750*625 + 748;
    nz.push_back(coo);
    coo = 750*626 + 628;
    nz.push_back(coo);
    coo = 750*626 + 629;
    nz.push_back(coo);
    coo = 750*628 + 655;
    nz.push_back(coo);
    coo = 750*630 + 633;
    nz.push_back(coo);
    coo = 750*630 + 659;
    nz.push_back(coo);
    coo = 750*631 + 633;
    nz.push_back(coo);
    coo = 750*631 + 634;
    nz.push_back(coo);
    coo = 750*632 + 634;
    nz.push_back(coo);
    coo = 750*632 + 635;
    nz.push_back(coo);
    coo = 750*634 + 661;
    nz.push_back(coo);
    coo = 750*635 + 636;
    nz.push_back(coo);
    coo = 750*636 + 639;
    nz.push_back(coo);
    coo = 750*637 + 639;
    nz.push_back(coo);
    coo = 750*637 + 640;
    nz.push_back(coo);
    coo = 750*638 + 640;
    nz.push_back(coo);
    coo = 750*638 + 641;
    nz.push_back(coo);
    coo = 750*640 + 667;
    nz.push_back(coo);
    coo = 750*641 + 642;
    nz.push_back(coo);
    coo = 750*642 + 645;
    nz.push_back(coo);
    coo = 750*643 + 645;
    nz.push_back(coo);
    coo = 750*643 + 646;
    nz.push_back(coo);
    coo = 750*644 + 646;
    nz.push_back(coo);
    coo = 750*644 + 647;
    nz.push_back(coo);
    coo = 750*646 + 673;
    nz.push_back(coo);
    coo = 750*647 + 648;
    nz.push_back(coo);
    coo = 750*648 + 651;
    nz.push_back(coo);
    coo = 750*649 + 651;
    nz.push_back(coo);
    coo = 750*649 + 652;
    nz.push_back(coo);
    coo = 750*650 + 652;
    nz.push_back(coo);
    coo = 750*650 + 653;
    nz.push_back(coo);
    coo = 750*652 + 679;
    nz.push_back(coo);
    coo = 750*653 + 654;
    nz.push_back(coo);
    coo = 750*654 + 657;
    nz.push_back(coo);
    coo = 750*655 + 657;
    nz.push_back(coo);
    coo = 750*655 + 658;
    nz.push_back(coo);
    coo = 750*656 + 658;
    nz.push_back(coo);
    coo = 750*656 + 659;
    nz.push_back(coo);
    coo = 750*658 + 685;
    nz.push_back(coo);
    coo = 750*660 + 663;
    nz.push_back(coo);
    coo = 750*660 + 689;
    nz.push_back(coo);
    coo = 750*661 + 663;
    nz.push_back(coo);
    coo = 750*661 + 664;
    nz.push_back(coo);
    coo = 750*662 + 664;
    nz.push_back(coo);
    coo = 750*662 + 665;
    nz.push_back(coo);
    coo = 750*664 + 691;
    nz.push_back(coo);
    coo = 750*665 + 666;
    nz.push_back(coo);
    coo = 750*666 + 669;
    nz.push_back(coo);
    coo = 750*667 + 669;
    nz.push_back(coo);
    coo = 750*667 + 670;
    nz.push_back(coo);
    coo = 750*668 + 670;
    nz.push_back(coo);
    coo = 750*668 + 671;
    nz.push_back(coo);
    coo = 750*670 + 697;
    nz.push_back(coo);
    coo = 750*671 + 672;
    nz.push_back(coo);
    coo = 750*672 + 675;
    nz.push_back(coo);
    coo = 750*673 + 675;
    nz.push_back(coo);
    coo = 750*673 + 676;
    nz.push_back(coo);
    coo = 750*674 + 676;
    nz.push_back(coo);
    coo = 750*674 + 677;
    nz.push_back(coo);
    coo = 750*676 + 703;
    nz.push_back(coo);
    coo = 750*677 + 678;
    nz.push_back(coo);
    coo = 750*678 + 681;
    nz.push_back(coo);
    coo = 750*679 + 681;
    nz.push_back(coo);
    coo = 750*679 + 682;
    nz.push_back(coo);
    coo = 750*680 + 682;
    nz.push_back(coo);
    coo = 750*680 + 683;
    nz.push_back(coo);
    coo = 750*682 + 709;
    nz.push_back(coo);
    coo = 750*683 + 684;
    nz.push_back(coo);
    coo = 750*684 + 687;
    nz.push_back(coo);
    coo = 750*685 + 687;
    nz.push_back(coo);
    coo = 750*685 + 688;
    nz.push_back(coo);
    coo = 750*686 + 688;
    nz.push_back(coo);
    coo = 750*686 + 689;
    nz.push_back(coo);
    coo = 750*688 + 715;
    nz.push_back(coo);
    coo = 750*690 + 693;
    nz.push_back(coo);
    coo = 750*690 + 719;
    nz.push_back(coo);
    coo = 750*691 + 693;
    nz.push_back(coo);
    coo = 750*691 + 694;
    nz.push_back(coo);
    coo = 750*692 + 694;
    nz.push_back(coo);
    coo = 750*692 + 695;
    nz.push_back(coo);
    coo = 750*694 + 721;
    nz.push_back(coo);
    coo = 750*695 + 696;
    nz.push_back(coo);
    coo = 750*696 + 699;
    nz.push_back(coo);
    coo = 750*697 + 699;
    nz.push_back(coo);
    coo = 750*697 + 700;
    nz.push_back(coo);
    coo = 750*698 + 700;
    nz.push_back(coo);
    coo = 750*698 + 701;
    nz.push_back(coo);
    coo = 750*700 + 727;
    nz.push_back(coo);
    coo = 750*701 + 702;
    nz.push_back(coo);
    coo = 750*702 + 705;
    nz.push_back(coo);
    coo = 750*703 + 705;
    nz.push_back(coo);
    coo = 750*703 + 706;
    nz.push_back(coo);
    coo = 750*704 + 706;
    nz.push_back(coo);
    coo = 750*704 + 707;
    nz.push_back(coo);
    coo = 750*706 + 733;
    nz.push_back(coo);
    coo = 750*707 + 708;
    nz.push_back(coo);
    coo = 750*708 + 711;
    nz.push_back(coo);
    coo = 750*709 + 711;
    nz.push_back(coo);
    coo = 750*709 + 712;
    nz.push_back(coo);
    coo = 750*710 + 712;
    nz.push_back(coo);
    coo = 750*710 + 713;
    nz.push_back(coo);
    coo = 750*712 + 739;
    nz.push_back(coo);
    coo = 750*713 + 714;
    nz.push_back(coo);
    coo = 750*714 + 717;
    nz.push_back(coo);
    coo = 750*715 + 717;
    nz.push_back(coo);
    coo = 750*715 + 718;
    nz.push_back(coo);
    coo = 750*716 + 718;
    nz.push_back(coo);
    coo = 750*716 + 719;
    nz.push_back(coo);
    coo = 750*718 + 745;
    nz.push_back(coo);
    coo = 750*720 + 723;
    nz.push_back(coo);
    coo = 750*720 + 749;
    nz.push_back(coo);
    coo = 750*721 + 723;
    nz.push_back(coo);
    coo = 750*721 + 724;
    nz.push_back(coo);
    coo = 750*722 + 724;
    nz.push_back(coo);
    coo = 750*722 + 725;
    nz.push_back(coo);
    coo = 750*725 + 726;
    nz.push_back(coo);
    coo = 750*726 + 729;
    nz.push_back(coo);
    coo = 750*727 + 729;
    nz.push_back(coo);
    coo = 750*727 + 730;
    nz.push_back(coo);
    coo = 750*728 + 730;
    nz.push_back(coo);
    coo = 750*728 + 731;
    nz.push_back(coo);
    coo = 750*731 + 732;
    nz.push_back(coo);
    coo = 750*732 + 735;
    nz.push_back(coo);
    coo = 750*733 + 735;
    nz.push_back(coo);
    coo = 750*733 + 736;
    nz.push_back(coo);
    coo = 750*734 + 736;
    nz.push_back(coo);
    coo = 750*734 + 737;
    nz.push_back(coo);
    coo = 750*737 + 738;
    nz.push_back(coo);
    coo = 750*738 + 741;
    nz.push_back(coo);
    coo = 750*739 + 741;
    nz.push_back(coo);
    coo = 750*739 + 742;
    nz.push_back(coo);
    coo = 750*740 + 742;
    nz.push_back(coo);
    coo = 750*740 + 743;
    nz.push_back(coo);
    coo = 750*743 + 744;
    nz.push_back(coo);
    coo = 750*744 + 747;
    nz.push_back(coo);
    coo = 750*745 + 747;
    nz.push_back(coo);
    coo = 750*745 + 748;
    nz.push_back(coo);
    coo = 750*746 + 748;
    nz.push_back(coo);
    coo = 750*746 + 749;
    nz.push_back(coo);
    return nz;
}

Mat<int> create_plaquettes()
{
   Mat<int> P(450,10);
   P(0, 0) = 750*0+3;
   P(0, 1) = 750*3+1;
   P(0, 2) = 750*1+4;
   P(0, 3) = 750*4+2;
   P(0, 4) = 750*2+5;
   P(0, 5) = 750*5+722;
   P(0, 6) = 750*722+724;
   P(0, 7) = 750*724+601;
   P(0, 8) = 750*601+603;
   P(0, 9) = 750*603+0;
   P(1, 0) = 750*0+3;
   P(1, 1) = 750*3+1;
   P(1, 2) = 750*1+4;
   P(1, 3) = 750*4+31;
   P(1, 4) = 750*31+33;
   P(1, 5) = 750*33+180;
   P(1, 6) = 750*180+209;
   P(1, 7) = 750*209+26;
   P(1, 8) = 750*26+29;
   P(1, 9) = 750*29+0;
   P(2, 0) = 750*0+3;
   P(2, 1) = 750*3+150;
   P(2, 2) = 750*150+153;
   P(2, 3) = 750*153+300;
   P(2, 4) = 750*300+303;
   P(2, 5) = 750*303+450;
   P(2, 6) = 750*450+453;
   P(2, 7) = 750*453+600;
   P(2, 8) = 750*600+603;
   P(2, 9) = 750*603+0;
   P(3, 0) = 750*0+3;
   P(3, 1) = 750*3+150;
   P(3, 2) = 750*150+179;
   P(3, 3) = 750*179+146;
   P(3, 4) = 750*146+148;
   P(3, 5) = 750*148+25;
   P(3, 6) = 750*25+28;
   P(3, 7) = 750*28+26;
   P(3, 8) = 750*26+29;
   P(3, 9) = 750*29+0;
   P(4, 0) = 750*0+603;
   P(4, 1) = 750*603+601;
   P(4, 2) = 750*601+724;
   P(4, 3) = 750*724+721;
   P(4, 4) = 750*721+723;
   P(4, 5) = 750*723+720;
   P(4, 6) = 750*720+749;
   P(4, 7) = 750*749+746;
   P(4, 8) = 750*746+29;
   P(4, 9) = 750*29+0;
   P(5, 0) = 750*0+603;
   P(5, 1) = 750*603+600;
   P(5, 2) = 750*600+629;
   P(5, 3) = 750*629+626;
   P(5, 4) = 750*626+628;
   P(5, 5) = 750*628+625;
   P(5, 6) = 750*625+748;
   P(5, 7) = 750*748+746;
   P(5, 8) = 750*746+29;
   P(5, 9) = 750*29+0;
   P(6, 0) = 750*1+4;
   P(6, 1) = 750*4+2;
   P(6, 2) = 750*2+5;
   P(6, 3) = 750*5+6;
   P(6, 4) = 750*6+9;
   P(6, 5) = 750*9+156;
   P(6, 6) = 750*156+155;
   P(6, 7) = 750*155+122;
   P(6, 8) = 750*122+124;
   P(6, 9) = 750*124+1;
   P(7, 0) = 750*1+4;
   P(7, 1) = 750*4+31;
   P(7, 2) = 750*31+34;
   P(7, 3) = 750*34+61;
   P(7, 4) = 750*61+64;
   P(7, 5) = 750*64+91;
   P(7, 6) = 750*91+94;
   P(7, 7) = 750*94+121;
   P(7, 8) = 750*121+124;
   P(7, 9) = 750*124+1;
   P(8, 0) = 750*1+3;
   P(8, 1) = 750*3+150;
   P(8, 2) = 750*150+153;
   P(8, 3) = 750*153+151;
   P(8, 4) = 750*151+154;
   P(8, 5) = 750*154+152;
   P(8, 6) = 750*152+155;
   P(8, 7) = 750*155+122;
   P(8, 8) = 750*122+124;
   P(8, 9) = 750*124+1;
   P(9, 0) = 750*1+3;
   P(9, 1) = 750*3+150;
   P(9, 2) = 750*150+179;
   P(9, 3) = 750*179+146;
   P(9, 4) = 750*146+149;
   P(9, 5) = 750*149+120;
   P(9, 6) = 750*120+123;
   P(9, 7) = 750*123+121;
   P(9, 8) = 750*121+124;
   P(9, 9) = 750*124+1;
   P(10, 0) = 750*2+5;
   P(10, 1) = 750*5+722;
   P(10, 2) = 750*722+725;
   P(10, 3) = 750*725+542;
   P(10, 4) = 750*542+545;
   P(10, 5) = 750*545+362;
   P(10, 6) = 750*362+365;
   P(10, 7) = 750*365+182;
   P(10, 8) = 750*182+185;
   P(10, 9) = 750*185+2;
   P(11, 0) = 750*2+5;
   P(11, 1) = 750*5+6;
   P(11, 2) = 750*6+9;
   P(11, 3) = 750*9+7;
   P(11, 4) = 750*7+10;
   P(11, 5) = 750*10+37;
   P(11, 6) = 750*37+39;
   P(11, 7) = 750*39+186;
   P(11, 8) = 750*186+185;
   P(11, 9) = 750*185+2;
   P(12, 0) = 750*2+4;
   P(12, 1) = 750*4+31;
   P(12, 2) = 750*31+34;
   P(12, 3) = 750*34+32;
   P(12, 4) = 750*32+35;
   P(12, 5) = 750*35+36;
   P(12, 6) = 750*36+39;
   P(12, 7) = 750*39+186;
   P(12, 8) = 750*186+185;
   P(12, 9) = 750*185+2;
   P(13, 0) = 750*2+4;
   P(13, 1) = 750*4+31;
   P(13, 2) = 750*31+33;
   P(13, 3) = 750*33+180;
   P(13, 4) = 750*180+183;
   P(13, 5) = 750*183+181;
   P(13, 6) = 750*181+184;
   P(13, 7) = 750*184+182;
   P(13, 8) = 750*182+185;
   P(13, 9) = 750*185+2;
   P(14, 0) = 750*5+722;
   P(14, 1) = 750*722+725;
   P(14, 2) = 750*725+726;
   P(14, 3) = 750*726+729;
   P(14, 4) = 750*729+727;
   P(14, 5) = 750*727+730;
   P(14, 6) = 750*730+607;
   P(14, 7) = 750*607+609;
   P(14, 8) = 750*609+6;
   P(14, 9) = 750*6+5;
   P(15, 0) = 750*5+722;
   P(15, 1) = 750*722+724;
   P(15, 2) = 750*724+601;
   P(15, 3) = 750*601+604;
   P(15, 4) = 750*604+602;
   P(15, 5) = 750*602+605;
   P(15, 6) = 750*605+606;
   P(15, 7) = 750*606+609;
   P(15, 8) = 750*609+6;
   P(15, 9) = 750*6+5;
   P(16, 0) = 750*6+9;
   P(16, 1) = 750*9+7;
   P(16, 2) = 750*7+10;
   P(16, 3) = 750*10+8;
   P(16, 4) = 750*8+11;
   P(16, 5) = 750*11+728;
   P(16, 6) = 750*728+730;
   P(16, 7) = 750*730+607;
   P(16, 8) = 750*607+609;
   P(16, 9) = 750*609+6;
   P(17, 0) = 750*6+9;
   P(17, 1) = 750*9+156;
   P(17, 2) = 750*156+159;
   P(17, 3) = 750*159+306;
   P(17, 4) = 750*306+309;
   P(17, 5) = 750*309+456;
   P(17, 6) = 750*456+459;
   P(17, 7) = 750*459+606;
   P(17, 8) = 750*606+609;
   P(17, 9) = 750*609+6;
   P(18, 0) = 750*7+10;
   P(18, 1) = 750*10+8;
   P(18, 2) = 750*8+11;
   P(18, 3) = 750*11+12;
   P(18, 4) = 750*12+15;
   P(18, 5) = 750*15+162;
   P(18, 6) = 750*162+161;
   P(18, 7) = 750*161+128;
   P(18, 8) = 750*128+130;
   P(18, 9) = 750*130+7;
   P(19, 0) = 750*7+10;
   P(19, 1) = 750*10+37;
   P(19, 2) = 750*37+40;
   P(19, 3) = 750*40+67;
   P(19, 4) = 750*67+70;
   P(19, 5) = 750*70+97;
   P(19, 6) = 750*97+100;
   P(19, 7) = 750*100+127;
   P(19, 8) = 750*127+130;
   P(19, 9) = 750*130+7;
   P(20, 0) = 750*7+9;
   P(20, 1) = 750*9+156;
   P(20, 2) = 750*156+159;
   P(20, 3) = 750*159+157;
   P(20, 4) = 750*157+160;
   P(20, 5) = 750*160+158;
   P(20, 6) = 750*158+161;
   P(20, 7) = 750*161+128;
   P(20, 8) = 750*128+130;
   P(20, 9) = 750*130+7;
   P(21, 0) = 750*7+9;
   P(21, 1) = 750*9+156;
   P(21, 2) = 750*156+155;
   P(21, 3) = 750*155+122;
   P(21, 4) = 750*122+125;
   P(21, 5) = 750*125+126;
   P(21, 6) = 750*126+129;
   P(21, 7) = 750*129+127;
   P(21, 8) = 750*127+130;
   P(21, 9) = 750*130+7;
   P(22, 0) = 750*8+11;
   P(22, 1) = 750*11+728;
   P(22, 2) = 750*728+731;
   P(22, 3) = 750*731+548;
   P(22, 4) = 750*548+551;
   P(22, 5) = 750*551+368;
   P(22, 6) = 750*368+371;
   P(22, 7) = 750*371+188;
   P(22, 8) = 750*188+191;
   P(22, 9) = 750*191+8;
   P(23, 0) = 750*8+11;
   P(23, 1) = 750*11+12;
   P(23, 2) = 750*12+15;
   P(23, 3) = 750*15+13;
   P(23, 4) = 750*13+16;
   P(23, 5) = 750*16+43;
   P(23, 6) = 750*43+45;
   P(23, 7) = 750*45+192;
   P(23, 8) = 750*192+191;
   P(23, 9) = 750*191+8;
   P(24, 0) = 750*8+10;
   P(24, 1) = 750*10+37;
   P(24, 2) = 750*37+40;
   P(24, 3) = 750*40+38;
   P(24, 4) = 750*38+41;
   P(24, 5) = 750*41+42;
   P(24, 6) = 750*42+45;
   P(24, 7) = 750*45+192;
   P(24, 8) = 750*192+191;
   P(24, 9) = 750*191+8;
   P(25, 0) = 750*8+10;
   P(25, 1) = 750*10+37;
   P(25, 2) = 750*37+39;
   P(25, 3) = 750*39+186;
   P(25, 4) = 750*186+189;
   P(25, 5) = 750*189+187;
   P(25, 6) = 750*187+190;
   P(25, 7) = 750*190+188;
   P(25, 8) = 750*188+191;
   P(25, 9) = 750*191+8;
   P(26, 0) = 750*11+728;
   P(26, 1) = 750*728+731;
   P(26, 2) = 750*731+732;
   P(26, 3) = 750*732+735;
   P(26, 4) = 750*735+733;
   P(26, 5) = 750*733+736;
   P(26, 6) = 750*736+613;
   P(26, 7) = 750*613+615;
   P(26, 8) = 750*615+12;
   P(26, 9) = 750*12+11;
   P(27, 0) = 750*11+728;
   P(27, 1) = 750*728+730;
   P(27, 2) = 750*730+607;
   P(27, 3) = 750*607+610;
   P(27, 4) = 750*610+608;
   P(27, 5) = 750*608+611;
   P(27, 6) = 750*611+612;
   P(27, 7) = 750*612+615;
   P(27, 8) = 750*615+12;
   P(27, 9) = 750*12+11;
   P(28, 0) = 750*12+15;
   P(28, 1) = 750*15+13;
   P(28, 2) = 750*13+16;
   P(28, 3) = 750*16+14;
   P(28, 4) = 750*14+17;
   P(28, 5) = 750*17+734;
   P(28, 6) = 750*734+736;
   P(28, 7) = 750*736+613;
   P(28, 8) = 750*613+615;
   P(28, 9) = 750*615+12;
   P(29, 0) = 750*12+15;
   P(29, 1) = 750*15+162;
   P(29, 2) = 750*162+165;
   P(29, 3) = 750*165+312;
   P(29, 4) = 750*312+315;
   P(29, 5) = 750*315+462;
   P(29, 6) = 750*462+465;
   P(29, 7) = 750*465+612;
   P(29, 8) = 750*612+615;
   P(29, 9) = 750*615+12;
   P(30, 0) = 750*13+16;
   P(30, 1) = 750*16+14;
   P(30, 2) = 750*14+17;
   P(30, 3) = 750*17+18;
   P(30, 4) = 750*18+21;
   P(30, 5) = 750*21+168;
   P(30, 6) = 750*168+167;
   P(30, 7) = 750*167+134;
   P(30, 8) = 750*134+136;
   P(30, 9) = 750*136+13;
   P(31, 0) = 750*13+16;
   P(31, 1) = 750*16+43;
   P(31, 2) = 750*43+46;
   P(31, 3) = 750*46+73;
   P(31, 4) = 750*73+76;
   P(31, 5) = 750*76+103;
   P(31, 6) = 750*103+106;
   P(31, 7) = 750*106+133;
   P(31, 8) = 750*133+136;
   P(31, 9) = 750*136+13;
   P(32, 0) = 750*13+15;
   P(32, 1) = 750*15+162;
   P(32, 2) = 750*162+165;
   P(32, 3) = 750*165+163;
   P(32, 4) = 750*163+166;
   P(32, 5) = 750*166+164;
   P(32, 6) = 750*164+167;
   P(32, 7) = 750*167+134;
   P(32, 8) = 750*134+136;
   P(32, 9) = 750*136+13;
   P(33, 0) = 750*13+15;
   P(33, 1) = 750*15+162;
   P(33, 2) = 750*162+161;
   P(33, 3) = 750*161+128;
   P(33, 4) = 750*128+131;
   P(33, 5) = 750*131+132;
   P(33, 6) = 750*132+135;
   P(33, 7) = 750*135+133;
   P(33, 8) = 750*133+136;
   P(33, 9) = 750*136+13;
   P(34, 0) = 750*14+17;
   P(34, 1) = 750*17+734;
   P(34, 2) = 750*734+737;
   P(34, 3) = 750*737+554;
   P(34, 4) = 750*554+557;
   P(34, 5) = 750*557+374;
   P(34, 6) = 750*374+377;
   P(34, 7) = 750*377+194;
   P(34, 8) = 750*194+197;
   P(34, 9) = 750*197+14;
   P(35, 0) = 750*14+17;
   P(35, 1) = 750*17+18;
   P(35, 2) = 750*18+21;
   P(35, 3) = 750*21+19;
   P(35, 4) = 750*19+22;
   P(35, 5) = 750*22+49;
   P(35, 6) = 750*49+51;
   P(35, 7) = 750*51+198;
   P(35, 8) = 750*198+197;
   P(35, 9) = 750*197+14;
   P(36, 0) = 750*14+16;
   P(36, 1) = 750*16+43;
   P(36, 2) = 750*43+46;
   P(36, 3) = 750*46+44;
   P(36, 4) = 750*44+47;
   P(36, 5) = 750*47+48;
   P(36, 6) = 750*48+51;
   P(36, 7) = 750*51+198;
   P(36, 8) = 750*198+197;
   P(36, 9) = 750*197+14;
   P(37, 0) = 750*14+16;
   P(37, 1) = 750*16+43;
   P(37, 2) = 750*43+45;
   P(37, 3) = 750*45+192;
   P(37, 4) = 750*192+195;
   P(37, 5) = 750*195+193;
   P(37, 6) = 750*193+196;
   P(37, 7) = 750*196+194;
   P(37, 8) = 750*194+197;
   P(37, 9) = 750*197+14;
   P(38, 0) = 750*17+734;
   P(38, 1) = 750*734+737;
   P(38, 2) = 750*737+738;
   P(38, 3) = 750*738+741;
   P(38, 4) = 750*741+739;
   P(38, 5) = 750*739+742;
   P(38, 6) = 750*742+619;
   P(38, 7) = 750*619+621;
   P(38, 8) = 750*621+18;
   P(38, 9) = 750*18+17;
   P(39, 0) = 750*17+734;
   P(39, 1) = 750*734+736;
   P(39, 2) = 750*736+613;
   P(39, 3) = 750*613+616;
   P(39, 4) = 750*616+614;
   P(39, 5) = 750*614+617;
   P(39, 6) = 750*617+618;
   P(39, 7) = 750*618+621;
   P(39, 8) = 750*621+18;
   P(39, 9) = 750*18+17;
   P(40, 0) = 750*18+21;
   P(40, 1) = 750*21+19;
   P(40, 2) = 750*19+22;
   P(40, 3) = 750*22+20;
   P(40, 4) = 750*20+23;
   P(40, 5) = 750*23+740;
   P(40, 6) = 750*740+742;
   P(40, 7) = 750*742+619;
   P(40, 8) = 750*619+621;
   P(40, 9) = 750*621+18;
   P(41, 0) = 750*18+21;
   P(41, 1) = 750*21+168;
   P(41, 2) = 750*168+171;
   P(41, 3) = 750*171+318;
   P(41, 4) = 750*318+321;
   P(41, 5) = 750*321+468;
   P(41, 6) = 750*468+471;
   P(41, 7) = 750*471+618;
   P(41, 8) = 750*618+621;
   P(41, 9) = 750*621+18;
   P(42, 0) = 750*19+22;
   P(42, 1) = 750*22+20;
   P(42, 2) = 750*20+23;
   P(42, 3) = 750*23+24;
   P(42, 4) = 750*24+27;
   P(42, 5) = 750*27+174;
   P(42, 6) = 750*174+173;
   P(42, 7) = 750*173+140;
   P(42, 8) = 750*140+142;
   P(42, 9) = 750*142+19;
   P(43, 0) = 750*19+22;
   P(43, 1) = 750*22+49;
   P(43, 2) = 750*49+52;
   P(43, 3) = 750*52+79;
   P(43, 4) = 750*79+82;
   P(43, 5) = 750*82+109;
   P(43, 6) = 750*109+112;
   P(43, 7) = 750*112+139;
   P(43, 8) = 750*139+142;
   P(43, 9) = 750*142+19;
   P(44, 0) = 750*19+21;
   P(44, 1) = 750*21+168;
   P(44, 2) = 750*168+171;
   P(44, 3) = 750*171+169;
   P(44, 4) = 750*169+172;
   P(44, 5) = 750*172+170;
   P(44, 6) = 750*170+173;
   P(44, 7) = 750*173+140;
   P(44, 8) = 750*140+142;
   P(44, 9) = 750*142+19;
   P(45, 0) = 750*19+21;
   P(45, 1) = 750*21+168;
   P(45, 2) = 750*168+167;
   P(45, 3) = 750*167+134;
   P(45, 4) = 750*134+137;
   P(45, 5) = 750*137+138;
   P(45, 6) = 750*138+141;
   P(45, 7) = 750*141+139;
   P(45, 8) = 750*139+142;
   P(45, 9) = 750*142+19;
   P(46, 0) = 750*20+23;
   P(46, 1) = 750*23+740;
   P(46, 2) = 750*740+743;
   P(46, 3) = 750*743+560;
   P(46, 4) = 750*560+563;
   P(46, 5) = 750*563+380;
   P(46, 6) = 750*380+383;
   P(46, 7) = 750*383+200;
   P(46, 8) = 750*200+203;
   P(46, 9) = 750*203+20;
   P(47, 0) = 750*20+23;
   P(47, 1) = 750*23+24;
   P(47, 2) = 750*24+27;
   P(47, 3) = 750*27+25;
   P(47, 4) = 750*25+28;
   P(47, 5) = 750*28+55;
   P(47, 6) = 750*55+57;
   P(47, 7) = 750*57+204;
   P(47, 8) = 750*204+203;
   P(47, 9) = 750*203+20;
   P(48, 0) = 750*20+22;
   P(48, 1) = 750*22+49;
   P(48, 2) = 750*49+52;
   P(48, 3) = 750*52+50;
   P(48, 4) = 750*50+53;
   P(48, 5) = 750*53+54;
   P(48, 6) = 750*54+57;
   P(48, 7) = 750*57+204;
   P(48, 8) = 750*204+203;
   P(48, 9) = 750*203+20;
   P(49, 0) = 750*20+22;
   P(49, 1) = 750*22+49;
   P(49, 2) = 750*49+51;
   P(49, 3) = 750*51+198;
   P(49, 4) = 750*198+201;
   P(49, 5) = 750*201+199;
   P(49, 6) = 750*199+202;
   P(49, 7) = 750*202+200;
   P(49, 8) = 750*200+203;
   P(49, 9) = 750*203+20;
   P(50, 0) = 750*23+740;
   P(50, 1) = 750*740+743;
   P(50, 2) = 750*743+744;
   P(50, 3) = 750*744+747;
   P(50, 4) = 750*747+745;
   P(50, 5) = 750*745+748;
   P(50, 6) = 750*748+625;
   P(50, 7) = 750*625+627;
   P(50, 8) = 750*627+24;
   P(50, 9) = 750*24+23;
   P(51, 0) = 750*23+740;
   P(51, 1) = 750*740+742;
   P(51, 2) = 750*742+619;
   P(51, 3) = 750*619+622;
   P(51, 4) = 750*622+620;
   P(51, 5) = 750*620+623;
   P(51, 6) = 750*623+624;
   P(51, 7) = 750*624+627;
   P(51, 8) = 750*627+24;
   P(51, 9) = 750*24+23;
   P(52, 0) = 750*24+27;
   P(52, 1) = 750*27+25;
   P(52, 2) = 750*25+28;
   P(52, 3) = 750*28+26;
   P(52, 4) = 750*26+29;
   P(52, 5) = 750*29+746;
   P(52, 6) = 750*746+748;
   P(52, 7) = 750*748+625;
   P(52, 8) = 750*625+627;
   P(52, 9) = 750*627+24;
   P(53, 0) = 750*24+27;
   P(53, 1) = 750*27+174;
   P(53, 2) = 750*174+177;
   P(53, 3) = 750*177+324;
   P(53, 4) = 750*324+327;
   P(53, 5) = 750*327+474;
   P(53, 6) = 750*474+477;
   P(53, 7) = 750*477+624;
   P(53, 8) = 750*624+627;
   P(53, 9) = 750*627+24;
   P(54, 0) = 750*25+28;
   P(54, 1) = 750*28+55;
   P(54, 2) = 750*55+58;
   P(54, 3) = 750*58+85;
   P(54, 4) = 750*85+88;
   P(54, 5) = 750*88+115;
   P(54, 6) = 750*115+118;
   P(54, 7) = 750*118+145;
   P(54, 8) = 750*145+148;
   P(54, 9) = 750*148+25;
   P(55, 0) = 750*25+27;
   P(55, 1) = 750*27+174;
   P(55, 2) = 750*174+177;
   P(55, 3) = 750*177+175;
   P(55, 4) = 750*175+178;
   P(55, 5) = 750*178+176;
   P(55, 6) = 750*176+179;
   P(55, 7) = 750*179+146;
   P(55, 8) = 750*146+148;
   P(55, 9) = 750*148+25;
   P(56, 0) = 750*25+27;
   P(56, 1) = 750*27+174;
   P(56, 2) = 750*174+173;
   P(56, 3) = 750*173+140;
   P(56, 4) = 750*140+143;
   P(56, 5) = 750*143+144;
   P(56, 6) = 750*144+147;
   P(56, 7) = 750*147+145;
   P(56, 8) = 750*145+148;
   P(56, 9) = 750*148+25;
   P(57, 0) = 750*26+29;
   P(57, 1) = 750*29+746;
   P(57, 2) = 750*746+749;
   P(57, 3) = 750*749+566;
   P(57, 4) = 750*566+569;
   P(57, 5) = 750*569+386;
   P(57, 6) = 750*386+389;
   P(57, 7) = 750*389+206;
   P(57, 8) = 750*206+209;
   P(57, 9) = 750*209+26;
   P(58, 0) = 750*26+28;
   P(58, 1) = 750*28+55;
   P(58, 2) = 750*55+58;
   P(58, 3) = 750*58+56;
   P(58, 4) = 750*56+59;
   P(58, 5) = 750*59+30;
   P(58, 6) = 750*30+33;
   P(58, 7) = 750*33+180;
   P(58, 8) = 750*180+209;
   P(58, 9) = 750*209+26;
   P(59, 0) = 750*26+28;
   P(59, 1) = 750*28+55;
   P(59, 2) = 750*55+57;
   P(59, 3) = 750*57+204;
   P(59, 4) = 750*204+207;
   P(59, 5) = 750*207+205;
   P(59, 6) = 750*205+208;
   P(59, 7) = 750*208+206;
   P(59, 8) = 750*206+209;
   P(59, 9) = 750*209+26;
   P(60, 0) = 750*30+33;
   P(60, 1) = 750*33+31;
   P(60, 2) = 750*31+34;
   P(60, 3) = 750*34+32;
   P(60, 4) = 750*32+35;
   P(60, 5) = 750*35+602;
   P(60, 6) = 750*602+604;
   P(60, 7) = 750*604+631;
   P(60, 8) = 750*631+633;
   P(60, 9) = 750*633+30;
   P(61, 0) = 750*30+33;
   P(61, 1) = 750*33+31;
   P(61, 2) = 750*31+34;
   P(61, 3) = 750*34+61;
   P(61, 4) = 750*61+63;
   P(61, 5) = 750*63+210;
   P(61, 6) = 750*210+239;
   P(61, 7) = 750*239+56;
   P(61, 8) = 750*56+59;
   P(61, 9) = 750*59+30;
   P(62, 0) = 750*30+33;
   P(62, 1) = 750*33+180;
   P(62, 2) = 750*180+183;
   P(62, 3) = 750*183+330;
   P(62, 4) = 750*330+333;
   P(62, 5) = 750*333+480;
   P(62, 6) = 750*480+483;
   P(62, 7) = 750*483+630;
   P(62, 8) = 750*630+633;
   P(62, 9) = 750*633+30;
   P(63, 0) = 750*30+633;
   P(63, 1) = 750*633+631;
   P(63, 2) = 750*631+604;
   P(63, 3) = 750*604+601;
   P(63, 4) = 750*601+603;
   P(63, 5) = 750*603+600;
   P(63, 6) = 750*600+629;
   P(63, 7) = 750*629+626;
   P(63, 8) = 750*626+59;
   P(63, 9) = 750*59+30;
   P(64, 0) = 750*30+633;
   P(64, 1) = 750*633+630;
   P(64, 2) = 750*630+659;
   P(64, 3) = 750*659+656;
   P(64, 4) = 750*656+658;
   P(64, 5) = 750*658+655;
   P(64, 6) = 750*655+628;
   P(64, 7) = 750*628+626;
   P(64, 8) = 750*626+59;
   P(64, 9) = 750*59+30;
   P(65, 0) = 750*32+35;
   P(65, 1) = 750*35+602;
   P(65, 2) = 750*602+605;
   P(65, 3) = 750*605+572;
   P(65, 4) = 750*572+575;
   P(65, 5) = 750*575+392;
   P(65, 6) = 750*392+395;
   P(65, 7) = 750*395+212;
   P(65, 8) = 750*212+215;
   P(65, 9) = 750*215+32;
   P(66, 0) = 750*32+35;
   P(66, 1) = 750*35+36;
   P(66, 2) = 750*36+39;
   P(66, 3) = 750*39+37;
   P(66, 4) = 750*37+40;
   P(66, 5) = 750*40+67;
   P(66, 6) = 750*67+69;
   P(66, 7) = 750*69+216;
   P(66, 8) = 750*216+215;
   P(66, 9) = 750*215+32;
   P(67, 0) = 750*32+34;
   P(67, 1) = 750*34+61;
   P(67, 2) = 750*61+64;
   P(67, 3) = 750*64+62;
   P(67, 4) = 750*62+65;
   P(67, 5) = 750*65+66;
   P(67, 6) = 750*66+69;
   P(67, 7) = 750*69+216;
   P(67, 8) = 750*216+215;
   P(67, 9) = 750*215+32;
   P(68, 0) = 750*32+34;
   P(68, 1) = 750*34+61;
   P(68, 2) = 750*61+63;
   P(68, 3) = 750*63+210;
   P(68, 4) = 750*210+213;
   P(68, 5) = 750*213+211;
   P(68, 6) = 750*211+214;
   P(68, 7) = 750*214+212;
   P(68, 8) = 750*212+215;
   P(68, 9) = 750*215+32;
   P(69, 0) = 750*35+602;
   P(69, 1) = 750*602+605;
   P(69, 2) = 750*605+606;
   P(69, 3) = 750*606+609;
   P(69, 4) = 750*609+607;
   P(69, 5) = 750*607+610;
   P(69, 6) = 750*610+637;
   P(69, 7) = 750*637+639;
   P(69, 8) = 750*639+36;
   P(69, 9) = 750*36+35;
   P(70, 0) = 750*35+602;
   P(70, 1) = 750*602+604;
   P(70, 2) = 750*604+631;
   P(70, 3) = 750*631+634;
   P(70, 4) = 750*634+632;
   P(70, 5) = 750*632+635;
   P(70, 6) = 750*635+636;
   P(70, 7) = 750*636+639;
   P(70, 8) = 750*639+36;
   P(70, 9) = 750*36+35;
   P(71, 0) = 750*36+39;
   P(71, 1) = 750*39+37;
   P(71, 2) = 750*37+40;
   P(71, 3) = 750*40+38;
   P(71, 4) = 750*38+41;
   P(71, 5) = 750*41+608;
   P(71, 6) = 750*608+610;
   P(71, 7) = 750*610+637;
   P(71, 8) = 750*637+639;
   P(71, 9) = 750*639+36;
   P(72, 0) = 750*36+39;
   P(72, 1) = 750*39+186;
   P(72, 2) = 750*186+189;
   P(72, 3) = 750*189+336;
   P(72, 4) = 750*336+339;
   P(72, 5) = 750*339+486;
   P(72, 6) = 750*486+489;
   P(72, 7) = 750*489+636;
   P(72, 8) = 750*636+639;
   P(72, 9) = 750*639+36;
   P(73, 0) = 750*38+41;
   P(73, 1) = 750*41+608;
   P(73, 2) = 750*608+611;
   P(73, 3) = 750*611+578;
   P(73, 4) = 750*578+581;
   P(73, 5) = 750*581+398;
   P(73, 6) = 750*398+401;
   P(73, 7) = 750*401+218;
   P(73, 8) = 750*218+221;
   P(73, 9) = 750*221+38;
   P(74, 0) = 750*38+41;
   P(74, 1) = 750*41+42;
   P(74, 2) = 750*42+45;
   P(74, 3) = 750*45+43;
   P(74, 4) = 750*43+46;
   P(74, 5) = 750*46+73;
   P(74, 6) = 750*73+75;
   P(74, 7) = 750*75+222;
   P(74, 8) = 750*222+221;
   P(74, 9) = 750*221+38;
   P(75, 0) = 750*38+40;
   P(75, 1) = 750*40+67;
   P(75, 2) = 750*67+70;
   P(75, 3) = 750*70+68;
   P(75, 4) = 750*68+71;
   P(75, 5) = 750*71+72;
   P(75, 6) = 750*72+75;
   P(75, 7) = 750*75+222;
   P(75, 8) = 750*222+221;
   P(75, 9) = 750*221+38;
   P(76, 0) = 750*38+40;
   P(76, 1) = 750*40+67;
   P(76, 2) = 750*67+69;
   P(76, 3) = 750*69+216;
   P(76, 4) = 750*216+219;
   P(76, 5) = 750*219+217;
   P(76, 6) = 750*217+220;
   P(76, 7) = 750*220+218;
   P(76, 8) = 750*218+221;
   P(76, 9) = 750*221+38;
   P(77, 0) = 750*41+608;
   P(77, 1) = 750*608+611;
   P(77, 2) = 750*611+612;
   P(77, 3) = 750*612+615;
   P(77, 4) = 750*615+613;
   P(77, 5) = 750*613+616;
   P(77, 6) = 750*616+643;
   P(77, 7) = 750*643+645;
   P(77, 8) = 750*645+42;
   P(77, 9) = 750*42+41;
   P(78, 0) = 750*41+608;
   P(78, 1) = 750*608+610;
   P(78, 2) = 750*610+637;
   P(78, 3) = 750*637+640;
   P(78, 4) = 750*640+638;
   P(78, 5) = 750*638+641;
   P(78, 6) = 750*641+642;
   P(78, 7) = 750*642+645;
   P(78, 8) = 750*645+42;
   P(78, 9) = 750*42+41;
   P(79, 0) = 750*42+45;
   P(79, 1) = 750*45+43;
   P(79, 2) = 750*43+46;
   P(79, 3) = 750*46+44;
   P(79, 4) = 750*44+47;
   P(79, 5) = 750*47+614;
   P(79, 6) = 750*614+616;
   P(79, 7) = 750*616+643;
   P(79, 8) = 750*643+645;
   P(79, 9) = 750*645+42;
   P(80, 0) = 750*42+45;
   P(80, 1) = 750*45+192;
   P(80, 2) = 750*192+195;
   P(80, 3) = 750*195+342;
   P(80, 4) = 750*342+345;
   P(80, 5) = 750*345+492;
   P(80, 6) = 750*492+495;
   P(80, 7) = 750*495+642;
   P(80, 8) = 750*642+645;
   P(80, 9) = 750*645+42;
   P(81, 0) = 750*44+47;
   P(81, 1) = 750*47+614;
   P(81, 2) = 750*614+617;
   P(81, 3) = 750*617+584;
   P(81, 4) = 750*584+587;
   P(81, 5) = 750*587+404;
   P(81, 6) = 750*404+407;
   P(81, 7) = 750*407+224;
   P(81, 8) = 750*224+227;
   P(81, 9) = 750*227+44;
   P(82, 0) = 750*44+47;
   P(82, 1) = 750*47+48;
   P(82, 2) = 750*48+51;
   P(82, 3) = 750*51+49;
   P(82, 4) = 750*49+52;
   P(82, 5) = 750*52+79;
   P(82, 6) = 750*79+81;
   P(82, 7) = 750*81+228;
   P(82, 8) = 750*228+227;
   P(82, 9) = 750*227+44;
   P(83, 0) = 750*44+46;
   P(83, 1) = 750*46+73;
   P(83, 2) = 750*73+76;
   P(83, 3) = 750*76+74;
   P(83, 4) = 750*74+77;
   P(83, 5) = 750*77+78;
   P(83, 6) = 750*78+81;
   P(83, 7) = 750*81+228;
   P(83, 8) = 750*228+227;
   P(83, 9) = 750*227+44;
   P(84, 0) = 750*44+46;
   P(84, 1) = 750*46+73;
   P(84, 2) = 750*73+75;
   P(84, 3) = 750*75+222;
   P(84, 4) = 750*222+225;
   P(84, 5) = 750*225+223;
   P(84, 6) = 750*223+226;
   P(84, 7) = 750*226+224;
   P(84, 8) = 750*224+227;
   P(84, 9) = 750*227+44;
   P(85, 0) = 750*47+614;
   P(85, 1) = 750*614+617;
   P(85, 2) = 750*617+618;
   P(85, 3) = 750*618+621;
   P(85, 4) = 750*621+619;
   P(85, 5) = 750*619+622;
   P(85, 6) = 750*622+649;
   P(85, 7) = 750*649+651;
   P(85, 8) = 750*651+48;
   P(85, 9) = 750*48+47;
   P(86, 0) = 750*47+614;
   P(86, 1) = 750*614+616;
   P(86, 2) = 750*616+643;
   P(86, 3) = 750*643+646;
   P(86, 4) = 750*646+644;
   P(86, 5) = 750*644+647;
   P(86, 6) = 750*647+648;
   P(86, 7) = 750*648+651;
   P(86, 8) = 750*651+48;
   P(86, 9) = 750*48+47;
   P(87, 0) = 750*48+51;
   P(87, 1) = 750*51+49;
   P(87, 2) = 750*49+52;
   P(87, 3) = 750*52+50;
   P(87, 4) = 750*50+53;
   P(87, 5) = 750*53+620;
   P(87, 6) = 750*620+622;
   P(87, 7) = 750*622+649;
   P(87, 8) = 750*649+651;
   P(87, 9) = 750*651+48;
   P(88, 0) = 750*48+51;
   P(88, 1) = 750*51+198;
   P(88, 2) = 750*198+201;
   P(88, 3) = 750*201+348;
   P(88, 4) = 750*348+351;
   P(88, 5) = 750*351+498;
   P(88, 6) = 750*498+501;
   P(88, 7) = 750*501+648;
   P(88, 8) = 750*648+651;
   P(88, 9) = 750*651+48;
   P(89, 0) = 750*50+53;
   P(89, 1) = 750*53+620;
   P(89, 2) = 750*620+623;
   P(89, 3) = 750*623+590;
   P(89, 4) = 750*590+593;
   P(89, 5) = 750*593+410;
   P(89, 6) = 750*410+413;
   P(89, 7) = 750*413+230;
   P(89, 8) = 750*230+233;
   P(89, 9) = 750*233+50;
   P(90, 0) = 750*50+53;
   P(90, 1) = 750*53+54;
   P(90, 2) = 750*54+57;
   P(90, 3) = 750*57+55;
   P(90, 4) = 750*55+58;
   P(90, 5) = 750*58+85;
   P(90, 6) = 750*85+87;
   P(90, 7) = 750*87+234;
   P(90, 8) = 750*234+233;
   P(90, 9) = 750*233+50;
   P(91, 0) = 750*50+52;
   P(91, 1) = 750*52+79;
   P(91, 2) = 750*79+82;
   P(91, 3) = 750*82+80;
   P(91, 4) = 750*80+83;
   P(91, 5) = 750*83+84;
   P(91, 6) = 750*84+87;
   P(91, 7) = 750*87+234;
   P(91, 8) = 750*234+233;
   P(91, 9) = 750*233+50;
   P(92, 0) = 750*50+52;
   P(92, 1) = 750*52+79;
   P(92, 2) = 750*79+81;
   P(92, 3) = 750*81+228;
   P(92, 4) = 750*228+231;
   P(92, 5) = 750*231+229;
   P(92, 6) = 750*229+232;
   P(92, 7) = 750*232+230;
   P(92, 8) = 750*230+233;
   P(92, 9) = 750*233+50;
   P(93, 0) = 750*53+620;
   P(93, 1) = 750*620+623;
   P(93, 2) = 750*623+624;
   P(93, 3) = 750*624+627;
   P(93, 4) = 750*627+625;
   P(93, 5) = 750*625+628;
   P(93, 6) = 750*628+655;
   P(93, 7) = 750*655+657;
   P(93, 8) = 750*657+54;
   P(93, 9) = 750*54+53;
   P(94, 0) = 750*53+620;
   P(94, 1) = 750*620+622;
   P(94, 2) = 750*622+649;
   P(94, 3) = 750*649+652;
   P(94, 4) = 750*652+650;
   P(94, 5) = 750*650+653;
   P(94, 6) = 750*653+654;
   P(94, 7) = 750*654+657;
   P(94, 8) = 750*657+54;
   P(94, 9) = 750*54+53;
   P(95, 0) = 750*54+57;
   P(95, 1) = 750*57+55;
   P(95, 2) = 750*55+58;
   P(95, 3) = 750*58+56;
   P(95, 4) = 750*56+59;
   P(95, 5) = 750*59+626;
   P(95, 6) = 750*626+628;
   P(95, 7) = 750*628+655;
   P(95, 8) = 750*655+657;
   P(95, 9) = 750*657+54;
   P(96, 0) = 750*54+57;
   P(96, 1) = 750*57+204;
   P(96, 2) = 750*204+207;
   P(96, 3) = 750*207+354;
   P(96, 4) = 750*354+357;
   P(96, 5) = 750*357+504;
   P(96, 6) = 750*504+507;
   P(96, 7) = 750*507+654;
   P(96, 8) = 750*654+657;
   P(96, 9) = 750*657+54;
   P(97, 0) = 750*56+59;
   P(97, 1) = 750*59+626;
   P(97, 2) = 750*626+629;
   P(97, 3) = 750*629+596;
   P(97, 4) = 750*596+599;
   P(97, 5) = 750*599+416;
   P(97, 6) = 750*416+419;
   P(97, 7) = 750*419+236;
   P(97, 8) = 750*236+239;
   P(97, 9) = 750*239+56;
   P(98, 0) = 750*56+58;
   P(98, 1) = 750*58+85;
   P(98, 2) = 750*85+88;
   P(98, 3) = 750*88+86;
   P(98, 4) = 750*86+89;
   P(98, 5) = 750*89+60;
   P(98, 6) = 750*60+63;
   P(98, 7) = 750*63+210;
   P(98, 8) = 750*210+239;
   P(98, 9) = 750*239+56;
   P(99, 0) = 750*56+58;
   P(99, 1) = 750*58+85;
   P(99, 2) = 750*85+87;
   P(99, 3) = 750*87+234;
   P(99, 4) = 750*234+237;
   P(99, 5) = 750*237+235;
   P(99, 6) = 750*235+238;
   P(99, 7) = 750*238+236;
   P(99, 8) = 750*236+239;
   P(99, 9) = 750*239+56;
   P(100, 0) = 750*60+63;
   P(100, 1) = 750*63+61;
   P(100, 2) = 750*61+64;
   P(100, 3) = 750*64+62;
   P(100, 4) = 750*62+65;
   P(100, 5) = 750*65+632;
   P(100, 6) = 750*632+634;
   P(100, 7) = 750*634+661;
   P(100, 8) = 750*661+663;
   P(100, 9) = 750*663+60;
   P(101, 0) = 750*60+63;
   P(101, 1) = 750*63+61;
   P(101, 2) = 750*61+64;
   P(101, 3) = 750*64+91;
   P(101, 4) = 750*91+93;
   P(101, 5) = 750*93+240;
   P(101, 6) = 750*240+269;
   P(101, 7) = 750*269+86;
   P(101, 8) = 750*86+89;
   P(101, 9) = 750*89+60;
   P(102, 0) = 750*60+63;
   P(102, 1) = 750*63+210;
   P(102, 2) = 750*210+213;
   P(102, 3) = 750*213+360;
   P(102, 4) = 750*360+363;
   P(102, 5) = 750*363+510;
   P(102, 6) = 750*510+513;
   P(102, 7) = 750*513+660;
   P(102, 8) = 750*660+663;
   P(102, 9) = 750*663+60;
   P(103, 0) = 750*60+663;
   P(103, 1) = 750*663+661;
   P(103, 2) = 750*661+634;
   P(103, 3) = 750*634+631;
   P(103, 4) = 750*631+633;
   P(103, 5) = 750*633+630;
   P(103, 6) = 750*630+659;
   P(103, 7) = 750*659+656;
   P(103, 8) = 750*656+89;
   P(103, 9) = 750*89+60;
   P(104, 0) = 750*60+663;
   P(104, 1) = 750*663+660;
   P(104, 2) = 750*660+689;
   P(104, 3) = 750*689+686;
   P(104, 4) = 750*686+688;
   P(104, 5) = 750*688+685;
   P(104, 6) = 750*685+658;
   P(104, 7) = 750*658+656;
   P(104, 8) = 750*656+89;
   P(104, 9) = 750*89+60;
   P(105, 0) = 750*62+65;
   P(105, 1) = 750*65+632;
   P(105, 2) = 750*632+635;
   P(105, 3) = 750*635+452;
   P(105, 4) = 750*452+455;
   P(105, 5) = 750*455+422;
   P(105, 6) = 750*422+425;
   P(105, 7) = 750*425+242;
   P(105, 8) = 750*242+245;
   P(105, 9) = 750*245+62;
   P(106, 0) = 750*62+65;
   P(106, 1) = 750*65+66;
   P(106, 2) = 750*66+69;
   P(106, 3) = 750*69+67;
   P(106, 4) = 750*67+70;
   P(106, 5) = 750*70+97;
   P(106, 6) = 750*97+99;
   P(106, 7) = 750*99+246;
   P(106, 8) = 750*246+245;
   P(106, 9) = 750*245+62;
   P(107, 0) = 750*62+64;
   P(107, 1) = 750*64+91;
   P(107, 2) = 750*91+94;
   P(107, 3) = 750*94+92;
   P(107, 4) = 750*92+95;
   P(107, 5) = 750*95+96;
   P(107, 6) = 750*96+99;
   P(107, 7) = 750*99+246;
   P(107, 8) = 750*246+245;
   P(107, 9) = 750*245+62;
   P(108, 0) = 750*62+64;
   P(108, 1) = 750*64+91;
   P(108, 2) = 750*91+93;
   P(108, 3) = 750*93+240;
   P(108, 4) = 750*240+243;
   P(108, 5) = 750*243+241;
   P(108, 6) = 750*241+244;
   P(108, 7) = 750*244+242;
   P(108, 8) = 750*242+245;
   P(108, 9) = 750*245+62;
   P(109, 0) = 750*65+632;
   P(109, 1) = 750*632+635;
   P(109, 2) = 750*635+636;
   P(109, 3) = 750*636+639;
   P(109, 4) = 750*639+637;
   P(109, 5) = 750*637+640;
   P(109, 6) = 750*640+667;
   P(109, 7) = 750*667+669;
   P(109, 8) = 750*669+66;
   P(109, 9) = 750*66+65;
   P(110, 0) = 750*65+632;
   P(110, 1) = 750*632+634;
   P(110, 2) = 750*634+661;
   P(110, 3) = 750*661+664;
   P(110, 4) = 750*664+662;
   P(110, 5) = 750*662+665;
   P(110, 6) = 750*665+666;
   P(110, 7) = 750*666+669;
   P(110, 8) = 750*669+66;
   P(110, 9) = 750*66+65;
   P(111, 0) = 750*66+69;
   P(111, 1) = 750*69+67;
   P(111, 2) = 750*67+70;
   P(111, 3) = 750*70+68;
   P(111, 4) = 750*68+71;
   P(111, 5) = 750*71+638;
   P(111, 6) = 750*638+640;
   P(111, 7) = 750*640+667;
   P(111, 8) = 750*667+669;
   P(111, 9) = 750*669+66;
   P(112, 0) = 750*66+69;
   P(112, 1) = 750*69+216;
   P(112, 2) = 750*216+219;
   P(112, 3) = 750*219+366;
   P(112, 4) = 750*366+369;
   P(112, 5) = 750*369+516;
   P(112, 6) = 750*516+519;
   P(112, 7) = 750*519+666;
   P(112, 8) = 750*666+669;
   P(112, 9) = 750*669+66;
   P(113, 0) = 750*68+71;
   P(113, 1) = 750*71+638;
   P(113, 2) = 750*638+641;
   P(113, 3) = 750*641+458;
   P(113, 4) = 750*458+461;
   P(113, 5) = 750*461+428;
   P(113, 6) = 750*428+431;
   P(113, 7) = 750*431+248;
   P(113, 8) = 750*248+251;
   P(113, 9) = 750*251+68;
   P(114, 0) = 750*68+71;
   P(114, 1) = 750*71+72;
   P(114, 2) = 750*72+75;
   P(114, 3) = 750*75+73;
   P(114, 4) = 750*73+76;
   P(114, 5) = 750*76+103;
   P(114, 6) = 750*103+105;
   P(114, 7) = 750*105+252;
   P(114, 8) = 750*252+251;
   P(114, 9) = 750*251+68;
   P(115, 0) = 750*68+70;
   P(115, 1) = 750*70+97;
   P(115, 2) = 750*97+100;
   P(115, 3) = 750*100+98;
   P(115, 4) = 750*98+101;
   P(115, 5) = 750*101+102;
   P(115, 6) = 750*102+105;
   P(115, 7) = 750*105+252;
   P(115, 8) = 750*252+251;
   P(115, 9) = 750*251+68;
   P(116, 0) = 750*68+70;
   P(116, 1) = 750*70+97;
   P(116, 2) = 750*97+99;
   P(116, 3) = 750*99+246;
   P(116, 4) = 750*246+249;
   P(116, 5) = 750*249+247;
   P(116, 6) = 750*247+250;
   P(116, 7) = 750*250+248;
   P(116, 8) = 750*248+251;
   P(116, 9) = 750*251+68;
   P(117, 0) = 750*71+638;
   P(117, 1) = 750*638+641;
   P(117, 2) = 750*641+642;
   P(117, 3) = 750*642+645;
   P(117, 4) = 750*645+643;
   P(117, 5) = 750*643+646;
   P(117, 6) = 750*646+673;
   P(117, 7) = 750*673+675;
   P(117, 8) = 750*675+72;
   P(117, 9) = 750*72+71;
   P(118, 0) = 750*71+638;
   P(118, 1) = 750*638+640;
   P(118, 2) = 750*640+667;
   P(118, 3) = 750*667+670;
   P(118, 4) = 750*670+668;
   P(118, 5) = 750*668+671;
   P(118, 6) = 750*671+672;
   P(118, 7) = 750*672+675;
   P(118, 8) = 750*675+72;
   P(118, 9) = 750*72+71;
   P(119, 0) = 750*72+75;
   P(119, 1) = 750*75+73;
   P(119, 2) = 750*73+76;
   P(119, 3) = 750*76+74;
   P(119, 4) = 750*74+77;
   P(119, 5) = 750*77+644;
   P(119, 6) = 750*644+646;
   P(119, 7) = 750*646+673;
   P(119, 8) = 750*673+675;
   P(119, 9) = 750*675+72;
   P(120, 0) = 750*72+75;
   P(120, 1) = 750*75+222;
   P(120, 2) = 750*222+225;
   P(120, 3) = 750*225+372;
   P(120, 4) = 750*372+375;
   P(120, 5) = 750*375+522;
   P(120, 6) = 750*522+525;
   P(120, 7) = 750*525+672;
   P(120, 8) = 750*672+675;
   P(120, 9) = 750*675+72;
   P(121, 0) = 750*74+77;
   P(121, 1) = 750*77+644;
   P(121, 2) = 750*644+647;
   P(121, 3) = 750*647+464;
   P(121, 4) = 750*464+467;
   P(121, 5) = 750*467+434;
   P(121, 6) = 750*434+437;
   P(121, 7) = 750*437+254;
   P(121, 8) = 750*254+257;
   P(121, 9) = 750*257+74;
   P(122, 0) = 750*74+77;
   P(122, 1) = 750*77+78;
   P(122, 2) = 750*78+81;
   P(122, 3) = 750*81+79;
   P(122, 4) = 750*79+82;
   P(122, 5) = 750*82+109;
   P(122, 6) = 750*109+111;
   P(122, 7) = 750*111+258;
   P(122, 8) = 750*258+257;
   P(122, 9) = 750*257+74;
   P(123, 0) = 750*74+76;
   P(123, 1) = 750*76+103;
   P(123, 2) = 750*103+106;
   P(123, 3) = 750*106+104;
   P(123, 4) = 750*104+107;
   P(123, 5) = 750*107+108;
   P(123, 6) = 750*108+111;
   P(123, 7) = 750*111+258;
   P(123, 8) = 750*258+257;
   P(123, 9) = 750*257+74;
   P(124, 0) = 750*74+76;
   P(124, 1) = 750*76+103;
   P(124, 2) = 750*103+105;
   P(124, 3) = 750*105+252;
   P(124, 4) = 750*252+255;
   P(124, 5) = 750*255+253;
   P(124, 6) = 750*253+256;
   P(124, 7) = 750*256+254;
   P(124, 8) = 750*254+257;
   P(124, 9) = 750*257+74;
   P(125, 0) = 750*77+644;
   P(125, 1) = 750*644+647;
   P(125, 2) = 750*647+648;
   P(125, 3) = 750*648+651;
   P(125, 4) = 750*651+649;
   P(125, 5) = 750*649+652;
   P(125, 6) = 750*652+679;
   P(125, 7) = 750*679+681;
   P(125, 8) = 750*681+78;
   P(125, 9) = 750*78+77;
   P(126, 0) = 750*77+644;
   P(126, 1) = 750*644+646;
   P(126, 2) = 750*646+673;
   P(126, 3) = 750*673+676;
   P(126, 4) = 750*676+674;
   P(126, 5) = 750*674+677;
   P(126, 6) = 750*677+678;
   P(126, 7) = 750*678+681;
   P(126, 8) = 750*681+78;
   P(126, 9) = 750*78+77;
   P(127, 0) = 750*78+81;
   P(127, 1) = 750*81+79;
   P(127, 2) = 750*79+82;
   P(127, 3) = 750*82+80;
   P(127, 4) = 750*80+83;
   P(127, 5) = 750*83+650;
   P(127, 6) = 750*650+652;
   P(127, 7) = 750*652+679;
   P(127, 8) = 750*679+681;
   P(127, 9) = 750*681+78;
   P(128, 0) = 750*78+81;
   P(128, 1) = 750*81+228;
   P(128, 2) = 750*228+231;
   P(128, 3) = 750*231+378;
   P(128, 4) = 750*378+381;
   P(128, 5) = 750*381+528;
   P(128, 6) = 750*528+531;
   P(128, 7) = 750*531+678;
   P(128, 8) = 750*678+681;
   P(128, 9) = 750*681+78;
   P(129, 0) = 750*80+83;
   P(129, 1) = 750*83+650;
   P(129, 2) = 750*650+653;
   P(129, 3) = 750*653+470;
   P(129, 4) = 750*470+473;
   P(129, 5) = 750*473+440;
   P(129, 6) = 750*440+443;
   P(129, 7) = 750*443+260;
   P(129, 8) = 750*260+263;
   P(129, 9) = 750*263+80;
   P(130, 0) = 750*80+83;
   P(130, 1) = 750*83+84;
   P(130, 2) = 750*84+87;
   P(130, 3) = 750*87+85;
   P(130, 4) = 750*85+88;
   P(130, 5) = 750*88+115;
   P(130, 6) = 750*115+117;
   P(130, 7) = 750*117+264;
   P(130, 8) = 750*264+263;
   P(130, 9) = 750*263+80;
   P(131, 0) = 750*80+82;
   P(131, 1) = 750*82+109;
   P(131, 2) = 750*109+112;
   P(131, 3) = 750*112+110;
   P(131, 4) = 750*110+113;
   P(131, 5) = 750*113+114;
   P(131, 6) = 750*114+117;
   P(131, 7) = 750*117+264;
   P(131, 8) = 750*264+263;
   P(131, 9) = 750*263+80;
   P(132, 0) = 750*80+82;
   P(132, 1) = 750*82+109;
   P(132, 2) = 750*109+111;
   P(132, 3) = 750*111+258;
   P(132, 4) = 750*258+261;
   P(132, 5) = 750*261+259;
   P(132, 6) = 750*259+262;
   P(132, 7) = 750*262+260;
   P(132, 8) = 750*260+263;
   P(132, 9) = 750*263+80;
   P(133, 0) = 750*83+650;
   P(133, 1) = 750*650+653;
   P(133, 2) = 750*653+654;
   P(133, 3) = 750*654+657;
   P(133, 4) = 750*657+655;
   P(133, 5) = 750*655+658;
   P(133, 6) = 750*658+685;
   P(133, 7) = 750*685+687;
   P(133, 8) = 750*687+84;
   P(133, 9) = 750*84+83;
   P(134, 0) = 750*83+650;
   P(134, 1) = 750*650+652;
   P(134, 2) = 750*652+679;
   P(134, 3) = 750*679+682;
   P(134, 4) = 750*682+680;
   P(134, 5) = 750*680+683;
   P(134, 6) = 750*683+684;
   P(134, 7) = 750*684+687;
   P(134, 8) = 750*687+84;
   P(134, 9) = 750*84+83;
   P(135, 0) = 750*84+87;
   P(135, 1) = 750*87+85;
   P(135, 2) = 750*85+88;
   P(135, 3) = 750*88+86;
   P(135, 4) = 750*86+89;
   P(135, 5) = 750*89+656;
   P(135, 6) = 750*656+658;
   P(135, 7) = 750*658+685;
   P(135, 8) = 750*685+687;
   P(135, 9) = 750*687+84;
   P(136, 0) = 750*84+87;
   P(136, 1) = 750*87+234;
   P(136, 2) = 750*234+237;
   P(136, 3) = 750*237+384;
   P(136, 4) = 750*384+387;
   P(136, 5) = 750*387+534;
   P(136, 6) = 750*534+537;
   P(136, 7) = 750*537+684;
   P(136, 8) = 750*684+687;
   P(136, 9) = 750*687+84;
   P(137, 0) = 750*86+89;
   P(137, 1) = 750*89+656;
   P(137, 2) = 750*656+659;
   P(137, 3) = 750*659+476;
   P(137, 4) = 750*476+479;
   P(137, 5) = 750*479+446;
   P(137, 6) = 750*446+449;
   P(137, 7) = 750*449+266;
   P(137, 8) = 750*266+269;
   P(137, 9) = 750*269+86;
   P(138, 0) = 750*86+88;
   P(138, 1) = 750*88+115;
   P(138, 2) = 750*115+118;
   P(138, 3) = 750*118+116;
   P(138, 4) = 750*116+119;
   P(138, 5) = 750*119+90;
   P(138, 6) = 750*90+93;
   P(138, 7) = 750*93+240;
   P(138, 8) = 750*240+269;
   P(138, 9) = 750*269+86;
   P(139, 0) = 750*86+88;
   P(139, 1) = 750*88+115;
   P(139, 2) = 750*115+117;
   P(139, 3) = 750*117+264;
   P(139, 4) = 750*264+267;
   P(139, 5) = 750*267+265;
   P(139, 6) = 750*265+268;
   P(139, 7) = 750*268+266;
   P(139, 8) = 750*266+269;
   P(139, 9) = 750*269+86;
   P(140, 0) = 750*90+93;
   P(140, 1) = 750*93+91;
   P(140, 2) = 750*91+94;
   P(140, 3) = 750*94+92;
   P(140, 4) = 750*92+95;
   P(140, 5) = 750*95+662;
   P(140, 6) = 750*662+664;
   P(140, 7) = 750*664+691;
   P(140, 8) = 750*691+693;
   P(140, 9) = 750*693+90;
   P(141, 0) = 750*90+93;
   P(141, 1) = 750*93+91;
   P(141, 2) = 750*91+94;
   P(141, 3) = 750*94+121;
   P(141, 4) = 750*121+123;
   P(141, 5) = 750*123+270;
   P(141, 6) = 750*270+299;
   P(141, 7) = 750*299+116;
   P(141, 8) = 750*116+119;
   P(141, 9) = 750*119+90;
   P(142, 0) = 750*90+93;
   P(142, 1) = 750*93+240;
   P(142, 2) = 750*240+243;
   P(142, 3) = 750*243+390;
   P(142, 4) = 750*390+393;
   P(142, 5) = 750*393+540;
   P(142, 6) = 750*540+543;
   P(142, 7) = 750*543+690;
   P(142, 8) = 750*690+693;
   P(142, 9) = 750*693+90;
   P(143, 0) = 750*90+693;
   P(143, 1) = 750*693+691;
   P(143, 2) = 750*691+664;
   P(143, 3) = 750*664+661;
   P(143, 4) = 750*661+663;
   P(143, 5) = 750*663+660;
   P(143, 6) = 750*660+689;
   P(143, 7) = 750*689+686;
   P(143, 8) = 750*686+119;
   P(143, 9) = 750*119+90;
   P(144, 0) = 750*90+693;
   P(144, 1) = 750*693+690;
   P(144, 2) = 750*690+719;
   P(144, 3) = 750*719+716;
   P(144, 4) = 750*716+718;
   P(144, 5) = 750*718+715;
   P(144, 6) = 750*715+688;
   P(144, 7) = 750*688+686;
   P(144, 8) = 750*686+119;
   P(144, 9) = 750*119+90;
   P(145, 0) = 750*92+95;
   P(145, 1) = 750*95+662;
   P(145, 2) = 750*662+665;
   P(145, 3) = 750*665+482;
   P(145, 4) = 750*482+485;
   P(145, 5) = 750*485+302;
   P(145, 6) = 750*302+305;
   P(145, 7) = 750*305+272;
   P(145, 8) = 750*272+275;
   P(145, 9) = 750*275+92;
   P(146, 0) = 750*92+95;
   P(146, 1) = 750*95+96;
   P(146, 2) = 750*96+99;
   P(146, 3) = 750*99+97;
   P(146, 4) = 750*97+100;
   P(146, 5) = 750*100+127;
   P(146, 6) = 750*127+129;
   P(146, 7) = 750*129+276;
   P(146, 8) = 750*276+275;
   P(146, 9) = 750*275+92;
   P(147, 0) = 750*92+94;
   P(147, 1) = 750*94+121;
   P(147, 2) = 750*121+124;
   P(147, 3) = 750*124+122;
   P(147, 4) = 750*122+125;
   P(147, 5) = 750*125+126;
   P(147, 6) = 750*126+129;
   P(147, 7) = 750*129+276;
   P(147, 8) = 750*276+275;
   P(147, 9) = 750*275+92;
   P(148, 0) = 750*92+94;
   P(148, 1) = 750*94+121;
   P(148, 2) = 750*121+123;
   P(148, 3) = 750*123+270;
   P(148, 4) = 750*270+273;
   P(148, 5) = 750*273+271;
   P(148, 6) = 750*271+274;
   P(148, 7) = 750*274+272;
   P(148, 8) = 750*272+275;
   P(148, 9) = 750*275+92;
   P(149, 0) = 750*95+662;
   P(149, 1) = 750*662+665;
   P(149, 2) = 750*665+666;
   P(149, 3) = 750*666+669;
   P(149, 4) = 750*669+667;
   P(149, 5) = 750*667+670;
   P(149, 6) = 750*670+697;
   P(149, 7) = 750*697+699;
   P(149, 8) = 750*699+96;
   P(149, 9) = 750*96+95;
   P(150, 0) = 750*95+662;
   P(150, 1) = 750*662+664;
   P(150, 2) = 750*664+691;
   P(150, 3) = 750*691+694;
   P(150, 4) = 750*694+692;
   P(150, 5) = 750*692+695;
   P(150, 6) = 750*695+696;
   P(150, 7) = 750*696+699;
   P(150, 8) = 750*699+96;
   P(150, 9) = 750*96+95;
   P(151, 0) = 750*96+99;
   P(151, 1) = 750*99+97;
   P(151, 2) = 750*97+100;
   P(151, 3) = 750*100+98;
   P(151, 4) = 750*98+101;
   P(151, 5) = 750*101+668;
   P(151, 6) = 750*668+670;
   P(151, 7) = 750*670+697;
   P(151, 8) = 750*697+699;
   P(151, 9) = 750*699+96;
   P(152, 0) = 750*96+99;
   P(152, 1) = 750*99+246;
   P(152, 2) = 750*246+249;
   P(152, 3) = 750*249+396;
   P(152, 4) = 750*396+399;
   P(152, 5) = 750*399+546;
   P(152, 6) = 750*546+549;
   P(152, 7) = 750*549+696;
   P(152, 8) = 750*696+699;
   P(152, 9) = 750*699+96;
   P(153, 0) = 750*98+101;
   P(153, 1) = 750*101+668;
   P(153, 2) = 750*668+671;
   P(153, 3) = 750*671+488;
   P(153, 4) = 750*488+491;
   P(153, 5) = 750*491+308;
   P(153, 6) = 750*308+311;
   P(153, 7) = 750*311+278;
   P(153, 8) = 750*278+281;
   P(153, 9) = 750*281+98;
   P(154, 0) = 750*98+101;
   P(154, 1) = 750*101+102;
   P(154, 2) = 750*102+105;
   P(154, 3) = 750*105+103;
   P(154, 4) = 750*103+106;
   P(154, 5) = 750*106+133;
   P(154, 6) = 750*133+135;
   P(154, 7) = 750*135+282;
   P(154, 8) = 750*282+281;
   P(154, 9) = 750*281+98;
   P(155, 0) = 750*98+100;
   P(155, 1) = 750*100+127;
   P(155, 2) = 750*127+130;
   P(155, 3) = 750*130+128;
   P(155, 4) = 750*128+131;
   P(155, 5) = 750*131+132;
   P(155, 6) = 750*132+135;
   P(155, 7) = 750*135+282;
   P(155, 8) = 750*282+281;
   P(155, 9) = 750*281+98;
   P(156, 0) = 750*98+100;
   P(156, 1) = 750*100+127;
   P(156, 2) = 750*127+129;
   P(156, 3) = 750*129+276;
   P(156, 4) = 750*276+279;
   P(156, 5) = 750*279+277;
   P(156, 6) = 750*277+280;
   P(156, 7) = 750*280+278;
   P(156, 8) = 750*278+281;
   P(156, 9) = 750*281+98;
   P(157, 0) = 750*101+668;
   P(157, 1) = 750*668+671;
   P(157, 2) = 750*671+672;
   P(157, 3) = 750*672+675;
   P(157, 4) = 750*675+673;
   P(157, 5) = 750*673+676;
   P(157, 6) = 750*676+703;
   P(157, 7) = 750*703+705;
   P(157, 8) = 750*705+102;
   P(157, 9) = 750*102+101;
   P(158, 0) = 750*101+668;
   P(158, 1) = 750*668+670;
   P(158, 2) = 750*670+697;
   P(158, 3) = 750*697+700;
   P(158, 4) = 750*700+698;
   P(158, 5) = 750*698+701;
   P(158, 6) = 750*701+702;
   P(158, 7) = 750*702+705;
   P(158, 8) = 750*705+102;
   P(158, 9) = 750*102+101;
   P(159, 0) = 750*102+105;
   P(159, 1) = 750*105+103;
   P(159, 2) = 750*103+106;
   P(159, 3) = 750*106+104;
   P(159, 4) = 750*104+107;
   P(159, 5) = 750*107+674;
   P(159, 6) = 750*674+676;
   P(159, 7) = 750*676+703;
   P(159, 8) = 750*703+705;
   P(159, 9) = 750*705+102;
   P(160, 0) = 750*102+105;
   P(160, 1) = 750*105+252;
   P(160, 2) = 750*252+255;
   P(160, 3) = 750*255+402;
   P(160, 4) = 750*402+405;
   P(160, 5) = 750*405+552;
   P(160, 6) = 750*552+555;
   P(160, 7) = 750*555+702;
   P(160, 8) = 750*702+705;
   P(160, 9) = 750*705+102;
   P(161, 0) = 750*104+107;
   P(161, 1) = 750*107+674;
   P(161, 2) = 750*674+677;
   P(161, 3) = 750*677+494;
   P(161, 4) = 750*494+497;
   P(161, 5) = 750*497+314;
   P(161, 6) = 750*314+317;
   P(161, 7) = 750*317+284;
   P(161, 8) = 750*284+287;
   P(161, 9) = 750*287+104;
   P(162, 0) = 750*104+107;
   P(162, 1) = 750*107+108;
   P(162, 2) = 750*108+111;
   P(162, 3) = 750*111+109;
   P(162, 4) = 750*109+112;
   P(162, 5) = 750*112+139;
   P(162, 6) = 750*139+141;
   P(162, 7) = 750*141+288;
   P(162, 8) = 750*288+287;
   P(162, 9) = 750*287+104;
   P(163, 0) = 750*104+106;
   P(163, 1) = 750*106+133;
   P(163, 2) = 750*133+136;
   P(163, 3) = 750*136+134;
   P(163, 4) = 750*134+137;
   P(163, 5) = 750*137+138;
   P(163, 6) = 750*138+141;
   P(163, 7) = 750*141+288;
   P(163, 8) = 750*288+287;
   P(163, 9) = 750*287+104;
   P(164, 0) = 750*104+106;
   P(164, 1) = 750*106+133;
   P(164, 2) = 750*133+135;
   P(164, 3) = 750*135+282;
   P(164, 4) = 750*282+285;
   P(164, 5) = 750*285+283;
   P(164, 6) = 750*283+286;
   P(164, 7) = 750*286+284;
   P(164, 8) = 750*284+287;
   P(164, 9) = 750*287+104;
   P(165, 0) = 750*107+674;
   P(165, 1) = 750*674+677;
   P(165, 2) = 750*677+678;
   P(165, 3) = 750*678+681;
   P(165, 4) = 750*681+679;
   P(165, 5) = 750*679+682;
   P(165, 6) = 750*682+709;
   P(165, 7) = 750*709+711;
   P(165, 8) = 750*711+108;
   P(165, 9) = 750*108+107;
   P(166, 0) = 750*107+674;
   P(166, 1) = 750*674+676;
   P(166, 2) = 750*676+703;
   P(166, 3) = 750*703+706;
   P(166, 4) = 750*706+704;
   P(166, 5) = 750*704+707;
   P(166, 6) = 750*707+708;
   P(166, 7) = 750*708+711;
   P(166, 8) = 750*711+108;
   P(166, 9) = 750*108+107;
   P(167, 0) = 750*108+111;
   P(167, 1) = 750*111+109;
   P(167, 2) = 750*109+112;
   P(167, 3) = 750*112+110;
   P(167, 4) = 750*110+113;
   P(167, 5) = 750*113+680;
   P(167, 6) = 750*680+682;
   P(167, 7) = 750*682+709;
   P(167, 8) = 750*709+711;
   P(167, 9) = 750*711+108;
   P(168, 0) = 750*108+111;
   P(168, 1) = 750*111+258;
   P(168, 2) = 750*258+261;
   P(168, 3) = 750*261+408;
   P(168, 4) = 750*408+411;
   P(168, 5) = 750*411+558;
   P(168, 6) = 750*558+561;
   P(168, 7) = 750*561+708;
   P(168, 8) = 750*708+711;
   P(168, 9) = 750*711+108;
   P(169, 0) = 750*110+113;
   P(169, 1) = 750*113+680;
   P(169, 2) = 750*680+683;
   P(169, 3) = 750*683+500;
   P(169, 4) = 750*500+503;
   P(169, 5) = 750*503+320;
   P(169, 6) = 750*320+323;
   P(169, 7) = 750*323+290;
   P(169, 8) = 750*290+293;
   P(169, 9) = 750*293+110;
   P(170, 0) = 750*110+113;
   P(170, 1) = 750*113+114;
   P(170, 2) = 750*114+117;
   P(170, 3) = 750*117+115;
   P(170, 4) = 750*115+118;
   P(170, 5) = 750*118+145;
   P(170, 6) = 750*145+147;
   P(170, 7) = 750*147+294;
   P(170, 8) = 750*294+293;
   P(170, 9) = 750*293+110;
   P(171, 0) = 750*110+112;
   P(171, 1) = 750*112+139;
   P(171, 2) = 750*139+142;
   P(171, 3) = 750*142+140;
   P(171, 4) = 750*140+143;
   P(171, 5) = 750*143+144;
   P(171, 6) = 750*144+147;
   P(171, 7) = 750*147+294;
   P(171, 8) = 750*294+293;
   P(171, 9) = 750*293+110;
   P(172, 0) = 750*110+112;
   P(172, 1) = 750*112+139;
   P(172, 2) = 750*139+141;
   P(172, 3) = 750*141+288;
   P(172, 4) = 750*288+291;
   P(172, 5) = 750*291+289;
   P(172, 6) = 750*289+292;
   P(172, 7) = 750*292+290;
   P(172, 8) = 750*290+293;
   P(172, 9) = 750*293+110;
   P(173, 0) = 750*113+680;
   P(173, 1) = 750*680+683;
   P(173, 2) = 750*683+684;
   P(173, 3) = 750*684+687;
   P(173, 4) = 750*687+685;
   P(173, 5) = 750*685+688;
   P(173, 6) = 750*688+715;
   P(173, 7) = 750*715+717;
   P(173, 8) = 750*717+114;
   P(173, 9) = 750*114+113;
   P(174, 0) = 750*113+680;
   P(174, 1) = 750*680+682;
   P(174, 2) = 750*682+709;
   P(174, 3) = 750*709+712;
   P(174, 4) = 750*712+710;
   P(174, 5) = 750*710+713;
   P(174, 6) = 750*713+714;
   P(174, 7) = 750*714+717;
   P(174, 8) = 750*717+114;
   P(174, 9) = 750*114+113;
   P(175, 0) = 750*114+117;
   P(175, 1) = 750*117+115;
   P(175, 2) = 750*115+118;
   P(175, 3) = 750*118+116;
   P(175, 4) = 750*116+119;
   P(175, 5) = 750*119+686;
   P(175, 6) = 750*686+688;
   P(175, 7) = 750*688+715;
   P(175, 8) = 750*715+717;
   P(175, 9) = 750*717+114;
   P(176, 0) = 750*114+117;
   P(176, 1) = 750*117+264;
   P(176, 2) = 750*264+267;
   P(176, 3) = 750*267+414;
   P(176, 4) = 750*414+417;
   P(176, 5) = 750*417+564;
   P(176, 6) = 750*564+567;
   P(176, 7) = 750*567+714;
   P(176, 8) = 750*714+717;
   P(176, 9) = 750*717+114;
   P(177, 0) = 750*116+119;
   P(177, 1) = 750*119+686;
   P(177, 2) = 750*686+689;
   P(177, 3) = 750*689+506;
   P(177, 4) = 750*506+509;
   P(177, 5) = 750*509+326;
   P(177, 6) = 750*326+329;
   P(177, 7) = 750*329+296;
   P(177, 8) = 750*296+299;
   P(177, 9) = 750*299+116;
   P(178, 0) = 750*116+118;
   P(178, 1) = 750*118+145;
   P(178, 2) = 750*145+148;
   P(178, 3) = 750*148+146;
   P(178, 4) = 750*146+149;
   P(178, 5) = 750*149+120;
   P(178, 6) = 750*120+123;
   P(178, 7) = 750*123+270;
   P(178, 8) = 750*270+299;
   P(178, 9) = 750*299+116;
   P(179, 0) = 750*116+118;
   P(179, 1) = 750*118+145;
   P(179, 2) = 750*145+147;
   P(179, 3) = 750*147+294;
   P(179, 4) = 750*294+297;
   P(179, 5) = 750*297+295;
   P(179, 6) = 750*295+298;
   P(179, 7) = 750*298+296;
   P(179, 8) = 750*296+299;
   P(179, 9) = 750*299+116;
   P(180, 0) = 750*120+123;
   P(180, 1) = 750*123+121;
   P(180, 2) = 750*121+124;
   P(180, 3) = 750*124+122;
   P(180, 4) = 750*122+125;
   P(180, 5) = 750*125+692;
   P(180, 6) = 750*692+694;
   P(180, 7) = 750*694+721;
   P(180, 8) = 750*721+723;
   P(180, 9) = 750*723+120;
   P(181, 0) = 750*120+123;
   P(181, 1) = 750*123+270;
   P(181, 2) = 750*270+273;
   P(181, 3) = 750*273+420;
   P(181, 4) = 750*420+423;
   P(181, 5) = 750*423+570;
   P(181, 6) = 750*570+573;
   P(181, 7) = 750*573+720;
   P(181, 8) = 750*720+723;
   P(181, 9) = 750*723+120;
   P(182, 0) = 750*120+723;
   P(182, 1) = 750*723+721;
   P(182, 2) = 750*721+694;
   P(182, 3) = 750*694+691;
   P(182, 4) = 750*691+693;
   P(182, 5) = 750*693+690;
   P(182, 6) = 750*690+719;
   P(182, 7) = 750*719+716;
   P(182, 8) = 750*716+149;
   P(182, 9) = 750*149+120;
   P(183, 0) = 750*120+723;
   P(183, 1) = 750*723+720;
   P(183, 2) = 750*720+749;
   P(183, 3) = 750*749+746;
   P(183, 4) = 750*746+748;
   P(183, 5) = 750*748+745;
   P(183, 6) = 750*745+718;
   P(183, 7) = 750*718+716;
   P(183, 8) = 750*716+149;
   P(183, 9) = 750*149+120;
   P(184, 0) = 750*122+125;
   P(184, 1) = 750*125+692;
   P(184, 2) = 750*692+695;
   P(184, 3) = 750*695+512;
   P(184, 4) = 750*512+515;
   P(184, 5) = 750*515+332;
   P(184, 6) = 750*332+335;
   P(184, 7) = 750*335+152;
   P(184, 8) = 750*152+155;
   P(184, 9) = 750*155+122;
   P(185, 0) = 750*125+692;
   P(185, 1) = 750*692+695;
   P(185, 2) = 750*695+696;
   P(185, 3) = 750*696+699;
   P(185, 4) = 750*699+697;
   P(185, 5) = 750*697+700;
   P(185, 6) = 750*700+727;
   P(185, 7) = 750*727+729;
   P(185, 8) = 750*729+126;
   P(185, 9) = 750*126+125;
   P(186, 0) = 750*125+692;
   P(186, 1) = 750*692+694;
   P(186, 2) = 750*694+721;
   P(186, 3) = 750*721+724;
   P(186, 4) = 750*724+722;
   P(186, 5) = 750*722+725;
   P(186, 6) = 750*725+726;
   P(186, 7) = 750*726+729;
   P(186, 8) = 750*729+126;
   P(186, 9) = 750*126+125;
   P(187, 0) = 750*126+129;
   P(187, 1) = 750*129+127;
   P(187, 2) = 750*127+130;
   P(187, 3) = 750*130+128;
   P(187, 4) = 750*128+131;
   P(187, 5) = 750*131+698;
   P(187, 6) = 750*698+700;
   P(187, 7) = 750*700+727;
   P(187, 8) = 750*727+729;
   P(187, 9) = 750*729+126;
   P(188, 0) = 750*126+129;
   P(188, 1) = 750*129+276;
   P(188, 2) = 750*276+279;
   P(188, 3) = 750*279+426;
   P(188, 4) = 750*426+429;
   P(188, 5) = 750*429+576;
   P(188, 6) = 750*576+579;
   P(188, 7) = 750*579+726;
   P(188, 8) = 750*726+729;
   P(188, 9) = 750*729+126;
   P(189, 0) = 750*128+131;
   P(189, 1) = 750*131+698;
   P(189, 2) = 750*698+701;
   P(189, 3) = 750*701+518;
   P(189, 4) = 750*518+521;
   P(189, 5) = 750*521+338;
   P(189, 6) = 750*338+341;
   P(189, 7) = 750*341+158;
   P(189, 8) = 750*158+161;
   P(189, 9) = 750*161+128;
   P(190, 0) = 750*131+698;
   P(190, 1) = 750*698+701;
   P(190, 2) = 750*701+702;
   P(190, 3) = 750*702+705;
   P(190, 4) = 750*705+703;
   P(190, 5) = 750*703+706;
   P(190, 6) = 750*706+733;
   P(190, 7) = 750*733+735;
   P(190, 8) = 750*735+132;
   P(190, 9) = 750*132+131;
   P(191, 0) = 750*131+698;
   P(191, 1) = 750*698+700;
   P(191, 2) = 750*700+727;
   P(191, 3) = 750*727+730;
   P(191, 4) = 750*730+728;
   P(191, 5) = 750*728+731;
   P(191, 6) = 750*731+732;
   P(191, 7) = 750*732+735;
   P(191, 8) = 750*735+132;
   P(191, 9) = 750*132+131;
   P(192, 0) = 750*132+135;
   P(192, 1) = 750*135+133;
   P(192, 2) = 750*133+136;
   P(192, 3) = 750*136+134;
   P(192, 4) = 750*134+137;
   P(192, 5) = 750*137+704;
   P(192, 6) = 750*704+706;
   P(192, 7) = 750*706+733;
   P(192, 8) = 750*733+735;
   P(192, 9) = 750*735+132;
   P(193, 0) = 750*132+135;
   P(193, 1) = 750*135+282;
   P(193, 2) = 750*282+285;
   P(193, 3) = 750*285+432;
   P(193, 4) = 750*432+435;
   P(193, 5) = 750*435+582;
   P(193, 6) = 750*582+585;
   P(193, 7) = 750*585+732;
   P(193, 8) = 750*732+735;
   P(193, 9) = 750*735+132;
   P(194, 0) = 750*134+137;
   P(194, 1) = 750*137+704;
   P(194, 2) = 750*704+707;
   P(194, 3) = 750*707+524;
   P(194, 4) = 750*524+527;
   P(194, 5) = 750*527+344;
   P(194, 6) = 750*344+347;
   P(194, 7) = 750*347+164;
   P(194, 8) = 750*164+167;
   P(194, 9) = 750*167+134;
   P(195, 0) = 750*137+704;
   P(195, 1) = 750*704+707;
   P(195, 2) = 750*707+708;
   P(195, 3) = 750*708+711;
   P(195, 4) = 750*711+709;
   P(195, 5) = 750*709+712;
   P(195, 6) = 750*712+739;
   P(195, 7) = 750*739+741;
   P(195, 8) = 750*741+138;
   P(195, 9) = 750*138+137;
   P(196, 0) = 750*137+704;
   P(196, 1) = 750*704+706;
   P(196, 2) = 750*706+733;
   P(196, 3) = 750*733+736;
   P(196, 4) = 750*736+734;
   P(196, 5) = 750*734+737;
   P(196, 6) = 750*737+738;
   P(196, 7) = 750*738+741;
   P(196, 8) = 750*741+138;
   P(196, 9) = 750*138+137;
   P(197, 0) = 750*138+141;
   P(197, 1) = 750*141+139;
   P(197, 2) = 750*139+142;
   P(197, 3) = 750*142+140;
   P(197, 4) = 750*140+143;
   P(197, 5) = 750*143+710;
   P(197, 6) = 750*710+712;
   P(197, 7) = 750*712+739;
   P(197, 8) = 750*739+741;
   P(197, 9) = 750*741+138;
   P(198, 0) = 750*138+141;
   P(198, 1) = 750*141+288;
   P(198, 2) = 750*288+291;
   P(198, 3) = 750*291+438;
   P(198, 4) = 750*438+441;
   P(198, 5) = 750*441+588;
   P(198, 6) = 750*588+591;
   P(198, 7) = 750*591+738;
   P(198, 8) = 750*738+741;
   P(198, 9) = 750*741+138;
   P(199, 0) = 750*140+143;
   P(199, 1) = 750*143+710;
   P(199, 2) = 750*710+713;
   P(199, 3) = 750*713+530;
   P(199, 4) = 750*530+533;
   P(199, 5) = 750*533+350;
   P(199, 6) = 750*350+353;
   P(199, 7) = 750*353+170;
   P(199, 8) = 750*170+173;
   P(199, 9) = 750*173+140;
   P(200, 0) = 750*143+710;
   P(200, 1) = 750*710+713;
   P(200, 2) = 750*713+714;
   P(200, 3) = 750*714+717;
   P(200, 4) = 750*717+715;
   P(200, 5) = 750*715+718;
   P(200, 6) = 750*718+745;
   P(200, 7) = 750*745+747;
   P(200, 8) = 750*747+144;
   P(200, 9) = 750*144+143;
   P(201, 0) = 750*143+710;
   P(201, 1) = 750*710+712;
   P(201, 2) = 750*712+739;
   P(201, 3) = 750*739+742;
   P(201, 4) = 750*742+740;
   P(201, 5) = 750*740+743;
   P(201, 6) = 750*743+744;
   P(201, 7) = 750*744+747;
   P(201, 8) = 750*747+144;
   P(201, 9) = 750*144+143;
   P(202, 0) = 750*144+147;
   P(202, 1) = 750*147+145;
   P(202, 2) = 750*145+148;
   P(202, 3) = 750*148+146;
   P(202, 4) = 750*146+149;
   P(202, 5) = 750*149+716;
   P(202, 6) = 750*716+718;
   P(202, 7) = 750*718+745;
   P(202, 8) = 750*745+747;
   P(202, 9) = 750*747+144;
   P(203, 0) = 750*144+147;
   P(203, 1) = 750*147+294;
   P(203, 2) = 750*294+297;
   P(203, 3) = 750*297+444;
   P(203, 4) = 750*444+447;
   P(203, 5) = 750*447+594;
   P(203, 6) = 750*594+597;
   P(203, 7) = 750*597+744;
   P(203, 8) = 750*744+747;
   P(203, 9) = 750*747+144;
   P(204, 0) = 750*146+149;
   P(204, 1) = 750*149+716;
   P(204, 2) = 750*716+719;
   P(204, 3) = 750*719+536;
   P(204, 4) = 750*536+539;
   P(204, 5) = 750*539+356;
   P(204, 6) = 750*356+359;
   P(204, 7) = 750*359+176;
   P(204, 8) = 750*176+179;
   P(204, 9) = 750*179+146;
   P(205, 0) = 750*150+153;
   P(205, 1) = 750*153+151;
   P(205, 2) = 750*151+154;
   P(205, 3) = 750*154+181;
   P(205, 4) = 750*181+183;
   P(205, 5) = 750*183+330;
   P(205, 6) = 750*330+359;
   P(205, 7) = 750*359+176;
   P(205, 8) = 750*176+179;
   P(205, 9) = 750*179+150;
   P(206, 0) = 750*150+153;
   P(206, 1) = 750*153+300;
   P(206, 2) = 750*300+329;
   P(206, 3) = 750*329+296;
   P(206, 4) = 750*296+298;
   P(206, 5) = 750*298+175;
   P(206, 6) = 750*175+178;
   P(206, 7) = 750*178+176;
   P(206, 8) = 750*176+179;
   P(206, 9) = 750*179+150;
   P(207, 0) = 750*151+154;
   P(207, 1) = 750*154+152;
   P(207, 2) = 750*152+155;
   P(207, 3) = 750*155+156;
   P(207, 4) = 750*156+159;
   P(207, 5) = 750*159+306;
   P(207, 6) = 750*306+305;
   P(207, 7) = 750*305+272;
   P(207, 8) = 750*272+274;
   P(207, 9) = 750*274+151;
   P(208, 0) = 750*151+154;
   P(208, 1) = 750*154+181;
   P(208, 2) = 750*181+184;
   P(208, 3) = 750*184+211;
   P(208, 4) = 750*211+214;
   P(208, 5) = 750*214+241;
   P(208, 6) = 750*241+244;
   P(208, 7) = 750*244+271;
   P(208, 8) = 750*271+274;
   P(208, 9) = 750*274+151;
   P(209, 0) = 750*151+153;
   P(209, 1) = 750*153+300;
   P(209, 2) = 750*300+303;
   P(209, 3) = 750*303+301;
   P(209, 4) = 750*301+304;
   P(209, 5) = 750*304+302;
   P(209, 6) = 750*302+305;
   P(209, 7) = 750*305+272;
   P(209, 8) = 750*272+274;
   P(209, 9) = 750*274+151;
   P(210, 0) = 750*151+153;
   P(210, 1) = 750*153+300;
   P(210, 2) = 750*300+329;
   P(210, 3) = 750*329+296;
   P(210, 4) = 750*296+299;
   P(210, 5) = 750*299+270;
   P(210, 6) = 750*270+273;
   P(210, 7) = 750*273+271;
   P(210, 8) = 750*271+274;
   P(210, 9) = 750*274+151;
   P(211, 0) = 750*152+155;
   P(211, 1) = 750*155+156;
   P(211, 2) = 750*156+159;
   P(211, 3) = 750*159+157;
   P(211, 4) = 750*157+160;
   P(211, 5) = 750*160+187;
   P(211, 6) = 750*187+189;
   P(211, 7) = 750*189+336;
   P(211, 8) = 750*336+335;
   P(211, 9) = 750*335+152;
   P(212, 0) = 750*152+154;
   P(212, 1) = 750*154+181;
   P(212, 2) = 750*181+184;
   P(212, 3) = 750*184+182;
   P(212, 4) = 750*182+185;
   P(212, 5) = 750*185+186;
   P(212, 6) = 750*186+189;
   P(212, 7) = 750*189+336;
   P(212, 8) = 750*336+335;
   P(212, 9) = 750*335+152;
   P(213, 0) = 750*152+154;
   P(213, 1) = 750*154+181;
   P(213, 2) = 750*181+183;
   P(213, 3) = 750*183+330;
   P(213, 4) = 750*330+333;
   P(213, 5) = 750*333+331;
   P(213, 6) = 750*331+334;
   P(213, 7) = 750*334+332;
   P(213, 8) = 750*332+335;
   P(213, 9) = 750*335+152;
   P(214, 0) = 750*157+160;
   P(214, 1) = 750*160+158;
   P(214, 2) = 750*158+161;
   P(214, 3) = 750*161+162;
   P(214, 4) = 750*162+165;
   P(214, 5) = 750*165+312;
   P(214, 6) = 750*312+311;
   P(214, 7) = 750*311+278;
   P(214, 8) = 750*278+280;
   P(214, 9) = 750*280+157;
   P(215, 0) = 750*157+160;
   P(215, 1) = 750*160+187;
   P(215, 2) = 750*187+190;
   P(215, 3) = 750*190+217;
   P(215, 4) = 750*217+220;
   P(215, 5) = 750*220+247;
   P(215, 6) = 750*247+250;
   P(215, 7) = 750*250+277;
   P(215, 8) = 750*277+280;
   P(215, 9) = 750*280+157;
   P(216, 0) = 750*157+159;
   P(216, 1) = 750*159+306;
   P(216, 2) = 750*306+309;
   P(216, 3) = 750*309+307;
   P(216, 4) = 750*307+310;
   P(216, 5) = 750*310+308;
   P(216, 6) = 750*308+311;
   P(216, 7) = 750*311+278;
   P(216, 8) = 750*278+280;
   P(216, 9) = 750*280+157;
   P(217, 0) = 750*157+159;
   P(217, 1) = 750*159+306;
   P(217, 2) = 750*306+305;
   P(217, 3) = 750*305+272;
   P(217, 4) = 750*272+275;
   P(217, 5) = 750*275+276;
   P(217, 6) = 750*276+279;
   P(217, 7) = 750*279+277;
   P(217, 8) = 750*277+280;
   P(217, 9) = 750*280+157;
   P(218, 0) = 750*158+161;
   P(218, 1) = 750*161+162;
   P(218, 2) = 750*162+165;
   P(218, 3) = 750*165+163;
   P(218, 4) = 750*163+166;
   P(218, 5) = 750*166+193;
   P(218, 6) = 750*193+195;
   P(218, 7) = 750*195+342;
   P(218, 8) = 750*342+341;
   P(218, 9) = 750*341+158;
   P(219, 0) = 750*158+160;
   P(219, 1) = 750*160+187;
   P(219, 2) = 750*187+190;
   P(219, 3) = 750*190+188;
   P(219, 4) = 750*188+191;
   P(219, 5) = 750*191+192;
   P(219, 6) = 750*192+195;
   P(219, 7) = 750*195+342;
   P(219, 8) = 750*342+341;
   P(219, 9) = 750*341+158;
   P(220, 0) = 750*158+160;
   P(220, 1) = 750*160+187;
   P(220, 2) = 750*187+189;
   P(220, 3) = 750*189+336;
   P(220, 4) = 750*336+339;
   P(220, 5) = 750*339+337;
   P(220, 6) = 750*337+340;
   P(220, 7) = 750*340+338;
   P(220, 8) = 750*338+341;
   P(220, 9) = 750*341+158;
   P(221, 0) = 750*163+166;
   P(221, 1) = 750*166+164;
   P(221, 2) = 750*164+167;
   P(221, 3) = 750*167+168;
   P(221, 4) = 750*168+171;
   P(221, 5) = 750*171+318;
   P(221, 6) = 750*318+317;
   P(221, 7) = 750*317+284;
   P(221, 8) = 750*284+286;
   P(221, 9) = 750*286+163;
   P(222, 0) = 750*163+166;
   P(222, 1) = 750*166+193;
   P(222, 2) = 750*193+196;
   P(222, 3) = 750*196+223;
   P(222, 4) = 750*223+226;
   P(222, 5) = 750*226+253;
   P(222, 6) = 750*253+256;
   P(222, 7) = 750*256+283;
   P(222, 8) = 750*283+286;
   P(222, 9) = 750*286+163;
   P(223, 0) = 750*163+165;
   P(223, 1) = 750*165+312;
   P(223, 2) = 750*312+315;
   P(223, 3) = 750*315+313;
   P(223, 4) = 750*313+316;
   P(223, 5) = 750*316+314;
   P(223, 6) = 750*314+317;
   P(223, 7) = 750*317+284;
   P(223, 8) = 750*284+286;
   P(223, 9) = 750*286+163;
   P(224, 0) = 750*163+165;
   P(224, 1) = 750*165+312;
   P(224, 2) = 750*312+311;
   P(224, 3) = 750*311+278;
   P(224, 4) = 750*278+281;
   P(224, 5) = 750*281+282;
   P(224, 6) = 750*282+285;
   P(224, 7) = 750*285+283;
   P(224, 8) = 750*283+286;
   P(224, 9) = 750*286+163;
   P(225, 0) = 750*164+167;
   P(225, 1) = 750*167+168;
   P(225, 2) = 750*168+171;
   P(225, 3) = 750*171+169;
   P(225, 4) = 750*169+172;
   P(225, 5) = 750*172+199;
   P(225, 6) = 750*199+201;
   P(225, 7) = 750*201+348;
   P(225, 8) = 750*348+347;
   P(225, 9) = 750*347+164;
   P(226, 0) = 750*164+166;
   P(226, 1) = 750*166+193;
   P(226, 2) = 750*193+196;
   P(226, 3) = 750*196+194;
   P(226, 4) = 750*194+197;
   P(226, 5) = 750*197+198;
   P(226, 6) = 750*198+201;
   P(226, 7) = 750*201+348;
   P(226, 8) = 750*348+347;
   P(226, 9) = 750*347+164;
   P(227, 0) = 750*164+166;
   P(227, 1) = 750*166+193;
   P(227, 2) = 750*193+195;
   P(227, 3) = 750*195+342;
   P(227, 4) = 750*342+345;
   P(227, 5) = 750*345+343;
   P(227, 6) = 750*343+346;
   P(227, 7) = 750*346+344;
   P(227, 8) = 750*344+347;
   P(227, 9) = 750*347+164;
   P(228, 0) = 750*169+172;
   P(228, 1) = 750*172+170;
   P(228, 2) = 750*170+173;
   P(228, 3) = 750*173+174;
   P(228, 4) = 750*174+177;
   P(228, 5) = 750*177+324;
   P(228, 6) = 750*324+323;
   P(228, 7) = 750*323+290;
   P(228, 8) = 750*290+292;
   P(228, 9) = 750*292+169;
   P(229, 0) = 750*169+172;
   P(229, 1) = 750*172+199;
   P(229, 2) = 750*199+202;
   P(229, 3) = 750*202+229;
   P(229, 4) = 750*229+232;
   P(229, 5) = 750*232+259;
   P(229, 6) = 750*259+262;
   P(229, 7) = 750*262+289;
   P(229, 8) = 750*289+292;
   P(229, 9) = 750*292+169;
   P(230, 0) = 750*169+171;
   P(230, 1) = 750*171+318;
   P(230, 2) = 750*318+321;
   P(230, 3) = 750*321+319;
   P(230, 4) = 750*319+322;
   P(230, 5) = 750*322+320;
   P(230, 6) = 750*320+323;
   P(230, 7) = 750*323+290;
   P(230, 8) = 750*290+292;
   P(230, 9) = 750*292+169;
   P(231, 0) = 750*169+171;
   P(231, 1) = 750*171+318;
   P(231, 2) = 750*318+317;
   P(231, 3) = 750*317+284;
   P(231, 4) = 750*284+287;
   P(231, 5) = 750*287+288;
   P(231, 6) = 750*288+291;
   P(231, 7) = 750*291+289;
   P(231, 8) = 750*289+292;
   P(231, 9) = 750*292+169;
   P(232, 0) = 750*170+173;
   P(232, 1) = 750*173+174;
   P(232, 2) = 750*174+177;
   P(232, 3) = 750*177+175;
   P(232, 4) = 750*175+178;
   P(232, 5) = 750*178+205;
   P(232, 6) = 750*205+207;
   P(232, 7) = 750*207+354;
   P(232, 8) = 750*354+353;
   P(232, 9) = 750*353+170;
   P(233, 0) = 750*170+172;
   P(233, 1) = 750*172+199;
   P(233, 2) = 750*199+202;
   P(233, 3) = 750*202+200;
   P(233, 4) = 750*200+203;
   P(233, 5) = 750*203+204;
   P(233, 6) = 750*204+207;
   P(233, 7) = 750*207+354;
   P(233, 8) = 750*354+353;
   P(233, 9) = 750*353+170;
   P(234, 0) = 750*170+172;
   P(234, 1) = 750*172+199;
   P(234, 2) = 750*199+201;
   P(234, 3) = 750*201+348;
   P(234, 4) = 750*348+351;
   P(234, 5) = 750*351+349;
   P(234, 6) = 750*349+352;
   P(234, 7) = 750*352+350;
   P(234, 8) = 750*350+353;
   P(234, 9) = 750*353+170;
   P(235, 0) = 750*175+178;
   P(235, 1) = 750*178+205;
   P(235, 2) = 750*205+208;
   P(235, 3) = 750*208+235;
   P(235, 4) = 750*235+238;
   P(235, 5) = 750*238+265;
   P(235, 6) = 750*265+268;
   P(235, 7) = 750*268+295;
   P(235, 8) = 750*295+298;
   P(235, 9) = 750*298+175;
   P(236, 0) = 750*175+177;
   P(236, 1) = 750*177+324;
   P(236, 2) = 750*324+327;
   P(236, 3) = 750*327+325;
   P(236, 4) = 750*325+328;
   P(236, 5) = 750*328+326;
   P(236, 6) = 750*326+329;
   P(236, 7) = 750*329+296;
   P(236, 8) = 750*296+298;
   P(236, 9) = 750*298+175;
   P(237, 0) = 750*175+177;
   P(237, 1) = 750*177+324;
   P(237, 2) = 750*324+323;
   P(237, 3) = 750*323+290;
   P(237, 4) = 750*290+293;
   P(237, 5) = 750*293+294;
   P(237, 6) = 750*294+297;
   P(237, 7) = 750*297+295;
   P(237, 8) = 750*295+298;
   P(237, 9) = 750*298+175;
   P(238, 0) = 750*176+178;
   P(238, 1) = 750*178+205;
   P(238, 2) = 750*205+208;
   P(238, 3) = 750*208+206;
   P(238, 4) = 750*206+209;
   P(238, 5) = 750*209+180;
   P(238, 6) = 750*180+183;
   P(238, 7) = 750*183+330;
   P(238, 8) = 750*330+359;
   P(238, 9) = 750*359+176;
   P(239, 0) = 750*176+178;
   P(239, 1) = 750*178+205;
   P(239, 2) = 750*205+207;
   P(239, 3) = 750*207+354;
   P(239, 4) = 750*354+357;
   P(239, 5) = 750*357+355;
   P(239, 6) = 750*355+358;
   P(239, 7) = 750*358+356;
   P(239, 8) = 750*356+359;
   P(239, 9) = 750*359+176;
   P(240, 0) = 750*180+183;
   P(240, 1) = 750*183+181;
   P(240, 2) = 750*181+184;
   P(240, 3) = 750*184+211;
   P(240, 4) = 750*211+213;
   P(240, 5) = 750*213+360;
   P(240, 6) = 750*360+389;
   P(240, 7) = 750*389+206;
   P(240, 8) = 750*206+209;
   P(240, 9) = 750*209+180;
   P(241, 0) = 750*182+185;
   P(241, 1) = 750*185+186;
   P(241, 2) = 750*186+189;
   P(241, 3) = 750*189+187;
   P(241, 4) = 750*187+190;
   P(241, 5) = 750*190+217;
   P(241, 6) = 750*217+219;
   P(241, 7) = 750*219+366;
   P(241, 8) = 750*366+365;
   P(241, 9) = 750*365+182;
   P(242, 0) = 750*182+184;
   P(242, 1) = 750*184+211;
   P(242, 2) = 750*211+214;
   P(242, 3) = 750*214+212;
   P(242, 4) = 750*212+215;
   P(242, 5) = 750*215+216;
   P(242, 6) = 750*216+219;
   P(242, 7) = 750*219+366;
   P(242, 8) = 750*366+365;
   P(242, 9) = 750*365+182;
   P(243, 0) = 750*182+184;
   P(243, 1) = 750*184+211;
   P(243, 2) = 750*211+213;
   P(243, 3) = 750*213+360;
   P(243, 4) = 750*360+363;
   P(243, 5) = 750*363+361;
   P(243, 6) = 750*361+364;
   P(243, 7) = 750*364+362;
   P(243, 8) = 750*362+365;
   P(243, 9) = 750*365+182;
   P(244, 0) = 750*188+191;
   P(244, 1) = 750*191+192;
   P(244, 2) = 750*192+195;
   P(244, 3) = 750*195+193;
   P(244, 4) = 750*193+196;
   P(244, 5) = 750*196+223;
   P(244, 6) = 750*223+225;
   P(244, 7) = 750*225+372;
   P(244, 8) = 750*372+371;
   P(244, 9) = 750*371+188;
   P(245, 0) = 750*188+190;
   P(245, 1) = 750*190+217;
   P(245, 2) = 750*217+220;
   P(245, 3) = 750*220+218;
   P(245, 4) = 750*218+221;
   P(245, 5) = 750*221+222;
   P(245, 6) = 750*222+225;
   P(245, 7) = 750*225+372;
   P(245, 8) = 750*372+371;
   P(245, 9) = 750*371+188;
   P(246, 0) = 750*188+190;
   P(246, 1) = 750*190+217;
   P(246, 2) = 750*217+219;
   P(246, 3) = 750*219+366;
   P(246, 4) = 750*366+369;
   P(246, 5) = 750*369+367;
   P(246, 6) = 750*367+370;
   P(246, 7) = 750*370+368;
   P(246, 8) = 750*368+371;
   P(246, 9) = 750*371+188;
   P(247, 0) = 750*194+197;
   P(247, 1) = 750*197+198;
   P(247, 2) = 750*198+201;
   P(247, 3) = 750*201+199;
   P(247, 4) = 750*199+202;
   P(247, 5) = 750*202+229;
   P(247, 6) = 750*229+231;
   P(247, 7) = 750*231+378;
   P(247, 8) = 750*378+377;
   P(247, 9) = 750*377+194;
   P(248, 0) = 750*194+196;
   P(248, 1) = 750*196+223;
   P(248, 2) = 750*223+226;
   P(248, 3) = 750*226+224;
   P(248, 4) = 750*224+227;
   P(248, 5) = 750*227+228;
   P(248, 6) = 750*228+231;
   P(248, 7) = 750*231+378;
   P(248, 8) = 750*378+377;
   P(248, 9) = 750*377+194;
   P(249, 0) = 750*194+196;
   P(249, 1) = 750*196+223;
   P(249, 2) = 750*223+225;
   P(249, 3) = 750*225+372;
   P(249, 4) = 750*372+375;
   P(249, 5) = 750*375+373;
   P(249, 6) = 750*373+376;
   P(249, 7) = 750*376+374;
   P(249, 8) = 750*374+377;
   P(249, 9) = 750*377+194;
   P(250, 0) = 750*200+203;
   P(250, 1) = 750*203+204;
   P(250, 2) = 750*204+207;
   P(250, 3) = 750*207+205;
   P(250, 4) = 750*205+208;
   P(250, 5) = 750*208+235;
   P(250, 6) = 750*235+237;
   P(250, 7) = 750*237+384;
   P(250, 8) = 750*384+383;
   P(250, 9) = 750*383+200;
   P(251, 0) = 750*200+202;
   P(251, 1) = 750*202+229;
   P(251, 2) = 750*229+232;
   P(251, 3) = 750*232+230;
   P(251, 4) = 750*230+233;
   P(251, 5) = 750*233+234;
   P(251, 6) = 750*234+237;
   P(251, 7) = 750*237+384;
   P(251, 8) = 750*384+383;
   P(251, 9) = 750*383+200;
   P(252, 0) = 750*200+202;
   P(252, 1) = 750*202+229;
   P(252, 2) = 750*229+231;
   P(252, 3) = 750*231+378;
   P(252, 4) = 750*378+381;
   P(252, 5) = 750*381+379;
   P(252, 6) = 750*379+382;
   P(252, 7) = 750*382+380;
   P(252, 8) = 750*380+383;
   P(252, 9) = 750*383+200;
   P(253, 0) = 750*206+208;
   P(253, 1) = 750*208+235;
   P(253, 2) = 750*235+238;
   P(253, 3) = 750*238+236;
   P(253, 4) = 750*236+239;
   P(253, 5) = 750*239+210;
   P(253, 6) = 750*210+213;
   P(253, 7) = 750*213+360;
   P(253, 8) = 750*360+389;
   P(253, 9) = 750*389+206;
   P(254, 0) = 750*206+208;
   P(254, 1) = 750*208+235;
   P(254, 2) = 750*235+237;
   P(254, 3) = 750*237+384;
   P(254, 4) = 750*384+387;
   P(254, 5) = 750*387+385;
   P(254, 6) = 750*385+388;
   P(254, 7) = 750*388+386;
   P(254, 8) = 750*386+389;
   P(254, 9) = 750*389+206;
   P(255, 0) = 750*210+213;
   P(255, 1) = 750*213+211;
   P(255, 2) = 750*211+214;
   P(255, 3) = 750*214+241;
   P(255, 4) = 750*241+243;
   P(255, 5) = 750*243+390;
   P(255, 6) = 750*390+419;
   P(255, 7) = 750*419+236;
   P(255, 8) = 750*236+239;
   P(255, 9) = 750*239+210;
   P(256, 0) = 750*212+215;
   P(256, 1) = 750*215+216;
   P(256, 2) = 750*216+219;
   P(256, 3) = 750*219+217;
   P(256, 4) = 750*217+220;
   P(256, 5) = 750*220+247;
   P(256, 6) = 750*247+249;
   P(256, 7) = 750*249+396;
   P(256, 8) = 750*396+395;
   P(256, 9) = 750*395+212;
   P(257, 0) = 750*212+214;
   P(257, 1) = 750*214+241;
   P(257, 2) = 750*241+244;
   P(257, 3) = 750*244+242;
   P(257, 4) = 750*242+245;
   P(257, 5) = 750*245+246;
   P(257, 6) = 750*246+249;
   P(257, 7) = 750*249+396;
   P(257, 8) = 750*396+395;
   P(257, 9) = 750*395+212;
   P(258, 0) = 750*212+214;
   P(258, 1) = 750*214+241;
   P(258, 2) = 750*241+243;
   P(258, 3) = 750*243+390;
   P(258, 4) = 750*390+393;
   P(258, 5) = 750*393+391;
   P(258, 6) = 750*391+394;
   P(258, 7) = 750*394+392;
   P(258, 8) = 750*392+395;
   P(258, 9) = 750*395+212;
   P(259, 0) = 750*218+221;
   P(259, 1) = 750*221+222;
   P(259, 2) = 750*222+225;
   P(259, 3) = 750*225+223;
   P(259, 4) = 750*223+226;
   P(259, 5) = 750*226+253;
   P(259, 6) = 750*253+255;
   P(259, 7) = 750*255+402;
   P(259, 8) = 750*402+401;
   P(259, 9) = 750*401+218;
   P(260, 0) = 750*218+220;
   P(260, 1) = 750*220+247;
   P(260, 2) = 750*247+250;
   P(260, 3) = 750*250+248;
   P(260, 4) = 750*248+251;
   P(260, 5) = 750*251+252;
   P(260, 6) = 750*252+255;
   P(260, 7) = 750*255+402;
   P(260, 8) = 750*402+401;
   P(260, 9) = 750*401+218;
   P(261, 0) = 750*218+220;
   P(261, 1) = 750*220+247;
   P(261, 2) = 750*247+249;
   P(261, 3) = 750*249+396;
   P(261, 4) = 750*396+399;
   P(261, 5) = 750*399+397;
   P(261, 6) = 750*397+400;
   P(261, 7) = 750*400+398;
   P(261, 8) = 750*398+401;
   P(261, 9) = 750*401+218;
   P(262, 0) = 750*224+227;
   P(262, 1) = 750*227+228;
   P(262, 2) = 750*228+231;
   P(262, 3) = 750*231+229;
   P(262, 4) = 750*229+232;
   P(262, 5) = 750*232+259;
   P(262, 6) = 750*259+261;
   P(262, 7) = 750*261+408;
   P(262, 8) = 750*408+407;
   P(262, 9) = 750*407+224;
   P(263, 0) = 750*224+226;
   P(263, 1) = 750*226+253;
   P(263, 2) = 750*253+256;
   P(263, 3) = 750*256+254;
   P(263, 4) = 750*254+257;
   P(263, 5) = 750*257+258;
   P(263, 6) = 750*258+261;
   P(263, 7) = 750*261+408;
   P(263, 8) = 750*408+407;
   P(263, 9) = 750*407+224;
   P(264, 0) = 750*224+226;
   P(264, 1) = 750*226+253;
   P(264, 2) = 750*253+255;
   P(264, 3) = 750*255+402;
   P(264, 4) = 750*402+405;
   P(264, 5) = 750*405+403;
   P(264, 6) = 750*403+406;
   P(264, 7) = 750*406+404;
   P(264, 8) = 750*404+407;
   P(264, 9) = 750*407+224;
   P(265, 0) = 750*230+233;
   P(265, 1) = 750*233+234;
   P(265, 2) = 750*234+237;
   P(265, 3) = 750*237+235;
   P(265, 4) = 750*235+238;
   P(265, 5) = 750*238+265;
   P(265, 6) = 750*265+267;
   P(265, 7) = 750*267+414;
   P(265, 8) = 750*414+413;
   P(265, 9) = 750*413+230;
   P(266, 0) = 750*230+232;
   P(266, 1) = 750*232+259;
   P(266, 2) = 750*259+262;
   P(266, 3) = 750*262+260;
   P(266, 4) = 750*260+263;
   P(266, 5) = 750*263+264;
   P(266, 6) = 750*264+267;
   P(266, 7) = 750*267+414;
   P(266, 8) = 750*414+413;
   P(266, 9) = 750*413+230;
   P(267, 0) = 750*230+232;
   P(267, 1) = 750*232+259;
   P(267, 2) = 750*259+261;
   P(267, 3) = 750*261+408;
   P(267, 4) = 750*408+411;
   P(267, 5) = 750*411+409;
   P(267, 6) = 750*409+412;
   P(267, 7) = 750*412+410;
   P(267, 8) = 750*410+413;
   P(267, 9) = 750*413+230;
   P(268, 0) = 750*236+238;
   P(268, 1) = 750*238+265;
   P(268, 2) = 750*265+268;
   P(268, 3) = 750*268+266;
   P(268, 4) = 750*266+269;
   P(268, 5) = 750*269+240;
   P(268, 6) = 750*240+243;
   P(268, 7) = 750*243+390;
   P(268, 8) = 750*390+419;
   P(268, 9) = 750*419+236;
   P(269, 0) = 750*236+238;
   P(269, 1) = 750*238+265;
   P(269, 2) = 750*265+267;
   P(269, 3) = 750*267+414;
   P(269, 4) = 750*414+417;
   P(269, 5) = 750*417+415;
   P(269, 6) = 750*415+418;
   P(269, 7) = 750*418+416;
   P(269, 8) = 750*416+419;
   P(269, 9) = 750*419+236;
   P(270, 0) = 750*240+243;
   P(270, 1) = 750*243+241;
   P(270, 2) = 750*241+244;
   P(270, 3) = 750*244+271;
   P(270, 4) = 750*271+273;
   P(270, 5) = 750*273+420;
   P(270, 6) = 750*420+449;
   P(270, 7) = 750*449+266;
   P(270, 8) = 750*266+269;
   P(270, 9) = 750*269+240;
   P(271, 0) = 750*242+245;
   P(271, 1) = 750*245+246;
   P(271, 2) = 750*246+249;
   P(271, 3) = 750*249+247;
   P(271, 4) = 750*247+250;
   P(271, 5) = 750*250+277;
   P(271, 6) = 750*277+279;
   P(271, 7) = 750*279+426;
   P(271, 8) = 750*426+425;
   P(271, 9) = 750*425+242;
   P(272, 0) = 750*242+244;
   P(272, 1) = 750*244+271;
   P(272, 2) = 750*271+274;
   P(272, 3) = 750*274+272;
   P(272, 4) = 750*272+275;
   P(272, 5) = 750*275+276;
   P(272, 6) = 750*276+279;
   P(272, 7) = 750*279+426;
   P(272, 8) = 750*426+425;
   P(272, 9) = 750*425+242;
   P(273, 0) = 750*242+244;
   P(273, 1) = 750*244+271;
   P(273, 2) = 750*271+273;
   P(273, 3) = 750*273+420;
   P(273, 4) = 750*420+423;
   P(273, 5) = 750*423+421;
   P(273, 6) = 750*421+424;
   P(273, 7) = 750*424+422;
   P(273, 8) = 750*422+425;
   P(273, 9) = 750*425+242;
   P(274, 0) = 750*248+251;
   P(274, 1) = 750*251+252;
   P(274, 2) = 750*252+255;
   P(274, 3) = 750*255+253;
   P(274, 4) = 750*253+256;
   P(274, 5) = 750*256+283;
   P(274, 6) = 750*283+285;
   P(274, 7) = 750*285+432;
   P(274, 8) = 750*432+431;
   P(274, 9) = 750*431+248;
   P(275, 0) = 750*248+250;
   P(275, 1) = 750*250+277;
   P(275, 2) = 750*277+280;
   P(275, 3) = 750*280+278;
   P(275, 4) = 750*278+281;
   P(275, 5) = 750*281+282;
   P(275, 6) = 750*282+285;
   P(275, 7) = 750*285+432;
   P(275, 8) = 750*432+431;
   P(275, 9) = 750*431+248;
   P(276, 0) = 750*248+250;
   P(276, 1) = 750*250+277;
   P(276, 2) = 750*277+279;
   P(276, 3) = 750*279+426;
   P(276, 4) = 750*426+429;
   P(276, 5) = 750*429+427;
   P(276, 6) = 750*427+430;
   P(276, 7) = 750*430+428;
   P(276, 8) = 750*428+431;
   P(276, 9) = 750*431+248;
   P(277, 0) = 750*254+257;
   P(277, 1) = 750*257+258;
   P(277, 2) = 750*258+261;
   P(277, 3) = 750*261+259;
   P(277, 4) = 750*259+262;
   P(277, 5) = 750*262+289;
   P(277, 6) = 750*289+291;
   P(277, 7) = 750*291+438;
   P(277, 8) = 750*438+437;
   P(277, 9) = 750*437+254;
   P(278, 0) = 750*254+256;
   P(278, 1) = 750*256+283;
   P(278, 2) = 750*283+286;
   P(278, 3) = 750*286+284;
   P(278, 4) = 750*284+287;
   P(278, 5) = 750*287+288;
   P(278, 6) = 750*288+291;
   P(278, 7) = 750*291+438;
   P(278, 8) = 750*438+437;
   P(278, 9) = 750*437+254;
   P(279, 0) = 750*254+256;
   P(279, 1) = 750*256+283;
   P(279, 2) = 750*283+285;
   P(279, 3) = 750*285+432;
   P(279, 4) = 750*432+435;
   P(279, 5) = 750*435+433;
   P(279, 6) = 750*433+436;
   P(279, 7) = 750*436+434;
   P(279, 8) = 750*434+437;
   P(279, 9) = 750*437+254;
   P(280, 0) = 750*260+263;
   P(280, 1) = 750*263+264;
   P(280, 2) = 750*264+267;
   P(280, 3) = 750*267+265;
   P(280, 4) = 750*265+268;
   P(280, 5) = 750*268+295;
   P(280, 6) = 750*295+297;
   P(280, 7) = 750*297+444;
   P(280, 8) = 750*444+443;
   P(280, 9) = 750*443+260;
   P(281, 0) = 750*260+262;
   P(281, 1) = 750*262+289;
   P(281, 2) = 750*289+292;
   P(281, 3) = 750*292+290;
   P(281, 4) = 750*290+293;
   P(281, 5) = 750*293+294;
   P(281, 6) = 750*294+297;
   P(281, 7) = 750*297+444;
   P(281, 8) = 750*444+443;
   P(281, 9) = 750*443+260;
   P(282, 0) = 750*260+262;
   P(282, 1) = 750*262+289;
   P(282, 2) = 750*289+291;
   P(282, 3) = 750*291+438;
   P(282, 4) = 750*438+441;
   P(282, 5) = 750*441+439;
   P(282, 6) = 750*439+442;
   P(282, 7) = 750*442+440;
   P(282, 8) = 750*440+443;
   P(282, 9) = 750*443+260;
   P(283, 0) = 750*266+268;
   P(283, 1) = 750*268+295;
   P(283, 2) = 750*295+298;
   P(283, 3) = 750*298+296;
   P(283, 4) = 750*296+299;
   P(283, 5) = 750*299+270;
   P(283, 6) = 750*270+273;
   P(283, 7) = 750*273+420;
   P(283, 8) = 750*420+449;
   P(283, 9) = 750*449+266;
   P(284, 0) = 750*266+268;
   P(284, 1) = 750*268+295;
   P(284, 2) = 750*295+297;
   P(284, 3) = 750*297+444;
   P(284, 4) = 750*444+447;
   P(284, 5) = 750*447+445;
   P(284, 6) = 750*445+448;
   P(284, 7) = 750*448+446;
   P(284, 8) = 750*446+449;
   P(284, 9) = 750*449+266;
   P(285, 0) = 750*300+303;
   P(285, 1) = 750*303+301;
   P(285, 2) = 750*301+304;
   P(285, 3) = 750*304+331;
   P(285, 4) = 750*331+333;
   P(285, 5) = 750*333+480;
   P(285, 6) = 750*480+509;
   P(285, 7) = 750*509+326;
   P(285, 8) = 750*326+329;
   P(285, 9) = 750*329+300;
   P(286, 0) = 750*300+303;
   P(286, 1) = 750*303+450;
   P(286, 2) = 750*450+479;
   P(286, 3) = 750*479+446;
   P(286, 4) = 750*446+448;
   P(286, 5) = 750*448+325;
   P(286, 6) = 750*325+328;
   P(286, 7) = 750*328+326;
   P(286, 8) = 750*326+329;
   P(286, 9) = 750*329+300;
   P(287, 0) = 750*301+304;
   P(287, 1) = 750*304+302;
   P(287, 2) = 750*302+305;
   P(287, 3) = 750*305+306;
   P(287, 4) = 750*306+309;
   P(287, 5) = 750*309+456;
   P(287, 6) = 750*456+455;
   P(287, 7) = 750*455+422;
   P(287, 8) = 750*422+424;
   P(287, 9) = 750*424+301;
   P(288, 0) = 750*301+304;
   P(288, 1) = 750*304+331;
   P(288, 2) = 750*331+334;
   P(288, 3) = 750*334+361;
   P(288, 4) = 750*361+364;
   P(288, 5) = 750*364+391;
   P(288, 6) = 750*391+394;
   P(288, 7) = 750*394+421;
   P(288, 8) = 750*421+424;
   P(288, 9) = 750*424+301;
   P(289, 0) = 750*301+303;
   P(289, 1) = 750*303+450;
   P(289, 2) = 750*450+453;
   P(289, 3) = 750*453+451;
   P(289, 4) = 750*451+454;
   P(289, 5) = 750*454+452;
   P(289, 6) = 750*452+455;
   P(289, 7) = 750*455+422;
   P(289, 8) = 750*422+424;
   P(289, 9) = 750*424+301;
   P(290, 0) = 750*301+303;
   P(290, 1) = 750*303+450;
   P(290, 2) = 750*450+479;
   P(290, 3) = 750*479+446;
   P(290, 4) = 750*446+449;
   P(290, 5) = 750*449+420;
   P(290, 6) = 750*420+423;
   P(290, 7) = 750*423+421;
   P(290, 8) = 750*421+424;
   P(290, 9) = 750*424+301;
   P(291, 0) = 750*302+305;
   P(291, 1) = 750*305+306;
   P(291, 2) = 750*306+309;
   P(291, 3) = 750*309+307;
   P(291, 4) = 750*307+310;
   P(291, 5) = 750*310+337;
   P(291, 6) = 750*337+339;
   P(291, 7) = 750*339+486;
   P(291, 8) = 750*486+485;
   P(291, 9) = 750*485+302;
   P(292, 0) = 750*302+304;
   P(292, 1) = 750*304+331;
   P(292, 2) = 750*331+334;
   P(292, 3) = 750*334+332;
   P(292, 4) = 750*332+335;
   P(292, 5) = 750*335+336;
   P(292, 6) = 750*336+339;
   P(292, 7) = 750*339+486;
   P(292, 8) = 750*486+485;
   P(292, 9) = 750*485+302;
   P(293, 0) = 750*302+304;
   P(293, 1) = 750*304+331;
   P(293, 2) = 750*331+333;
   P(293, 3) = 750*333+480;
   P(293, 4) = 750*480+483;
   P(293, 5) = 750*483+481;
   P(293, 6) = 750*481+484;
   P(293, 7) = 750*484+482;
   P(293, 8) = 750*482+485;
   P(293, 9) = 750*485+302;
   P(294, 0) = 750*307+310;
   P(294, 1) = 750*310+308;
   P(294, 2) = 750*308+311;
   P(294, 3) = 750*311+312;
   P(294, 4) = 750*312+315;
   P(294, 5) = 750*315+462;
   P(294, 6) = 750*462+461;
   P(294, 7) = 750*461+428;
   P(294, 8) = 750*428+430;
   P(294, 9) = 750*430+307;
   P(295, 0) = 750*307+310;
   P(295, 1) = 750*310+337;
   P(295, 2) = 750*337+340;
   P(295, 3) = 750*340+367;
   P(295, 4) = 750*367+370;
   P(295, 5) = 750*370+397;
   P(295, 6) = 750*397+400;
   P(295, 7) = 750*400+427;
   P(295, 8) = 750*427+430;
   P(295, 9) = 750*430+307;
   P(296, 0) = 750*307+309;
   P(296, 1) = 750*309+456;
   P(296, 2) = 750*456+459;
   P(296, 3) = 750*459+457;
   P(296, 4) = 750*457+460;
   P(296, 5) = 750*460+458;
   P(296, 6) = 750*458+461;
   P(296, 7) = 750*461+428;
   P(296, 8) = 750*428+430;
   P(296, 9) = 750*430+307;
   P(297, 0) = 750*307+309;
   P(297, 1) = 750*309+456;
   P(297, 2) = 750*456+455;
   P(297, 3) = 750*455+422;
   P(297, 4) = 750*422+425;
   P(297, 5) = 750*425+426;
   P(297, 6) = 750*426+429;
   P(297, 7) = 750*429+427;
   P(297, 8) = 750*427+430;
   P(297, 9) = 750*430+307;
   P(298, 0) = 750*308+311;
   P(298, 1) = 750*311+312;
   P(298, 2) = 750*312+315;
   P(298, 3) = 750*315+313;
   P(298, 4) = 750*313+316;
   P(298, 5) = 750*316+343;
   P(298, 6) = 750*343+345;
   P(298, 7) = 750*345+492;
   P(298, 8) = 750*492+491;
   P(298, 9) = 750*491+308;
   P(299, 0) = 750*308+310;
   P(299, 1) = 750*310+337;
   P(299, 2) = 750*337+340;
   P(299, 3) = 750*340+338;
   P(299, 4) = 750*338+341;
   P(299, 5) = 750*341+342;
   P(299, 6) = 750*342+345;
   P(299, 7) = 750*345+492;
   P(299, 8) = 750*492+491;
   P(299, 9) = 750*491+308;
   P(300, 0) = 750*308+310;
   P(300, 1) = 750*310+337;
   P(300, 2) = 750*337+339;
   P(300, 3) = 750*339+486;
   P(300, 4) = 750*486+489;
   P(300, 5) = 750*489+487;
   P(300, 6) = 750*487+490;
   P(300, 7) = 750*490+488;
   P(300, 8) = 750*488+491;
   P(300, 9) = 750*491+308;
   P(301, 0) = 750*313+316;
   P(301, 1) = 750*316+314;
   P(301, 2) = 750*314+317;
   P(301, 3) = 750*317+318;
   P(301, 4) = 750*318+321;
   P(301, 5) = 750*321+468;
   P(301, 6) = 750*468+467;
   P(301, 7) = 750*467+434;
   P(301, 8) = 750*434+436;
   P(301, 9) = 750*436+313;
   P(302, 0) = 750*313+316;
   P(302, 1) = 750*316+343;
   P(302, 2) = 750*343+346;
   P(302, 3) = 750*346+373;
   P(302, 4) = 750*373+376;
   P(302, 5) = 750*376+403;
   P(302, 6) = 750*403+406;
   P(302, 7) = 750*406+433;
   P(302, 8) = 750*433+436;
   P(302, 9) = 750*436+313;
   P(303, 0) = 750*313+315;
   P(303, 1) = 750*315+462;
   P(303, 2) = 750*462+465;
   P(303, 3) = 750*465+463;
   P(303, 4) = 750*463+466;
   P(303, 5) = 750*466+464;
   P(303, 6) = 750*464+467;
   P(303, 7) = 750*467+434;
   P(303, 8) = 750*434+436;
   P(303, 9) = 750*436+313;
   P(304, 0) = 750*313+315;
   P(304, 1) = 750*315+462;
   P(304, 2) = 750*462+461;
   P(304, 3) = 750*461+428;
   P(304, 4) = 750*428+431;
   P(304, 5) = 750*431+432;
   P(304, 6) = 750*432+435;
   P(304, 7) = 750*435+433;
   P(304, 8) = 750*433+436;
   P(304, 9) = 750*436+313;
   P(305, 0) = 750*314+317;
   P(305, 1) = 750*317+318;
   P(305, 2) = 750*318+321;
   P(305, 3) = 750*321+319;
   P(305, 4) = 750*319+322;
   P(305, 5) = 750*322+349;
   P(305, 6) = 750*349+351;
   P(305, 7) = 750*351+498;
   P(305, 8) = 750*498+497;
   P(305, 9) = 750*497+314;
   P(306, 0) = 750*314+316;
   P(306, 1) = 750*316+343;
   P(306, 2) = 750*343+346;
   P(306, 3) = 750*346+344;
   P(306, 4) = 750*344+347;
   P(306, 5) = 750*347+348;
   P(306, 6) = 750*348+351;
   P(306, 7) = 750*351+498;
   P(306, 8) = 750*498+497;
   P(306, 9) = 750*497+314;
   P(307, 0) = 750*314+316;
   P(307, 1) = 750*316+343;
   P(307, 2) = 750*343+345;
   P(307, 3) = 750*345+492;
   P(307, 4) = 750*492+495;
   P(307, 5) = 750*495+493;
   P(307, 6) = 750*493+496;
   P(307, 7) = 750*496+494;
   P(307, 8) = 750*494+497;
   P(307, 9) = 750*497+314;
   P(308, 0) = 750*319+322;
   P(308, 1) = 750*322+320;
   P(308, 2) = 750*320+323;
   P(308, 3) = 750*323+324;
   P(308, 4) = 750*324+327;
   P(308, 5) = 750*327+474;
   P(308, 6) = 750*474+473;
   P(308, 7) = 750*473+440;
   P(308, 8) = 750*440+442;
   P(308, 9) = 750*442+319;
   P(309, 0) = 750*319+322;
   P(309, 1) = 750*322+349;
   P(309, 2) = 750*349+352;
   P(309, 3) = 750*352+379;
   P(309, 4) = 750*379+382;
   P(309, 5) = 750*382+409;
   P(309, 6) = 750*409+412;
   P(309, 7) = 750*412+439;
   P(309, 8) = 750*439+442;
   P(309, 9) = 750*442+319;
   P(310, 0) = 750*319+321;
   P(310, 1) = 750*321+468;
   P(310, 2) = 750*468+471;
   P(310, 3) = 750*471+469;
   P(310, 4) = 750*469+472;
   P(310, 5) = 750*472+470;
   P(310, 6) = 750*470+473;
   P(310, 7) = 750*473+440;
   P(310, 8) = 750*440+442;
   P(310, 9) = 750*442+319;
   P(311, 0) = 750*319+321;
   P(311, 1) = 750*321+468;
   P(311, 2) = 750*468+467;
   P(311, 3) = 750*467+434;
   P(311, 4) = 750*434+437;
   P(311, 5) = 750*437+438;
   P(311, 6) = 750*438+441;
   P(311, 7) = 750*441+439;
   P(311, 8) = 750*439+442;
   P(311, 9) = 750*442+319;
   P(312, 0) = 750*320+323;
   P(312, 1) = 750*323+324;
   P(312, 2) = 750*324+327;
   P(312, 3) = 750*327+325;
   P(312, 4) = 750*325+328;
   P(312, 5) = 750*328+355;
   P(312, 6) = 750*355+357;
   P(312, 7) = 750*357+504;
   P(312, 8) = 750*504+503;
   P(312, 9) = 750*503+320;
   P(313, 0) = 750*320+322;
   P(313, 1) = 750*322+349;
   P(313, 2) = 750*349+352;
   P(313, 3) = 750*352+350;
   P(313, 4) = 750*350+353;
   P(313, 5) = 750*353+354;
   P(313, 6) = 750*354+357;
   P(313, 7) = 750*357+504;
   P(313, 8) = 750*504+503;
   P(313, 9) = 750*503+320;
   P(314, 0) = 750*320+322;
   P(314, 1) = 750*322+349;
   P(314, 2) = 750*349+351;
   P(314, 3) = 750*351+498;
   P(314, 4) = 750*498+501;
   P(314, 5) = 750*501+499;
   P(314, 6) = 750*499+502;
   P(314, 7) = 750*502+500;
   P(314, 8) = 750*500+503;
   P(314, 9) = 750*503+320;
   P(315, 0) = 750*325+328;
   P(315, 1) = 750*328+355;
   P(315, 2) = 750*355+358;
   P(315, 3) = 750*358+385;
   P(315, 4) = 750*385+388;
   P(315, 5) = 750*388+415;
   P(315, 6) = 750*415+418;
   P(315, 7) = 750*418+445;
   P(315, 8) = 750*445+448;
   P(315, 9) = 750*448+325;
   P(316, 0) = 750*325+327;
   P(316, 1) = 750*327+474;
   P(316, 2) = 750*474+477;
   P(316, 3) = 750*477+475;
   P(316, 4) = 750*475+478;
   P(316, 5) = 750*478+476;
   P(316, 6) = 750*476+479;
   P(316, 7) = 750*479+446;
   P(316, 8) = 750*446+448;
   P(316, 9) = 750*448+325;
   P(317, 0) = 750*325+327;
   P(317, 1) = 750*327+474;
   P(317, 2) = 750*474+473;
   P(317, 3) = 750*473+440;
   P(317, 4) = 750*440+443;
   P(317, 5) = 750*443+444;
   P(317, 6) = 750*444+447;
   P(317, 7) = 750*447+445;
   P(317, 8) = 750*445+448;
   P(317, 9) = 750*448+325;
   P(318, 0) = 750*326+328;
   P(318, 1) = 750*328+355;
   P(318, 2) = 750*355+358;
   P(318, 3) = 750*358+356;
   P(318, 4) = 750*356+359;
   P(318, 5) = 750*359+330;
   P(318, 6) = 750*330+333;
   P(318, 7) = 750*333+480;
   P(318, 8) = 750*480+509;
   P(318, 9) = 750*509+326;
   P(319, 0) = 750*326+328;
   P(319, 1) = 750*328+355;
   P(319, 2) = 750*355+357;
   P(319, 3) = 750*357+504;
   P(319, 4) = 750*504+507;
   P(319, 5) = 750*507+505;
   P(319, 6) = 750*505+508;
   P(319, 7) = 750*508+506;
   P(319, 8) = 750*506+509;
   P(319, 9) = 750*509+326;
   P(320, 0) = 750*330+333;
   P(320, 1) = 750*333+331;
   P(320, 2) = 750*331+334;
   P(320, 3) = 750*334+361;
   P(320, 4) = 750*361+363;
   P(320, 5) = 750*363+510;
   P(320, 6) = 750*510+539;
   P(320, 7) = 750*539+356;
   P(320, 8) = 750*356+359;
   P(320, 9) = 750*359+330;
   P(321, 0) = 750*332+335;
   P(321, 1) = 750*335+336;
   P(321, 2) = 750*336+339;
   P(321, 3) = 750*339+337;
   P(321, 4) = 750*337+340;
   P(321, 5) = 750*340+367;
   P(321, 6) = 750*367+369;
   P(321, 7) = 750*369+516;
   P(321, 8) = 750*516+515;
   P(321, 9) = 750*515+332;
   P(322, 0) = 750*332+334;
   P(322, 1) = 750*334+361;
   P(322, 2) = 750*361+364;
   P(322, 3) = 750*364+362;
   P(322, 4) = 750*362+365;
   P(322, 5) = 750*365+366;
   P(322, 6) = 750*366+369;
   P(322, 7) = 750*369+516;
   P(322, 8) = 750*516+515;
   P(322, 9) = 750*515+332;
   P(323, 0) = 750*332+334;
   P(323, 1) = 750*334+361;
   P(323, 2) = 750*361+363;
   P(323, 3) = 750*363+510;
   P(323, 4) = 750*510+513;
   P(323, 5) = 750*513+511;
   P(323, 6) = 750*511+514;
   P(323, 7) = 750*514+512;
   P(323, 8) = 750*512+515;
   P(323, 9) = 750*515+332;
   P(324, 0) = 750*338+341;
   P(324, 1) = 750*341+342;
   P(324, 2) = 750*342+345;
   P(324, 3) = 750*345+343;
   P(324, 4) = 750*343+346;
   P(324, 5) = 750*346+373;
   P(324, 6) = 750*373+375;
   P(324, 7) = 750*375+522;
   P(324, 8) = 750*522+521;
   P(324, 9) = 750*521+338;
   P(325, 0) = 750*338+340;
   P(325, 1) = 750*340+367;
   P(325, 2) = 750*367+370;
   P(325, 3) = 750*370+368;
   P(325, 4) = 750*368+371;
   P(325, 5) = 750*371+372;
   P(325, 6) = 750*372+375;
   P(325, 7) = 750*375+522;
   P(325, 8) = 750*522+521;
   P(325, 9) = 750*521+338;
   P(326, 0) = 750*338+340;
   P(326, 1) = 750*340+367;
   P(326, 2) = 750*367+369;
   P(326, 3) = 750*369+516;
   P(326, 4) = 750*516+519;
   P(326, 5) = 750*519+517;
   P(326, 6) = 750*517+520;
   P(326, 7) = 750*520+518;
   P(326, 8) = 750*518+521;
   P(326, 9) = 750*521+338;
   P(327, 0) = 750*344+347;
   P(327, 1) = 750*347+348;
   P(327, 2) = 750*348+351;
   P(327, 3) = 750*351+349;
   P(327, 4) = 750*349+352;
   P(327, 5) = 750*352+379;
   P(327, 6) = 750*379+381;
   P(327, 7) = 750*381+528;
   P(327, 8) = 750*528+527;
   P(327, 9) = 750*527+344;
   P(328, 0) = 750*344+346;
   P(328, 1) = 750*346+373;
   P(328, 2) = 750*373+376;
   P(328, 3) = 750*376+374;
   P(328, 4) = 750*374+377;
   P(328, 5) = 750*377+378;
   P(328, 6) = 750*378+381;
   P(328, 7) = 750*381+528;
   P(328, 8) = 750*528+527;
   P(328, 9) = 750*527+344;
   P(329, 0) = 750*344+346;
   P(329, 1) = 750*346+373;
   P(329, 2) = 750*373+375;
   P(329, 3) = 750*375+522;
   P(329, 4) = 750*522+525;
   P(329, 5) = 750*525+523;
   P(329, 6) = 750*523+526;
   P(329, 7) = 750*526+524;
   P(329, 8) = 750*524+527;
   P(329, 9) = 750*527+344;
   P(330, 0) = 750*350+353;
   P(330, 1) = 750*353+354;
   P(330, 2) = 750*354+357;
   P(330, 3) = 750*357+355;
   P(330, 4) = 750*355+358;
   P(330, 5) = 750*358+385;
   P(330, 6) = 750*385+387;
   P(330, 7) = 750*387+534;
   P(330, 8) = 750*534+533;
   P(330, 9) = 750*533+350;
   P(331, 0) = 750*350+352;
   P(331, 1) = 750*352+379;
   P(331, 2) = 750*379+382;
   P(331, 3) = 750*382+380;
   P(331, 4) = 750*380+383;
   P(331, 5) = 750*383+384;
   P(331, 6) = 750*384+387;
   P(331, 7) = 750*387+534;
   P(331, 8) = 750*534+533;
   P(331, 9) = 750*533+350;
   P(332, 0) = 750*350+352;
   P(332, 1) = 750*352+379;
   P(332, 2) = 750*379+381;
   P(332, 3) = 750*381+528;
   P(332, 4) = 750*528+531;
   P(332, 5) = 750*531+529;
   P(332, 6) = 750*529+532;
   P(332, 7) = 750*532+530;
   P(332, 8) = 750*530+533;
   P(332, 9) = 750*533+350;
   P(333, 0) = 750*356+358;
   P(333, 1) = 750*358+385;
   P(333, 2) = 750*385+388;
   P(333, 3) = 750*388+386;
   P(333, 4) = 750*386+389;
   P(333, 5) = 750*389+360;
   P(333, 6) = 750*360+363;
   P(333, 7) = 750*363+510;
   P(333, 8) = 750*510+539;
   P(333, 9) = 750*539+356;
   P(334, 0) = 750*356+358;
   P(334, 1) = 750*358+385;
   P(334, 2) = 750*385+387;
   P(334, 3) = 750*387+534;
   P(334, 4) = 750*534+537;
   P(334, 5) = 750*537+535;
   P(334, 6) = 750*535+538;
   P(334, 7) = 750*538+536;
   P(334, 8) = 750*536+539;
   P(334, 9) = 750*539+356;
   P(335, 0) = 750*360+363;
   P(335, 1) = 750*363+361;
   P(335, 2) = 750*361+364;
   P(335, 3) = 750*364+391;
   P(335, 4) = 750*391+393;
   P(335, 5) = 750*393+540;
   P(335, 6) = 750*540+569;
   P(335, 7) = 750*569+386;
   P(335, 8) = 750*386+389;
   P(335, 9) = 750*389+360;
   P(336, 0) = 750*362+365;
   P(336, 1) = 750*365+366;
   P(336, 2) = 750*366+369;
   P(336, 3) = 750*369+367;
   P(336, 4) = 750*367+370;
   P(336, 5) = 750*370+397;
   P(336, 6) = 750*397+399;
   P(336, 7) = 750*399+546;
   P(336, 8) = 750*546+545;
   P(336, 9) = 750*545+362;
   P(337, 0) = 750*362+364;
   P(337, 1) = 750*364+391;
   P(337, 2) = 750*391+394;
   P(337, 3) = 750*394+392;
   P(337, 4) = 750*392+395;
   P(337, 5) = 750*395+396;
   P(337, 6) = 750*396+399;
   P(337, 7) = 750*399+546;
   P(337, 8) = 750*546+545;
   P(337, 9) = 750*545+362;
   P(338, 0) = 750*362+364;
   P(338, 1) = 750*364+391;
   P(338, 2) = 750*391+393;
   P(338, 3) = 750*393+540;
   P(338, 4) = 750*540+543;
   P(338, 5) = 750*543+541;
   P(338, 6) = 750*541+544;
   P(338, 7) = 750*544+542;
   P(338, 8) = 750*542+545;
   P(338, 9) = 750*545+362;
   P(339, 0) = 750*368+371;
   P(339, 1) = 750*371+372;
   P(339, 2) = 750*372+375;
   P(339, 3) = 750*375+373;
   P(339, 4) = 750*373+376;
   P(339, 5) = 750*376+403;
   P(339, 6) = 750*403+405;
   P(339, 7) = 750*405+552;
   P(339, 8) = 750*552+551;
   P(339, 9) = 750*551+368;
   P(340, 0) = 750*368+370;
   P(340, 1) = 750*370+397;
   P(340, 2) = 750*397+400;
   P(340, 3) = 750*400+398;
   P(340, 4) = 750*398+401;
   P(340, 5) = 750*401+402;
   P(340, 6) = 750*402+405;
   P(340, 7) = 750*405+552;
   P(340, 8) = 750*552+551;
   P(340, 9) = 750*551+368;
   P(341, 0) = 750*368+370;
   P(341, 1) = 750*370+397;
   P(341, 2) = 750*397+399;
   P(341, 3) = 750*399+546;
   P(341, 4) = 750*546+549;
   P(341, 5) = 750*549+547;
   P(341, 6) = 750*547+550;
   P(341, 7) = 750*550+548;
   P(341, 8) = 750*548+551;
   P(341, 9) = 750*551+368;
   P(342, 0) = 750*374+377;
   P(342, 1) = 750*377+378;
   P(342, 2) = 750*378+381;
   P(342, 3) = 750*381+379;
   P(342, 4) = 750*379+382;
   P(342, 5) = 750*382+409;
   P(342, 6) = 750*409+411;
   P(342, 7) = 750*411+558;
   P(342, 8) = 750*558+557;
   P(342, 9) = 750*557+374;
   P(343, 0) = 750*374+376;
   P(343, 1) = 750*376+403;
   P(343, 2) = 750*403+406;
   P(343, 3) = 750*406+404;
   P(343, 4) = 750*404+407;
   P(343, 5) = 750*407+408;
   P(343, 6) = 750*408+411;
   P(343, 7) = 750*411+558;
   P(343, 8) = 750*558+557;
   P(343, 9) = 750*557+374;
   P(344, 0) = 750*374+376;
   P(344, 1) = 750*376+403;
   P(344, 2) = 750*403+405;
   P(344, 3) = 750*405+552;
   P(344, 4) = 750*552+555;
   P(344, 5) = 750*555+553;
   P(344, 6) = 750*553+556;
   P(344, 7) = 750*556+554;
   P(344, 8) = 750*554+557;
   P(344, 9) = 750*557+374;
   P(345, 0) = 750*380+383;
   P(345, 1) = 750*383+384;
   P(345, 2) = 750*384+387;
   P(345, 3) = 750*387+385;
   P(345, 4) = 750*385+388;
   P(345, 5) = 750*388+415;
   P(345, 6) = 750*415+417;
   P(345, 7) = 750*417+564;
   P(345, 8) = 750*564+563;
   P(345, 9) = 750*563+380;
   P(346, 0) = 750*380+382;
   P(346, 1) = 750*382+409;
   P(346, 2) = 750*409+412;
   P(346, 3) = 750*412+410;
   P(346, 4) = 750*410+413;
   P(346, 5) = 750*413+414;
   P(346, 6) = 750*414+417;
   P(346, 7) = 750*417+564;
   P(346, 8) = 750*564+563;
   P(346, 9) = 750*563+380;
   P(347, 0) = 750*380+382;
   P(347, 1) = 750*382+409;
   P(347, 2) = 750*409+411;
   P(347, 3) = 750*411+558;
   P(347, 4) = 750*558+561;
   P(347, 5) = 750*561+559;
   P(347, 6) = 750*559+562;
   P(347, 7) = 750*562+560;
   P(347, 8) = 750*560+563;
   P(347, 9) = 750*563+380;
   P(348, 0) = 750*386+388;
   P(348, 1) = 750*388+415;
   P(348, 2) = 750*415+418;
   P(348, 3) = 750*418+416;
   P(348, 4) = 750*416+419;
   P(348, 5) = 750*419+390;
   P(348, 6) = 750*390+393;
   P(348, 7) = 750*393+540;
   P(348, 8) = 750*540+569;
   P(348, 9) = 750*569+386;
   P(349, 0) = 750*386+388;
   P(349, 1) = 750*388+415;
   P(349, 2) = 750*415+417;
   P(349, 3) = 750*417+564;
   P(349, 4) = 750*564+567;
   P(349, 5) = 750*567+565;
   P(349, 6) = 750*565+568;
   P(349, 7) = 750*568+566;
   P(349, 8) = 750*566+569;
   P(349, 9) = 750*569+386;
   P(350, 0) = 750*390+393;
   P(350, 1) = 750*393+391;
   P(350, 2) = 750*391+394;
   P(350, 3) = 750*394+421;
   P(350, 4) = 750*421+423;
   P(350, 5) = 750*423+570;
   P(350, 6) = 750*570+599;
   P(350, 7) = 750*599+416;
   P(350, 8) = 750*416+419;
   P(350, 9) = 750*419+390;
   P(351, 0) = 750*392+395;
   P(351, 1) = 750*395+396;
   P(351, 2) = 750*396+399;
   P(351, 3) = 750*399+397;
   P(351, 4) = 750*397+400;
   P(351, 5) = 750*400+427;
   P(351, 6) = 750*427+429;
   P(351, 7) = 750*429+576;
   P(351, 8) = 750*576+575;
   P(351, 9) = 750*575+392;
   P(352, 0) = 750*392+394;
   P(352, 1) = 750*394+421;
   P(352, 2) = 750*421+424;
   P(352, 3) = 750*424+422;
   P(352, 4) = 750*422+425;
   P(352, 5) = 750*425+426;
   P(352, 6) = 750*426+429;
   P(352, 7) = 750*429+576;
   P(352, 8) = 750*576+575;
   P(352, 9) = 750*575+392;
   P(353, 0) = 750*392+394;
   P(353, 1) = 750*394+421;
   P(353, 2) = 750*421+423;
   P(353, 3) = 750*423+570;
   P(353, 4) = 750*570+573;
   P(353, 5) = 750*573+571;
   P(353, 6) = 750*571+574;
   P(353, 7) = 750*574+572;
   P(353, 8) = 750*572+575;
   P(353, 9) = 750*575+392;
   P(354, 0) = 750*398+401;
   P(354, 1) = 750*401+402;
   P(354, 2) = 750*402+405;
   P(354, 3) = 750*405+403;
   P(354, 4) = 750*403+406;
   P(354, 5) = 750*406+433;
   P(354, 6) = 750*433+435;
   P(354, 7) = 750*435+582;
   P(354, 8) = 750*582+581;
   P(354, 9) = 750*581+398;
   P(355, 0) = 750*398+400;
   P(355, 1) = 750*400+427;
   P(355, 2) = 750*427+430;
   P(355, 3) = 750*430+428;
   P(355, 4) = 750*428+431;
   P(355, 5) = 750*431+432;
   P(355, 6) = 750*432+435;
   P(355, 7) = 750*435+582;
   P(355, 8) = 750*582+581;
   P(355, 9) = 750*581+398;
   P(356, 0) = 750*398+400;
   P(356, 1) = 750*400+427;
   P(356, 2) = 750*427+429;
   P(356, 3) = 750*429+576;
   P(356, 4) = 750*576+579;
   P(356, 5) = 750*579+577;
   P(356, 6) = 750*577+580;
   P(356, 7) = 750*580+578;
   P(356, 8) = 750*578+581;
   P(356, 9) = 750*581+398;
   P(357, 0) = 750*404+407;
   P(357, 1) = 750*407+408;
   P(357, 2) = 750*408+411;
   P(357, 3) = 750*411+409;
   P(357, 4) = 750*409+412;
   P(357, 5) = 750*412+439;
   P(357, 6) = 750*439+441;
   P(357, 7) = 750*441+588;
   P(357, 8) = 750*588+587;
   P(357, 9) = 750*587+404;
   P(358, 0) = 750*404+406;
   P(358, 1) = 750*406+433;
   P(358, 2) = 750*433+436;
   P(358, 3) = 750*436+434;
   P(358, 4) = 750*434+437;
   P(358, 5) = 750*437+438;
   P(358, 6) = 750*438+441;
   P(358, 7) = 750*441+588;
   P(358, 8) = 750*588+587;
   P(358, 9) = 750*587+404;
   P(359, 0) = 750*404+406;
   P(359, 1) = 750*406+433;
   P(359, 2) = 750*433+435;
   P(359, 3) = 750*435+582;
   P(359, 4) = 750*582+585;
   P(359, 5) = 750*585+583;
   P(359, 6) = 750*583+586;
   P(359, 7) = 750*586+584;
   P(359, 8) = 750*584+587;
   P(359, 9) = 750*587+404;
   P(360, 0) = 750*410+413;
   P(360, 1) = 750*413+414;
   P(360, 2) = 750*414+417;
   P(360, 3) = 750*417+415;
   P(360, 4) = 750*415+418;
   P(360, 5) = 750*418+445;
   P(360, 6) = 750*445+447;
   P(360, 7) = 750*447+594;
   P(360, 8) = 750*594+593;
   P(360, 9) = 750*593+410;
   P(361, 0) = 750*410+412;
   P(361, 1) = 750*412+439;
   P(361, 2) = 750*439+442;
   P(361, 3) = 750*442+440;
   P(361, 4) = 750*440+443;
   P(361, 5) = 750*443+444;
   P(361, 6) = 750*444+447;
   P(361, 7) = 750*447+594;
   P(361, 8) = 750*594+593;
   P(361, 9) = 750*593+410;
   P(362, 0) = 750*410+412;
   P(362, 1) = 750*412+439;
   P(362, 2) = 750*439+441;
   P(362, 3) = 750*441+588;
   P(362, 4) = 750*588+591;
   P(362, 5) = 750*591+589;
   P(362, 6) = 750*589+592;
   P(362, 7) = 750*592+590;
   P(362, 8) = 750*590+593;
   P(362, 9) = 750*593+410;
   P(363, 0) = 750*416+418;
   P(363, 1) = 750*418+445;
   P(363, 2) = 750*445+448;
   P(363, 3) = 750*448+446;
   P(363, 4) = 750*446+449;
   P(363, 5) = 750*449+420;
   P(363, 6) = 750*420+423;
   P(363, 7) = 750*423+570;
   P(363, 8) = 750*570+599;
   P(363, 9) = 750*599+416;
   P(364, 0) = 750*416+418;
   P(364, 1) = 750*418+445;
   P(364, 2) = 750*445+447;
   P(364, 3) = 750*447+594;
   P(364, 4) = 750*594+597;
   P(364, 5) = 750*597+595;
   P(364, 6) = 750*595+598;
   P(364, 7) = 750*598+596;
   P(364, 8) = 750*596+599;
   P(364, 9) = 750*599+416;
   P(365, 0) = 750*450+453;
   P(365, 1) = 750*453+451;
   P(365, 2) = 750*451+454;
   P(365, 3) = 750*454+481;
   P(365, 4) = 750*481+483;
   P(365, 5) = 750*483+630;
   P(365, 6) = 750*630+659;
   P(365, 7) = 750*659+476;
   P(365, 8) = 750*476+479;
   P(365, 9) = 750*479+450;
   P(366, 0) = 750*450+453;
   P(366, 1) = 750*453+600;
   P(366, 2) = 750*600+629;
   P(366, 3) = 750*629+596;
   P(366, 4) = 750*596+598;
   P(366, 5) = 750*598+475;
   P(366, 6) = 750*475+478;
   P(366, 7) = 750*478+476;
   P(366, 8) = 750*476+479;
   P(366, 9) = 750*479+450;
   P(367, 0) = 750*451+454;
   P(367, 1) = 750*454+452;
   P(367, 2) = 750*452+455;
   P(367, 3) = 750*455+456;
   P(367, 4) = 750*456+459;
   P(367, 5) = 750*459+606;
   P(367, 6) = 750*606+605;
   P(367, 7) = 750*605+572;
   P(367, 8) = 750*572+574;
   P(367, 9) = 750*574+451;
   P(368, 0) = 750*451+454;
   P(368, 1) = 750*454+481;
   P(368, 2) = 750*481+484;
   P(368, 3) = 750*484+511;
   P(368, 4) = 750*511+514;
   P(368, 5) = 750*514+541;
   P(368, 6) = 750*541+544;
   P(368, 7) = 750*544+571;
   P(368, 8) = 750*571+574;
   P(368, 9) = 750*574+451;
   P(369, 0) = 750*451+453;
   P(369, 1) = 750*453+600;
   P(369, 2) = 750*600+603;
   P(369, 3) = 750*603+601;
   P(369, 4) = 750*601+604;
   P(369, 5) = 750*604+602;
   P(369, 6) = 750*602+605;
   P(369, 7) = 750*605+572;
   P(369, 8) = 750*572+574;
   P(369, 9) = 750*574+451;
   P(370, 0) = 750*451+453;
   P(370, 1) = 750*453+600;
   P(370, 2) = 750*600+629;
   P(370, 3) = 750*629+596;
   P(370, 4) = 750*596+599;
   P(370, 5) = 750*599+570;
   P(370, 6) = 750*570+573;
   P(370, 7) = 750*573+571;
   P(370, 8) = 750*571+574;
   P(370, 9) = 750*574+451;
   P(371, 0) = 750*452+455;
   P(371, 1) = 750*455+456;
   P(371, 2) = 750*456+459;
   P(371, 3) = 750*459+457;
   P(371, 4) = 750*457+460;
   P(371, 5) = 750*460+487;
   P(371, 6) = 750*487+489;
   P(371, 7) = 750*489+636;
   P(371, 8) = 750*636+635;
   P(371, 9) = 750*635+452;
   P(372, 0) = 750*452+454;
   P(372, 1) = 750*454+481;
   P(372, 2) = 750*481+484;
   P(372, 3) = 750*484+482;
   P(372, 4) = 750*482+485;
   P(372, 5) = 750*485+486;
   P(372, 6) = 750*486+489;
   P(372, 7) = 750*489+636;
   P(372, 8) = 750*636+635;
   P(372, 9) = 750*635+452;
   P(373, 0) = 750*452+454;
   P(373, 1) = 750*454+481;
   P(373, 2) = 750*481+483;
   P(373, 3) = 750*483+630;
   P(373, 4) = 750*630+633;
   P(373, 5) = 750*633+631;
   P(373, 6) = 750*631+634;
   P(373, 7) = 750*634+632;
   P(373, 8) = 750*632+635;
   P(373, 9) = 750*635+452;
   P(374, 0) = 750*457+460;
   P(374, 1) = 750*460+458;
   P(374, 2) = 750*458+461;
   P(374, 3) = 750*461+462;
   P(374, 4) = 750*462+465;
   P(374, 5) = 750*465+612;
   P(374, 6) = 750*612+611;
   P(374, 7) = 750*611+578;
   P(374, 8) = 750*578+580;
   P(374, 9) = 750*580+457;
   P(375, 0) = 750*457+460;
   P(375, 1) = 750*460+487;
   P(375, 2) = 750*487+490;
   P(375, 3) = 750*490+517;
   P(375, 4) = 750*517+520;
   P(375, 5) = 750*520+547;
   P(375, 6) = 750*547+550;
   P(375, 7) = 750*550+577;
   P(375, 8) = 750*577+580;
   P(375, 9) = 750*580+457;
   P(376, 0) = 750*457+459;
   P(376, 1) = 750*459+606;
   P(376, 2) = 750*606+609;
   P(376, 3) = 750*609+607;
   P(376, 4) = 750*607+610;
   P(376, 5) = 750*610+608;
   P(376, 6) = 750*608+611;
   P(376, 7) = 750*611+578;
   P(376, 8) = 750*578+580;
   P(376, 9) = 750*580+457;
   P(377, 0) = 750*457+459;
   P(377, 1) = 750*459+606;
   P(377, 2) = 750*606+605;
   P(377, 3) = 750*605+572;
   P(377, 4) = 750*572+575;
   P(377, 5) = 750*575+576;
   P(377, 6) = 750*576+579;
   P(377, 7) = 750*579+577;
   P(377, 8) = 750*577+580;
   P(377, 9) = 750*580+457;
   P(378, 0) = 750*458+461;
   P(378, 1) = 750*461+462;
   P(378, 2) = 750*462+465;
   P(378, 3) = 750*465+463;
   P(378, 4) = 750*463+466;
   P(378, 5) = 750*466+493;
   P(378, 6) = 750*493+495;
   P(378, 7) = 750*495+642;
   P(378, 8) = 750*642+641;
   P(378, 9) = 750*641+458;
   P(379, 0) = 750*458+460;
   P(379, 1) = 750*460+487;
   P(379, 2) = 750*487+490;
   P(379, 3) = 750*490+488;
   P(379, 4) = 750*488+491;
   P(379, 5) = 750*491+492;
   P(379, 6) = 750*492+495;
   P(379, 7) = 750*495+642;
   P(379, 8) = 750*642+641;
   P(379, 9) = 750*641+458;
   P(380, 0) = 750*458+460;
   P(380, 1) = 750*460+487;
   P(380, 2) = 750*487+489;
   P(380, 3) = 750*489+636;
   P(380, 4) = 750*636+639;
   P(380, 5) = 750*639+637;
   P(380, 6) = 750*637+640;
   P(380, 7) = 750*640+638;
   P(380, 8) = 750*638+641;
   P(380, 9) = 750*641+458;
   P(381, 0) = 750*463+466;
   P(381, 1) = 750*466+464;
   P(381, 2) = 750*464+467;
   P(381, 3) = 750*467+468;
   P(381, 4) = 750*468+471;
   P(381, 5) = 750*471+618;
   P(381, 6) = 750*618+617;
   P(381, 7) = 750*617+584;
   P(381, 8) = 750*584+586;
   P(381, 9) = 750*586+463;
   P(382, 0) = 750*463+466;
   P(382, 1) = 750*466+493;
   P(382, 2) = 750*493+496;
   P(382, 3) = 750*496+523;
   P(382, 4) = 750*523+526;
   P(382, 5) = 750*526+553;
   P(382, 6) = 750*553+556;
   P(382, 7) = 750*556+583;
   P(382, 8) = 750*583+586;
   P(382, 9) = 750*586+463;
   P(383, 0) = 750*463+465;
   P(383, 1) = 750*465+612;
   P(383, 2) = 750*612+615;
   P(383, 3) = 750*615+613;
   P(383, 4) = 750*613+616;
   P(383, 5) = 750*616+614;
   P(383, 6) = 750*614+617;
   P(383, 7) = 750*617+584;
   P(383, 8) = 750*584+586;
   P(383, 9) = 750*586+463;
   P(384, 0) = 750*463+465;
   P(384, 1) = 750*465+612;
   P(384, 2) = 750*612+611;
   P(384, 3) = 750*611+578;
   P(384, 4) = 750*578+581;
   P(384, 5) = 750*581+582;
   P(384, 6) = 750*582+585;
   P(384, 7) = 750*585+583;
   P(384, 8) = 750*583+586;
   P(384, 9) = 750*586+463;
   P(385, 0) = 750*464+467;
   P(385, 1) = 750*467+468;
   P(385, 2) = 750*468+471;
   P(385, 3) = 750*471+469;
   P(385, 4) = 750*469+472;
   P(385, 5) = 750*472+499;
   P(385, 6) = 750*499+501;
   P(385, 7) = 750*501+648;
   P(385, 8) = 750*648+647;
   P(385, 9) = 750*647+464;
   P(386, 0) = 750*464+466;
   P(386, 1) = 750*466+493;
   P(386, 2) = 750*493+496;
   P(386, 3) = 750*496+494;
   P(386, 4) = 750*494+497;
   P(386, 5) = 750*497+498;
   P(386, 6) = 750*498+501;
   P(386, 7) = 750*501+648;
   P(386, 8) = 750*648+647;
   P(386, 9) = 750*647+464;
   P(387, 0) = 750*464+466;
   P(387, 1) = 750*466+493;
   P(387, 2) = 750*493+495;
   P(387, 3) = 750*495+642;
   P(387, 4) = 750*642+645;
   P(387, 5) = 750*645+643;
   P(387, 6) = 750*643+646;
   P(387, 7) = 750*646+644;
   P(387, 8) = 750*644+647;
   P(387, 9) = 750*647+464;
   P(388, 0) = 750*469+472;
   P(388, 1) = 750*472+470;
   P(388, 2) = 750*470+473;
   P(388, 3) = 750*473+474;
   P(388, 4) = 750*474+477;
   P(388, 5) = 750*477+624;
   P(388, 6) = 750*624+623;
   P(388, 7) = 750*623+590;
   P(388, 8) = 750*590+592;
   P(388, 9) = 750*592+469;
   P(389, 0) = 750*469+472;
   P(389, 1) = 750*472+499;
   P(389, 2) = 750*499+502;
   P(389, 3) = 750*502+529;
   P(389, 4) = 750*529+532;
   P(389, 5) = 750*532+559;
   P(389, 6) = 750*559+562;
   P(389, 7) = 750*562+589;
   P(389, 8) = 750*589+592;
   P(389, 9) = 750*592+469;
   P(390, 0) = 750*469+471;
   P(390, 1) = 750*471+618;
   P(390, 2) = 750*618+621;
   P(390, 3) = 750*621+619;
   P(390, 4) = 750*619+622;
   P(390, 5) = 750*622+620;
   P(390, 6) = 750*620+623;
   P(390, 7) = 750*623+590;
   P(390, 8) = 750*590+592;
   P(390, 9) = 750*592+469;
   P(391, 0) = 750*469+471;
   P(391, 1) = 750*471+618;
   P(391, 2) = 750*618+617;
   P(391, 3) = 750*617+584;
   P(391, 4) = 750*584+587;
   P(391, 5) = 750*587+588;
   P(391, 6) = 750*588+591;
   P(391, 7) = 750*591+589;
   P(391, 8) = 750*589+592;
   P(391, 9) = 750*592+469;
   P(392, 0) = 750*470+473;
   P(392, 1) = 750*473+474;
   P(392, 2) = 750*474+477;
   P(392, 3) = 750*477+475;
   P(392, 4) = 750*475+478;
   P(392, 5) = 750*478+505;
   P(392, 6) = 750*505+507;
   P(392, 7) = 750*507+654;
   P(392, 8) = 750*654+653;
   P(392, 9) = 750*653+470;
   P(393, 0) = 750*470+472;
   P(393, 1) = 750*472+499;
   P(393, 2) = 750*499+502;
   P(393, 3) = 750*502+500;
   P(393, 4) = 750*500+503;
   P(393, 5) = 750*503+504;
   P(393, 6) = 750*504+507;
   P(393, 7) = 750*507+654;
   P(393, 8) = 750*654+653;
   P(393, 9) = 750*653+470;
   P(394, 0) = 750*470+472;
   P(394, 1) = 750*472+499;
   P(394, 2) = 750*499+501;
   P(394, 3) = 750*501+648;
   P(394, 4) = 750*648+651;
   P(394, 5) = 750*651+649;
   P(394, 6) = 750*649+652;
   P(394, 7) = 750*652+650;
   P(394, 8) = 750*650+653;
   P(394, 9) = 750*653+470;
   P(395, 0) = 750*475+478;
   P(395, 1) = 750*478+505;
   P(395, 2) = 750*505+508;
   P(395, 3) = 750*508+535;
   P(395, 4) = 750*535+538;
   P(395, 5) = 750*538+565;
   P(395, 6) = 750*565+568;
   P(395, 7) = 750*568+595;
   P(395, 8) = 750*595+598;
   P(395, 9) = 750*598+475;
   P(396, 0) = 750*475+477;
   P(396, 1) = 750*477+624;
   P(396, 2) = 750*624+627;
   P(396, 3) = 750*627+625;
   P(396, 4) = 750*625+628;
   P(396, 5) = 750*628+626;
   P(396, 6) = 750*626+629;
   P(396, 7) = 750*629+596;
   P(396, 8) = 750*596+598;
   P(396, 9) = 750*598+475;
   P(397, 0) = 750*475+477;
   P(397, 1) = 750*477+624;
   P(397, 2) = 750*624+623;
   P(397, 3) = 750*623+590;
   P(397, 4) = 750*590+593;
   P(397, 5) = 750*593+594;
   P(397, 6) = 750*594+597;
   P(397, 7) = 750*597+595;
   P(397, 8) = 750*595+598;
   P(397, 9) = 750*598+475;
   P(398, 0) = 750*476+478;
   P(398, 1) = 750*478+505;
   P(398, 2) = 750*505+508;
   P(398, 3) = 750*508+506;
   P(398, 4) = 750*506+509;
   P(398, 5) = 750*509+480;
   P(398, 6) = 750*480+483;
   P(398, 7) = 750*483+630;
   P(398, 8) = 750*630+659;
   P(398, 9) = 750*659+476;
   P(399, 0) = 750*476+478;
   P(399, 1) = 750*478+505;
   P(399, 2) = 750*505+507;
   P(399, 3) = 750*507+654;
   P(399, 4) = 750*654+657;
   P(399, 5) = 750*657+655;
   P(399, 6) = 750*655+658;
   P(399, 7) = 750*658+656;
   P(399, 8) = 750*656+659;
   P(399, 9) = 750*659+476;
   P(400, 0) = 750*480+483;
   P(400, 1) = 750*483+481;
   P(400, 2) = 750*481+484;
   P(400, 3) = 750*484+511;
   P(400, 4) = 750*511+513;
   P(400, 5) = 750*513+660;
   P(400, 6) = 750*660+689;
   P(400, 7) = 750*689+506;
   P(400, 8) = 750*506+509;
   P(400, 9) = 750*509+480;
   P(401, 0) = 750*482+485;
   P(401, 1) = 750*485+486;
   P(401, 2) = 750*486+489;
   P(401, 3) = 750*489+487;
   P(401, 4) = 750*487+490;
   P(401, 5) = 750*490+517;
   P(401, 6) = 750*517+519;
   P(401, 7) = 750*519+666;
   P(401, 8) = 750*666+665;
   P(401, 9) = 750*665+482;
   P(402, 0) = 750*482+484;
   P(402, 1) = 750*484+511;
   P(402, 2) = 750*511+514;
   P(402, 3) = 750*514+512;
   P(402, 4) = 750*512+515;
   P(402, 5) = 750*515+516;
   P(402, 6) = 750*516+519;
   P(402, 7) = 750*519+666;
   P(402, 8) = 750*666+665;
   P(402, 9) = 750*665+482;
   P(403, 0) = 750*482+484;
   P(403, 1) = 750*484+511;
   P(403, 2) = 750*511+513;
   P(403, 3) = 750*513+660;
   P(403, 4) = 750*660+663;
   P(403, 5) = 750*663+661;
   P(403, 6) = 750*661+664;
   P(403, 7) = 750*664+662;
   P(403, 8) = 750*662+665;
   P(403, 9) = 750*665+482;
   P(404, 0) = 750*488+491;
   P(404, 1) = 750*491+492;
   P(404, 2) = 750*492+495;
   P(404, 3) = 750*495+493;
   P(404, 4) = 750*493+496;
   P(404, 5) = 750*496+523;
   P(404, 6) = 750*523+525;
   P(404, 7) = 750*525+672;
   P(404, 8) = 750*672+671;
   P(404, 9) = 750*671+488;
   P(405, 0) = 750*488+490;
   P(405, 1) = 750*490+517;
   P(405, 2) = 750*517+520;
   P(405, 3) = 750*520+518;
   P(405, 4) = 750*518+521;
   P(405, 5) = 750*521+522;
   P(405, 6) = 750*522+525;
   P(405, 7) = 750*525+672;
   P(405, 8) = 750*672+671;
   P(405, 9) = 750*671+488;
   P(406, 0) = 750*488+490;
   P(406, 1) = 750*490+517;
   P(406, 2) = 750*517+519;
   P(406, 3) = 750*519+666;
   P(406, 4) = 750*666+669;
   P(406, 5) = 750*669+667;
   P(406, 6) = 750*667+670;
   P(406, 7) = 750*670+668;
   P(406, 8) = 750*668+671;
   P(406, 9) = 750*671+488;
   P(407, 0) = 750*494+497;
   P(407, 1) = 750*497+498;
   P(407, 2) = 750*498+501;
   P(407, 3) = 750*501+499;
   P(407, 4) = 750*499+502;
   P(407, 5) = 750*502+529;
   P(407, 6) = 750*529+531;
   P(407, 7) = 750*531+678;
   P(407, 8) = 750*678+677;
   P(407, 9) = 750*677+494;
   P(408, 0) = 750*494+496;
   P(408, 1) = 750*496+523;
   P(408, 2) = 750*523+526;
   P(408, 3) = 750*526+524;
   P(408, 4) = 750*524+527;
   P(408, 5) = 750*527+528;
   P(408, 6) = 750*528+531;
   P(408, 7) = 750*531+678;
   P(408, 8) = 750*678+677;
   P(408, 9) = 750*677+494;
   P(409, 0) = 750*494+496;
   P(409, 1) = 750*496+523;
   P(409, 2) = 750*523+525;
   P(409, 3) = 750*525+672;
   P(409, 4) = 750*672+675;
   P(409, 5) = 750*675+673;
   P(409, 6) = 750*673+676;
   P(409, 7) = 750*676+674;
   P(409, 8) = 750*674+677;
   P(409, 9) = 750*677+494;
   P(410, 0) = 750*500+503;
   P(410, 1) = 750*503+504;
   P(410, 2) = 750*504+507;
   P(410, 3) = 750*507+505;
   P(410, 4) = 750*505+508;
   P(410, 5) = 750*508+535;
   P(410, 6) = 750*535+537;
   P(410, 7) = 750*537+684;
   P(410, 8) = 750*684+683;
   P(410, 9) = 750*683+500;
   P(411, 0) = 750*500+502;
   P(411, 1) = 750*502+529;
   P(411, 2) = 750*529+532;
   P(411, 3) = 750*532+530;
   P(411, 4) = 750*530+533;
   P(411, 5) = 750*533+534;
   P(411, 6) = 750*534+537;
   P(411, 7) = 750*537+684;
   P(411, 8) = 750*684+683;
   P(411, 9) = 750*683+500;
   P(412, 0) = 750*500+502;
   P(412, 1) = 750*502+529;
   P(412, 2) = 750*529+531;
   P(412, 3) = 750*531+678;
   P(412, 4) = 750*678+681;
   P(412, 5) = 750*681+679;
   P(412, 6) = 750*679+682;
   P(412, 7) = 750*682+680;
   P(412, 8) = 750*680+683;
   P(412, 9) = 750*683+500;
   P(413, 0) = 750*506+508;
   P(413, 1) = 750*508+535;
   P(413, 2) = 750*535+538;
   P(413, 3) = 750*538+536;
   P(413, 4) = 750*536+539;
   P(413, 5) = 750*539+510;
   P(413, 6) = 750*510+513;
   P(413, 7) = 750*513+660;
   P(413, 8) = 750*660+689;
   P(413, 9) = 750*689+506;
   P(414, 0) = 750*506+508;
   P(414, 1) = 750*508+535;
   P(414, 2) = 750*535+537;
   P(414, 3) = 750*537+684;
   P(414, 4) = 750*684+687;
   P(414, 5) = 750*687+685;
   P(414, 6) = 750*685+688;
   P(414, 7) = 750*688+686;
   P(414, 8) = 750*686+689;
   P(414, 9) = 750*689+506;
   P(415, 0) = 750*510+513;
   P(415, 1) = 750*513+511;
   P(415, 2) = 750*511+514;
   P(415, 3) = 750*514+541;
   P(415, 4) = 750*541+543;
   P(415, 5) = 750*543+690;
   P(415, 6) = 750*690+719;
   P(415, 7) = 750*719+536;
   P(415, 8) = 750*536+539;
   P(415, 9) = 750*539+510;
   P(416, 0) = 750*512+515;
   P(416, 1) = 750*515+516;
   P(416, 2) = 750*516+519;
   P(416, 3) = 750*519+517;
   P(416, 4) = 750*517+520;
   P(416, 5) = 750*520+547;
   P(416, 6) = 750*547+549;
   P(416, 7) = 750*549+696;
   P(416, 8) = 750*696+695;
   P(416, 9) = 750*695+512;
   P(417, 0) = 750*512+514;
   P(417, 1) = 750*514+541;
   P(417, 2) = 750*541+544;
   P(417, 3) = 750*544+542;
   P(417, 4) = 750*542+545;
   P(417, 5) = 750*545+546;
   P(417, 6) = 750*546+549;
   P(417, 7) = 750*549+696;
   P(417, 8) = 750*696+695;
   P(417, 9) = 750*695+512;
   P(418, 0) = 750*512+514;
   P(418, 1) = 750*514+541;
   P(418, 2) = 750*541+543;
   P(418, 3) = 750*543+690;
   P(418, 4) = 750*690+693;
   P(418, 5) = 750*693+691;
   P(418, 6) = 750*691+694;
   P(418, 7) = 750*694+692;
   P(418, 8) = 750*692+695;
   P(418, 9) = 750*695+512;
   P(419, 0) = 750*518+521;
   P(419, 1) = 750*521+522;
   P(419, 2) = 750*522+525;
   P(419, 3) = 750*525+523;
   P(419, 4) = 750*523+526;
   P(419, 5) = 750*526+553;
   P(419, 6) = 750*553+555;
   P(419, 7) = 750*555+702;
   P(419, 8) = 750*702+701;
   P(419, 9) = 750*701+518;
   P(420, 0) = 750*518+520;
   P(420, 1) = 750*520+547;
   P(420, 2) = 750*547+550;
   P(420, 3) = 750*550+548;
   P(420, 4) = 750*548+551;
   P(420, 5) = 750*551+552;
   P(420, 6) = 750*552+555;
   P(420, 7) = 750*555+702;
   P(420, 8) = 750*702+701;
   P(420, 9) = 750*701+518;
   P(421, 0) = 750*518+520;
   P(421, 1) = 750*520+547;
   P(421, 2) = 750*547+549;
   P(421, 3) = 750*549+696;
   P(421, 4) = 750*696+699;
   P(421, 5) = 750*699+697;
   P(421, 6) = 750*697+700;
   P(421, 7) = 750*700+698;
   P(421, 8) = 750*698+701;
   P(421, 9) = 750*701+518;
   P(422, 0) = 750*524+527;
   P(422, 1) = 750*527+528;
   P(422, 2) = 750*528+531;
   P(422, 3) = 750*531+529;
   P(422, 4) = 750*529+532;
   P(422, 5) = 750*532+559;
   P(422, 6) = 750*559+561;
   P(422, 7) = 750*561+708;
   P(422, 8) = 750*708+707;
   P(422, 9) = 750*707+524;
   P(423, 0) = 750*524+526;
   P(423, 1) = 750*526+553;
   P(423, 2) = 750*553+556;
   P(423, 3) = 750*556+554;
   P(423, 4) = 750*554+557;
   P(423, 5) = 750*557+558;
   P(423, 6) = 750*558+561;
   P(423, 7) = 750*561+708;
   P(423, 8) = 750*708+707;
   P(423, 9) = 750*707+524;
   P(424, 0) = 750*524+526;
   P(424, 1) = 750*526+553;
   P(424, 2) = 750*553+555;
   P(424, 3) = 750*555+702;
   P(424, 4) = 750*702+705;
   P(424, 5) = 750*705+703;
   P(424, 6) = 750*703+706;
   P(424, 7) = 750*706+704;
   P(424, 8) = 750*704+707;
   P(424, 9) = 750*707+524;
   P(425, 0) = 750*530+533;
   P(425, 1) = 750*533+534;
   P(425, 2) = 750*534+537;
   P(425, 3) = 750*537+535;
   P(425, 4) = 750*535+538;
   P(425, 5) = 750*538+565;
   P(425, 6) = 750*565+567;
   P(425, 7) = 750*567+714;
   P(425, 8) = 750*714+713;
   P(425, 9) = 750*713+530;
   P(426, 0) = 750*530+532;
   P(426, 1) = 750*532+559;
   P(426, 2) = 750*559+562;
   P(426, 3) = 750*562+560;
   P(426, 4) = 750*560+563;
   P(426, 5) = 750*563+564;
   P(426, 6) = 750*564+567;
   P(426, 7) = 750*567+714;
   P(426, 8) = 750*714+713;
   P(426, 9) = 750*713+530;
   P(427, 0) = 750*530+532;
   P(427, 1) = 750*532+559;
   P(427, 2) = 750*559+561;
   P(427, 3) = 750*561+708;
   P(427, 4) = 750*708+711;
   P(427, 5) = 750*711+709;
   P(427, 6) = 750*709+712;
   P(427, 7) = 750*712+710;
   P(427, 8) = 750*710+713;
   P(427, 9) = 750*713+530;
   P(428, 0) = 750*536+538;
   P(428, 1) = 750*538+565;
   P(428, 2) = 750*565+568;
   P(428, 3) = 750*568+566;
   P(428, 4) = 750*566+569;
   P(428, 5) = 750*569+540;
   P(428, 6) = 750*540+543;
   P(428, 7) = 750*543+690;
   P(428, 8) = 750*690+719;
   P(428, 9) = 750*719+536;
   P(429, 0) = 750*536+538;
   P(429, 1) = 750*538+565;
   P(429, 2) = 750*565+567;
   P(429, 3) = 750*567+714;
   P(429, 4) = 750*714+717;
   P(429, 5) = 750*717+715;
   P(429, 6) = 750*715+718;
   P(429, 7) = 750*718+716;
   P(429, 8) = 750*716+719;
   P(429, 9) = 750*719+536;
   P(430, 0) = 750*540+543;
   P(430, 1) = 750*543+541;
   P(430, 2) = 750*541+544;
   P(430, 3) = 750*544+571;
   P(430, 4) = 750*571+573;
   P(430, 5) = 750*573+720;
   P(430, 6) = 750*720+749;
   P(430, 7) = 750*749+566;
   P(430, 8) = 750*566+569;
   P(430, 9) = 750*569+540;
   P(431, 0) = 750*542+545;
   P(431, 1) = 750*545+546;
   P(431, 2) = 750*546+549;
   P(431, 3) = 750*549+547;
   P(431, 4) = 750*547+550;
   P(431, 5) = 750*550+577;
   P(431, 6) = 750*577+579;
   P(431, 7) = 750*579+726;
   P(431, 8) = 750*726+725;
   P(431, 9) = 750*725+542;
   P(432, 0) = 750*542+544;
   P(432, 1) = 750*544+571;
   P(432, 2) = 750*571+574;
   P(432, 3) = 750*574+572;
   P(432, 4) = 750*572+575;
   P(432, 5) = 750*575+576;
   P(432, 6) = 750*576+579;
   P(432, 7) = 750*579+726;
   P(432, 8) = 750*726+725;
   P(432, 9) = 750*725+542;
   P(433, 0) = 750*542+544;
   P(433, 1) = 750*544+571;
   P(433, 2) = 750*571+573;
   P(433, 3) = 750*573+720;
   P(433, 4) = 750*720+723;
   P(433, 5) = 750*723+721;
   P(433, 6) = 750*721+724;
   P(433, 7) = 750*724+722;
   P(433, 8) = 750*722+725;
   P(433, 9) = 750*725+542;
   P(434, 0) = 750*548+551;
   P(434, 1) = 750*551+552;
   P(434, 2) = 750*552+555;
   P(434, 3) = 750*555+553;
   P(434, 4) = 750*553+556;
   P(434, 5) = 750*556+583;
   P(434, 6) = 750*583+585;
   P(434, 7) = 750*585+732;
   P(434, 8) = 750*732+731;
   P(434, 9) = 750*731+548;
   P(435, 0) = 750*548+550;
   P(435, 1) = 750*550+577;
   P(435, 2) = 750*577+580;
   P(435, 3) = 750*580+578;
   P(435, 4) = 750*578+581;
   P(435, 5) = 750*581+582;
   P(435, 6) = 750*582+585;
   P(435, 7) = 750*585+732;
   P(435, 8) = 750*732+731;
   P(435, 9) = 750*731+548;
   P(436, 0) = 750*548+550;
   P(436, 1) = 750*550+577;
   P(436, 2) = 750*577+579;
   P(436, 3) = 750*579+726;
   P(436, 4) = 750*726+729;
   P(436, 5) = 750*729+727;
   P(436, 6) = 750*727+730;
   P(436, 7) = 750*730+728;
   P(436, 8) = 750*728+731;
   P(436, 9) = 750*731+548;
   P(437, 0) = 750*554+557;
   P(437, 1) = 750*557+558;
   P(437, 2) = 750*558+561;
   P(437, 3) = 750*561+559;
   P(437, 4) = 750*559+562;
   P(437, 5) = 750*562+589;
   P(437, 6) = 750*589+591;
   P(437, 7) = 750*591+738;
   P(437, 8) = 750*738+737;
   P(437, 9) = 750*737+554;
   P(438, 0) = 750*554+556;
   P(438, 1) = 750*556+583;
   P(438, 2) = 750*583+586;
   P(438, 3) = 750*586+584;
   P(438, 4) = 750*584+587;
   P(438, 5) = 750*587+588;
   P(438, 6) = 750*588+591;
   P(438, 7) = 750*591+738;
   P(438, 8) = 750*738+737;
   P(438, 9) = 750*737+554;
   P(439, 0) = 750*554+556;
   P(439, 1) = 750*556+583;
   P(439, 2) = 750*583+585;
   P(439, 3) = 750*585+732;
   P(439, 4) = 750*732+735;
   P(439, 5) = 750*735+733;
   P(439, 6) = 750*733+736;
   P(439, 7) = 750*736+734;
   P(439, 8) = 750*734+737;
   P(439, 9) = 750*737+554;
   P(440, 0) = 750*560+563;
   P(440, 1) = 750*563+564;
   P(440, 2) = 750*564+567;
   P(440, 3) = 750*567+565;
   P(440, 4) = 750*565+568;
   P(440, 5) = 750*568+595;
   P(440, 6) = 750*595+597;
   P(440, 7) = 750*597+744;
   P(440, 8) = 750*744+743;
   P(440, 9) = 750*743+560;
   P(441, 0) = 750*560+562;
   P(441, 1) = 750*562+589;
   P(441, 2) = 750*589+592;
   P(441, 3) = 750*592+590;
   P(441, 4) = 750*590+593;
   P(441, 5) = 750*593+594;
   P(441, 6) = 750*594+597;
   P(441, 7) = 750*597+744;
   P(441, 8) = 750*744+743;
   P(441, 9) = 750*743+560;
   P(442, 0) = 750*560+562;
   P(442, 1) = 750*562+589;
   P(442, 2) = 750*589+591;
   P(442, 3) = 750*591+738;
   P(442, 4) = 750*738+741;
   P(442, 5) = 750*741+739;
   P(442, 6) = 750*739+742;
   P(442, 7) = 750*742+740;
   P(442, 8) = 750*740+743;
   P(442, 9) = 750*743+560;
   P(443, 0) = 750*566+568;
   P(443, 1) = 750*568+595;
   P(443, 2) = 750*595+598;
   P(443, 3) = 750*598+596;
   P(443, 4) = 750*596+599;
   P(443, 5) = 750*599+570;
   P(443, 6) = 750*570+573;
   P(443, 7) = 750*573+720;
   P(443, 8) = 750*720+749;
   P(443, 9) = 750*749+566;
   P(444, 0) = 750*566+568;
   P(444, 1) = 750*568+595;
   P(444, 2) = 750*595+597;
   P(444, 3) = 750*597+744;
   P(444, 4) = 750*744+747;
   P(444, 5) = 750*747+745;
   P(444, 6) = 750*745+748;
   P(444, 7) = 750*748+746;
   P(444, 8) = 750*746+749;
   P(444, 9) = 750*749+566;
   P(445, 0) = 750*601+604;
   P(445, 1) = 750*604+631;
   P(445, 2) = 750*631+634;
   P(445, 3) = 750*634+661;
   P(445, 4) = 750*661+664;
   P(445, 5) = 750*664+691;
   P(445, 6) = 750*691+694;
   P(445, 7) = 750*694+721;
   P(445, 8) = 750*721+724;
   P(445, 9) = 750*724+601;
   P(446, 0) = 750*607+610;
   P(446, 1) = 750*610+637;
   P(446, 2) = 750*637+640;
   P(446, 3) = 750*640+667;
   P(446, 4) = 750*667+670;
   P(446, 5) = 750*670+697;
   P(446, 6) = 750*697+700;
   P(446, 7) = 750*700+727;
   P(446, 8) = 750*727+730;
   P(446, 9) = 750*730+607;
   P(447, 0) = 750*613+616;
   P(447, 1) = 750*616+643;
   P(447, 2) = 750*643+646;
   P(447, 3) = 750*646+673;
   P(447, 4) = 750*673+676;
   P(447, 5) = 750*676+703;
   P(447, 6) = 750*703+706;
   P(447, 7) = 750*706+733;
   P(447, 8) = 750*733+736;
   P(447, 9) = 750*736+613;
   P(448, 0) = 750*619+622;
   P(448, 1) = 750*622+649;
   P(448, 2) = 750*649+652;
   P(448, 3) = 750*652+679;
   P(448, 4) = 750*679+682;
   P(448, 5) = 750*682+709;
   P(448, 6) = 750*709+712;
   P(448, 7) = 750*712+739;
   P(448, 8) = 750*739+742;
   P(448, 9) = 750*742+619;
   P(449, 0) = 750*625+628;
   P(449, 1) = 750*628+655;
   P(449, 2) = 750*655+658;
   P(449, 3) = 750*658+685;
   P(449, 4) = 750*685+688;
   P(449, 5) = 750*688+715;
   P(449, 6) = 750*715+718;
   P(449, 7) = 750*718+745;
   P(449, 8) = 750*745+748;
   P(449, 9) = 750*748+625;
	 return P;
  }
  
