#include <armadillo>
#include <complex>

using namespace arma;

sp_cx_mat def_matrix()
{
   sp_cx_mat A(512,512);
   A(0, 1) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1, 0) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(0, 5) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(5, 0) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(0, 11) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(11, 0) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1, 2) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(2, 1) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1, 390) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(390, 1) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(2, 3) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(3, 2) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(2, 423) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(423, 2) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(3, 24) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(24, 3) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(3, 36) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(36, 3) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(4, 5) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(5, 4) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(4, 7) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(7, 4) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(4, 99) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(99, 4) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(5, 6) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(6, 5) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(6, 15) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(15, 6) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(6, 129) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(129, 6) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(7, 30) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(30, 7) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(7, 226) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(226, 7) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(8, 9) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(9, 8) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(8, 13) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(13, 8) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(8, 19) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(19, 8) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(9, 10) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(10, 9) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(9, 398) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(398, 9) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(10, 11) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(11, 10) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(10, 431) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(431, 10) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(11, 44) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(44, 11) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(12, 13) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(13, 12) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(12, 15) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(15, 12) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(12, 107) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(107, 12) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(13, 14) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(14, 13) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(14, 23) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(23, 14) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(14, 137) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(137, 14) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(15, 234) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(234, 15) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(16, 17) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(17, 16) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(16, 21) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(21, 16) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(16, 27) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(27, 16) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(17, 18) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(18, 17) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(17, 406) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(406, 17) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(18, 19) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(19, 18) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(18, 439) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(439, 18) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(19, 52) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(52, 19) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(20, 21) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(21, 20) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(20, 23) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(23, 20) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(20, 115) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(115, 20) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(21, 22) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(22, 21) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(22, 31) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(31, 22) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(22, 145) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(145, 22) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(23, 242) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(242, 23) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(24, 25) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(25, 24) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(24, 29) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(29, 24) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(25, 26) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(26, 25) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(25, 414) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(414, 25) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(26, 27) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(27, 26) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(26, 447) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(447, 26) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(27, 60) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(60, 27) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(28, 29) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(29, 28) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(28, 31) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(31, 28) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(28, 123) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(123, 28) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(29, 30) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(30, 29) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(30, 153) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(153, 30) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(31, 250) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(250, 31) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(32, 33) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(33, 32) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(32, 37) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(37, 32) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(32, 43) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(43, 32) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(33, 34) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(34, 33) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(33, 422) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(422, 33) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(34, 35) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(35, 34) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(34, 455) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(455, 34) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(35, 56) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(56, 35) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(35, 68) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(68, 35) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(36, 37) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(37, 36) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(36, 39) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(39, 36) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(37, 38) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(38, 37) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(38, 47) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(47, 38) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(38, 161) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(161, 38) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(39, 62) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(62, 39) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(39, 130) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(130, 39) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(40, 41) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(41, 40) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(40, 45) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(45, 40) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(40, 51) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(51, 40) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(41, 42) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(42, 41) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(41, 430) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(430, 41) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(42, 43) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(43, 42) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(42, 463) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(463, 42) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(43, 76) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(76, 43) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(44, 45) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(45, 44) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(44, 47) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(47, 44) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(45, 46) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(46, 45) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(46, 55) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(55, 46) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(46, 169) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(169, 46) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(47, 138) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(138, 47) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(48, 49) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(49, 48) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(48, 53) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(53, 48) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(48, 59) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(59, 48) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(49, 50) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(50, 49) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(49, 438) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(438, 49) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(50, 51) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(51, 50) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(50, 471) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(471, 50) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(51, 84) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(84, 51) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(52, 53) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(53, 52) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(52, 55) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(55, 52) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(53, 54) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(54, 53) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(54, 63) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(63, 54) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(54, 177) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(177, 54) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(55, 146) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(146, 55) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(56, 57) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(57, 56) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(56, 61) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(61, 56) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(57, 58) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(58, 57) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(57, 446) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(446, 57) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(58, 59) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(59, 58) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(58, 479) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(479, 58) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(59, 92) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(92, 59) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(60, 61) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(61, 60) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(60, 63) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(63, 60) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(61, 62) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(62, 61) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(62, 185) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(185, 62) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(63, 154) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(154, 63) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(64, 65) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(65, 64) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(64, 69) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(69, 64) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(64, 75) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(75, 64) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(65, 66) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(66, 65) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(65, 454) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(454, 65) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(66, 67) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(67, 66) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(66, 487) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(487, 66) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(67, 88) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(88, 67) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(67, 100) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(100, 67) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(68, 69) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(69, 68) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(68, 71) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(71, 68) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(69, 70) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(70, 69) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(70, 79) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(79, 70) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(70, 193) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(193, 70) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(71, 94) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(94, 71) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(71, 162) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(162, 71) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(72, 73) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(73, 72) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(72, 77) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(77, 72) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(72, 83) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(83, 72) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(73, 74) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(74, 73) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(73, 462) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(462, 73) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(74, 75) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(75, 74) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(74, 495) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(495, 74) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(75, 108) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(108, 75) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(76, 77) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(77, 76) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(76, 79) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(79, 76) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(77, 78) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(78, 77) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(78, 87) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(87, 78) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(78, 201) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(201, 78) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(79, 170) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(170, 79) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(80, 81) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(81, 80) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(80, 85) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(85, 80) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(80, 91) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(91, 80) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(81, 82) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(82, 81) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(81, 470) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(470, 81) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(82, 83) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(83, 82) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(82, 503) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(503, 82) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(83, 116) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(116, 83) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(84, 85) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(85, 84) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(84, 87) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(87, 84) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(85, 86) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(86, 85) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(86, 95) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(95, 86) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(86, 209) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(209, 86) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(87, 178) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(178, 87) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(88, 89) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(89, 88) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(88, 93) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(93, 88) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(89, 90) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(90, 89) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(89, 478) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(478, 89) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(90, 91) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(91, 90) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(90, 511) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(511, 90) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(91, 124) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(124, 91) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(92, 93) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(93, 92) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(92, 95) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(95, 92) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(93, 94) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(94, 93) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(94, 217) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(217, 94) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(95, 186) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(186, 95) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(96, 97) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(97, 96) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(96, 101) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(101, 96) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(96, 107) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(107, 96) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(97, 98) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(98, 97) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(97, 486) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(486, 97) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(98, 99) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(99, 98) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(98, 391) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(391, 98) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(99, 120) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(120, 99) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(100, 101) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(101, 100) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(100, 103) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(103, 100) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(101, 102) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(102, 101) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(102, 111) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(111, 102) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(102, 225) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(225, 102) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(103, 126) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(126, 103) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(103, 194) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(194, 103) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(104, 105) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(105, 104) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(104, 109) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(109, 104) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(104, 115) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(115, 104) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(105, 106) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(106, 105) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(105, 494) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(494, 105) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(106, 107) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(107, 106) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(106, 399) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(399, 106) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(108, 109) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(109, 108) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(108, 111) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(111, 108) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(109, 110) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(110, 109) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(110, 119) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(119, 110) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(110, 233) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(233, 110) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(111, 202) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(202, 111) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(112, 113) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(113, 112) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(112, 117) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(117, 112) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(112, 123) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(123, 112) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(113, 114) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(114, 113) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(113, 502) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(502, 113) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(114, 115) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(115, 114) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(114, 407) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(407, 114) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(116, 117) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(117, 116) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(116, 119) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(119, 116) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(117, 118) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(118, 117) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(118, 127) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(127, 118) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(118, 241) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(241, 118) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(119, 210) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(210, 119) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(120, 121) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(121, 120) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(120, 125) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(125, 120) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(121, 122) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(122, 121) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(121, 510) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(510, 121) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(122, 123) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(123, 122) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(122, 415) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(415, 122) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(124, 125) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(125, 124) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(124, 127) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(127, 124) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(125, 126) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(126, 125) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(126, 249) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(249, 126) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(127, 218) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(218, 127) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(128, 129) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(129, 128) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(128, 133) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(133, 128) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(128, 139) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(139, 128) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(129, 130) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(130, 129) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(130, 131) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(131, 130) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(131, 152) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(152, 131) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(131, 164) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(164, 131) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(132, 133) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(133, 132) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(132, 135) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(135, 132) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(132, 227) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(227, 132) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(133, 134) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(134, 133) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(134, 143) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(143, 134) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(134, 257) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(257, 134) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(135, 158) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(158, 135) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(135, 354) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(354, 135) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(136, 137) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(137, 136) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(136, 141) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(141, 136) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(136, 147) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(147, 136) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(137, 138) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(138, 137) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(138, 139) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(139, 138) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(139, 172) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(172, 139) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(140, 141) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(141, 140) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(140, 143) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(143, 140) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(140, 235) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(235, 140) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(141, 142) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(142, 141) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(142, 151) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(151, 142) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(142, 265) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(265, 142) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(143, 362) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(362, 143) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(144, 145) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(145, 144) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(144, 149) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(149, 144) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(144, 155) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(155, 144) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(145, 146) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(146, 145) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(146, 147) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(147, 146) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(147, 180) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(180, 147) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(148, 149) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(149, 148) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(148, 151) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(151, 148) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(148, 243) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(243, 148) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(149, 150) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(150, 149) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(150, 159) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(159, 150) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(150, 273) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(273, 150) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(151, 370) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(370, 151) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(152, 153) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(153, 152) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(152, 157) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(157, 152) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(153, 154) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(154, 153) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(154, 155) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(155, 154) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(155, 188) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(188, 155) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(156, 157) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(157, 156) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(156, 159) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(159, 156) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(156, 251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(251, 156) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(157, 158) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(158, 157) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(158, 281) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(281, 158) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(159, 378) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(378, 159) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(160, 161) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(161, 160) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(160, 165) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(165, 160) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(160, 171) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(171, 160) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(161, 162) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(162, 161) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(162, 163) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(163, 162) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(163, 184) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(184, 163) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(163, 196) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(196, 163) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(164, 165) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(165, 164) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(164, 167) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(167, 164) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(165, 166) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(166, 165) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(166, 175) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(175, 166) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(166, 289) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(289, 166) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(167, 190) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(190, 167) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(167, 258) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(258, 167) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(168, 169) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(169, 168) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(168, 173) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(173, 168) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(168, 179) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(179, 168) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(169, 170) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(170, 169) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(170, 171) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(171, 170) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(171, 204) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(204, 171) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(172, 173) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(173, 172) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(172, 175) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(175, 172) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(173, 174) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(174, 173) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(174, 183) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(183, 174) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(174, 297) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(297, 174) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(175, 266) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(266, 175) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(176, 177) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(177, 176) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(176, 181) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(181, 176) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(176, 187) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(187, 176) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(177, 178) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(178, 177) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(178, 179) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(179, 178) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(179, 212) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(212, 179) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(180, 181) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(181, 180) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(180, 183) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(183, 180) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(181, 182) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(182, 181) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(182, 191) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(191, 182) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(182, 305) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(305, 182) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(183, 274) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(274, 183) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(184, 185) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(185, 184) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(184, 189) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(189, 184) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(185, 186) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(186, 185) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(186, 187) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(187, 186) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(187, 220) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(220, 187) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(188, 189) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(189, 188) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(188, 191) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(191, 188) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(189, 190) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(190, 189) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(190, 313) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(313, 190) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(191, 282) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(282, 191) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(192, 193) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(193, 192) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(192, 197) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(197, 192) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(192, 203) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(203, 192) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(193, 194) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(194, 193) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(194, 195) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(195, 194) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(195, 216) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(216, 195) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(195, 228) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(228, 195) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(196, 197) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(197, 196) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(196, 199) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(199, 196) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(197, 198) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(198, 197) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(198, 207) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(207, 198) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(198, 321) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(321, 198) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(199, 222) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(222, 199) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(199, 290) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(290, 199) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(200, 201) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(201, 200) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(200, 205) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(205, 200) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(200, 211) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(211, 200) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(201, 202) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(202, 201) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(202, 203) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(203, 202) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(203, 236) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(236, 203) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(204, 205) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(205, 204) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(204, 207) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(207, 204) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(205, 206) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(206, 205) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(206, 215) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(215, 206) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(206, 329) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(329, 206) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(207, 298) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(298, 207) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(208, 209) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(209, 208) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(208, 213) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(213, 208) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(208, 219) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(219, 208) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(209, 210) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(210, 209) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(210, 211) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(211, 210) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(211, 244) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(244, 211) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(212, 213) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(213, 212) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(212, 215) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(215, 212) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(213, 214) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(214, 213) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(214, 223) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(223, 214) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(214, 337) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(337, 214) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(215, 306) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(306, 215) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(216, 217) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(217, 216) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(216, 221) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(221, 216) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(217, 218) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(218, 217) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(218, 219) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(219, 218) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(219, 252) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(252, 219) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(220, 221) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(221, 220) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(220, 223) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(223, 220) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(221, 222) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(222, 221) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(222, 345) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(345, 222) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(223, 314) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(314, 223) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(224, 225) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(225, 224) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(224, 229) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(229, 224) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(224, 235) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(235, 224) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(225, 226) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(226, 225) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(226, 227) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(227, 226) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(227, 248) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(248, 227) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(228, 229) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(229, 228) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(228, 231) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(231, 228) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(229, 230) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(230, 229) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(230, 239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(239, 230) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(230, 353) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(353, 230) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(231, 254) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(254, 231) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(231, 322) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(322, 231) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(232, 233) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(233, 232) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(232, 237) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(237, 232) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(232, 243) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(243, 232) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(233, 234) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(234, 233) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(234, 235) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(235, 234) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(236, 237) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(237, 236) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(236, 239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(239, 236) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(237, 238) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(238, 237) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(238, 247) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(247, 238) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(238, 361) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(361, 238) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(239, 330) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(330, 239) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(240, 241) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(241, 240) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(240, 245) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(245, 240) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(240, 251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(251, 240) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(241, 242) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(242, 241) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(242, 243) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(243, 242) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(244, 245) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(245, 244) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(244, 247) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(247, 244) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(245, 246) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(246, 245) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(246, 255) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(255, 246) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(246, 369) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(369, 246) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(247, 338) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(338, 247) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(248, 249) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(249, 248) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(248, 253) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(253, 248) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(249, 250) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(250, 249) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(250, 251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(251, 250) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(252, 253) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(253, 252) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(252, 255) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(255, 252) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(253, 254) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(254, 253) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(254, 377) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(377, 254) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(255, 346) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(346, 255) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(256, 257) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(257, 256) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(256, 261) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(261, 256) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(256, 267) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(267, 256) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(257, 258) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(258, 257) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(258, 259) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(259, 258) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(259, 280) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(280, 259) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(259, 292) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(292, 259) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(260, 261) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(261, 260) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(260, 263) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(263, 260) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(260, 355) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(355, 260) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(261, 262) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(262, 261) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(262, 271) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(271, 262) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(262, 385) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(385, 262) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(263, 286) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(286, 263) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(263, 482) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(482, 263) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(264, 265) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(265, 264) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(264, 269) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(269, 264) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(264, 275) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(275, 264) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(265, 266) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(266, 265) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(266, 267) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(267, 266) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(267, 300) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(300, 267) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(268, 269) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(269, 268) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(268, 271) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(271, 268) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(268, 363) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(363, 268) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(269, 270) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(270, 269) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(270, 279) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(279, 270) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(270, 393) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(393, 270) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(271, 490) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(490, 271) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(272, 273) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(273, 272) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(272, 277) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(277, 272) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(272, 283) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(283, 272) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(273, 274) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(274, 273) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(274, 275) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(275, 274) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(275, 308) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(308, 275) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(276, 277) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(277, 276) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(276, 279) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(279, 276) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(276, 371) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(371, 276) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(277, 278) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(278, 277) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(278, 287) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(287, 278) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(278, 401) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(401, 278) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(279, 498) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(498, 279) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(280, 281) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(281, 280) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(280, 285) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(285, 280) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(281, 282) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(282, 281) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(282, 283) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(283, 282) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(283, 316) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(316, 283) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(284, 285) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(285, 284) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(284, 287) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(287, 284) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(284, 379) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(379, 284) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(285, 286) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(286, 285) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(286, 409) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(409, 286) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(287, 506) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(506, 287) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(288, 289) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(289, 288) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(288, 293) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(293, 288) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(288, 299) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(299, 288) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(289, 290) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(290, 289) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(290, 291) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(291, 290) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(291, 312) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(312, 291) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(291, 324) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(324, 291) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(292, 293) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(293, 292) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(292, 295) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(295, 292) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(293, 294) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(294, 293) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(294, 303) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(303, 294) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(294, 417) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(417, 294) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(295, 318) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(318, 295) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(295, 386) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(386, 295) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(296, 297) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(297, 296) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(296, 301) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(301, 296) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(296, 307) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(307, 296) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(297, 298) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(298, 297) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(298, 299) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(299, 298) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(299, 332) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(332, 299) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(300, 301) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(301, 300) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(300, 303) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(303, 300) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(301, 302) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(302, 301) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(302, 311) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(311, 302) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(302, 425) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(425, 302) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(303, 394) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(394, 303) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(304, 305) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(305, 304) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(304, 309) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(309, 304) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(304, 315) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(315, 304) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(305, 306) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(306, 305) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(306, 307) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(307, 306) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(307, 340) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(340, 307) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(308, 309) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(309, 308) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(308, 311) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(311, 308) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(309, 310) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(310, 309) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(310, 319) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(319, 310) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(310, 433) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(433, 310) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(311, 402) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(402, 311) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(312, 313) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(313, 312) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(312, 317) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(317, 312) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(313, 314) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(314, 313) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(314, 315) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(315, 314) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(315, 348) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(348, 315) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(316, 317) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(317, 316) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(316, 319) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(319, 316) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(317, 318) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(318, 317) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(318, 441) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(441, 318) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(319, 410) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(410, 319) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(320, 321) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(321, 320) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(320, 325) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(325, 320) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(320, 331) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(331, 320) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(321, 322) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(322, 321) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(322, 323) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(323, 322) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(323, 344) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(344, 323) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(323, 356) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(356, 323) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(324, 325) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(325, 324) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(324, 327) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(327, 324) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(325, 326) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(326, 325) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(326, 335) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(335, 326) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(326, 449) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(449, 326) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(327, 350) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(350, 327) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(327, 418) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(418, 327) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(328, 329) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(329, 328) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(328, 333) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(333, 328) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(328, 339) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(339, 328) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(329, 330) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(330, 329) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(330, 331) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(331, 330) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(331, 364) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(364, 331) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(332, 333) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(333, 332) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(332, 335) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(335, 332) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(333, 334) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(334, 333) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(334, 343) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(343, 334) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(334, 457) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(457, 334) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(335, 426) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(426, 335) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(336, 337) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(337, 336) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(336, 341) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(341, 336) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(336, 347) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(347, 336) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(337, 338) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(338, 337) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(338, 339) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(339, 338) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(339, 372) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(372, 339) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(340, 341) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(341, 340) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(340, 343) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(343, 340) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(341, 342) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(342, 341) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(342, 351) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(351, 342) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(342, 465) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(465, 342) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(343, 434) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(434, 343) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(344, 345) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(345, 344) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(344, 349) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(349, 344) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(345, 346) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(346, 345) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(346, 347) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(347, 346) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(347, 380) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(380, 347) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(348, 349) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(349, 348) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(348, 351) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(351, 348) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(349, 350) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(350, 349) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(350, 473) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(473, 350) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(351, 442) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(442, 351) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(352, 353) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(353, 352) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(352, 357) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(357, 352) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(352, 363) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(363, 352) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(353, 354) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(354, 353) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(354, 355) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(355, 354) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(355, 376) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(376, 355) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(356, 357) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(357, 356) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(356, 359) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(359, 356) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(357, 358) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(358, 357) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(358, 367) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(367, 358) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(358, 481) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(481, 358) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(359, 382) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(382, 359) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(359, 450) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(450, 359) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(360, 361) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(361, 360) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(360, 365) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(365, 360) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(360, 371) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(371, 360) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(361, 362) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(362, 361) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(362, 363) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(363, 362) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(364, 365) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(365, 364) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(364, 367) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(367, 364) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(365, 366) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(366, 365) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(366, 375) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(375, 366) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(366, 489) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(489, 366) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(367, 458) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(458, 367) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(368, 369) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(369, 368) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(368, 373) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(373, 368) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(368, 379) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(379, 368) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(369, 370) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(370, 369) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(370, 371) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(371, 370) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(372, 373) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(373, 372) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(372, 375) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(375, 372) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(373, 374) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(374, 373) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(374, 383) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(383, 374) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(374, 497) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(497, 374) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(375, 466) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(466, 375) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(376, 377) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(377, 376) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(376, 381) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(381, 376) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(377, 378) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(378, 377) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(378, 379) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(379, 378) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(380, 381) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(381, 380) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(380, 383) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(383, 380) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(381, 382) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(382, 381) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(382, 505) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(505, 382) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(383, 474) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(474, 383) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(384, 385) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(385, 384) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(384, 389) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(389, 384) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(384, 395) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(395, 384) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(385, 386) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(386, 385) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(386, 387) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(387, 386) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(387, 408) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(408, 387) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(387, 420) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(420, 387) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(388, 389) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(389, 388) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(388, 391) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(391, 388) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(388, 483) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(483, 388) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(389, 390) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(390, 389) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(390, 399) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(399, 390) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(391, 414) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(414, 391) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(392, 393) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(393, 392) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(392, 397) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(397, 392) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(392, 403) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(403, 392) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(393, 394) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(394, 393) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(394, 395) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(395, 394) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(395, 428) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(428, 395) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(396, 397) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(397, 396) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(396, 399) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(399, 396) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(396, 491) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(491, 396) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(397, 398) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(398, 397) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(398, 407) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(407, 398) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(400, 401) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(401, 400) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(400, 405) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(405, 400) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(400, 411) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(411, 400) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(401, 402) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(402, 401) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(402, 403) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(403, 402) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(403, 436) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(436, 403) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(404, 405) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(405, 404) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(404, 407) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(407, 404) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(404, 499) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(499, 404) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(405, 406) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(406, 405) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(406, 415) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(415, 406) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(408, 409) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(409, 408) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(408, 413) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(413, 408) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(409, 410) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(410, 409) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(410, 411) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(411, 410) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(411, 444) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(444, 411) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(412, 413) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(413, 412) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(412, 415) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(415, 412) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(412, 507) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(507, 412) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(413, 414) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(414, 413) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(416, 417) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(417, 416) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(416, 421) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(421, 416) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(416, 427) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(427, 416) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(417, 418) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(418, 417) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(418, 419) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(419, 418) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(419, 440) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(440, 419) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(419, 452) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(452, 419) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(420, 421) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(421, 420) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(420, 423) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(423, 420) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(421, 422) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(422, 421) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(422, 431) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(431, 422) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(423, 446) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(446, 423) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(424, 425) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(425, 424) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(424, 429) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(429, 424) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(424, 435) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(435, 424) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(425, 426) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(426, 425) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(426, 427) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(427, 426) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(427, 460) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(460, 427) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(428, 429) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(429, 428) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(428, 431) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(431, 428) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(429, 430) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(430, 429) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(430, 439) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(439, 430) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(432, 433) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(433, 432) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(432, 437) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(437, 432) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(432, 443) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(443, 432) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(433, 434) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(434, 433) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(434, 435) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(435, 434) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(435, 468) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(468, 435) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(436, 437) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(437, 436) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(436, 439) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(439, 436) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(437, 438) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(438, 437) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(438, 447) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(447, 438) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(440, 441) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(441, 440) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(440, 445) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(445, 440) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(441, 442) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(442, 441) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(442, 443) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(443, 442) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(443, 476) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(476, 443) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(444, 445) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(445, 444) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(444, 447) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(447, 444) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(445, 446) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(446, 445) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(448, 449) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(449, 448) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(448, 453) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(453, 448) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(448, 459) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(459, 448) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(449, 450) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(450, 449) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(450, 451) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(451, 450) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(451, 472) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(472, 451) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(451, 484) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(484, 451) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(452, 453) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(453, 452) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(452, 455) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(455, 452) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(453, 454) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(454, 453) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(454, 463) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(463, 454) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(455, 478) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(478, 455) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(456, 457) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(457, 456) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(456, 461) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(461, 456) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(456, 467) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(467, 456) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(457, 458) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(458, 457) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(458, 459) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(459, 458) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(459, 492) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(492, 459) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(460, 461) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(461, 460) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(460, 463) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(463, 460) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(461, 462) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(462, 461) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(462, 471) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(471, 462) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(464, 465) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(465, 464) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(464, 469) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(469, 464) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(464, 475) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(475, 464) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(465, 466) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(466, 465) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(466, 467) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(467, 466) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(467, 500) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(500, 467) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(468, 469) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(469, 468) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(468, 471) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(471, 468) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(469, 470) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(470, 469) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(470, 479) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(479, 470) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(472, 473) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(473, 472) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(472, 477) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(477, 472) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(473, 474) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(474, 473) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(474, 475) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(475, 474) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(475, 508) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(508, 475) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(476, 477) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(477, 476) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(476, 479) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(479, 476) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(477, 478) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(478, 477) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(480, 481) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(481, 480) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(480, 485) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(485, 480) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(480, 491) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(491, 480) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(481, 482) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(482, 481) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(482, 483) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(483, 482) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(483, 504) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(504, 483) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(484, 485) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(485, 484) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(484, 487) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(487, 484) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(485, 486) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(486, 485) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(486, 495) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(495, 486) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(487, 510) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(510, 487) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(488, 489) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(489, 488) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(488, 493) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(493, 488) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(488, 499) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(499, 488) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(489, 490) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(490, 489) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(490, 491) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(491, 490) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(492, 493) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(493, 492) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(492, 495) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(495, 492) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(493, 494) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(494, 493) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(494, 503) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(503, 494) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(496, 497) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(497, 496) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(496, 501) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(501, 496) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(496, 507) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(507, 496) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(497, 498) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(498, 497) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(498, 499) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(499, 498) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(500, 501) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(501, 500) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(500, 503) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(503, 500) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(501, 502) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(502, 501) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(502, 511) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(511, 502) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(504, 505) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(505, 504) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(504, 509) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(509, 504) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(505, 506) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(506, 505) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(506, 507) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(507, 506) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(508, 509) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(509, 508) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(508, 511) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(511, 508) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(509, 510) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(510, 509) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   return A;
}

std::vector<int> non_zeros()
{
    std::vector<int> nz;
    int coo;
    coo = 512*0 + 1;
    nz.push_back(coo);
    coo = 512*0 + 5;
    nz.push_back(coo);
    coo = 512*0 + 11;
    nz.push_back(coo);
    coo = 512*1 + 2;
    nz.push_back(coo);
    coo = 512*1 + 390;
    nz.push_back(coo);
    coo = 512*2 + 3;
    nz.push_back(coo);
    coo = 512*2 + 423;
    nz.push_back(coo);
    coo = 512*3 + 24;
    nz.push_back(coo);
    coo = 512*3 + 36;
    nz.push_back(coo);
    coo = 512*4 + 5;
    nz.push_back(coo);
    coo = 512*4 + 7;
    nz.push_back(coo);
    coo = 512*4 + 99;
    nz.push_back(coo);
    coo = 512*5 + 6;
    nz.push_back(coo);
    coo = 512*6 + 15;
    nz.push_back(coo);
    coo = 512*6 + 129;
    nz.push_back(coo);
    coo = 512*7 + 30;
    nz.push_back(coo);
    coo = 512*7 + 226;
    nz.push_back(coo);
    coo = 512*8 + 9;
    nz.push_back(coo);
    coo = 512*8 + 13;
    nz.push_back(coo);
    coo = 512*8 + 19;
    nz.push_back(coo);
    coo = 512*9 + 10;
    nz.push_back(coo);
    coo = 512*9 + 398;
    nz.push_back(coo);
    coo = 512*10 + 11;
    nz.push_back(coo);
    coo = 512*10 + 431;
    nz.push_back(coo);
    coo = 512*11 + 44;
    nz.push_back(coo);
    coo = 512*12 + 13;
    nz.push_back(coo);
    coo = 512*12 + 15;
    nz.push_back(coo);
    coo = 512*12 + 107;
    nz.push_back(coo);
    coo = 512*13 + 14;
    nz.push_back(coo);
    coo = 512*14 + 23;
    nz.push_back(coo);
    coo = 512*14 + 137;
    nz.push_back(coo);
    coo = 512*15 + 234;
    nz.push_back(coo);
    coo = 512*16 + 17;
    nz.push_back(coo);
    coo = 512*16 + 21;
    nz.push_back(coo);
    coo = 512*16 + 27;
    nz.push_back(coo);
    coo = 512*17 + 18;
    nz.push_back(coo);
    coo = 512*17 + 406;
    nz.push_back(coo);
    coo = 512*18 + 19;
    nz.push_back(coo);
    coo = 512*18 + 439;
    nz.push_back(coo);
    coo = 512*19 + 52;
    nz.push_back(coo);
    coo = 512*20 + 21;
    nz.push_back(coo);
    coo = 512*20 + 23;
    nz.push_back(coo);
    coo = 512*20 + 115;
    nz.push_back(coo);
    coo = 512*21 + 22;
    nz.push_back(coo);
    coo = 512*22 + 31;
    nz.push_back(coo);
    coo = 512*22 + 145;
    nz.push_back(coo);
    coo = 512*23 + 242;
    nz.push_back(coo);
    coo = 512*24 + 25;
    nz.push_back(coo);
    coo = 512*24 + 29;
    nz.push_back(coo);
    coo = 512*25 + 26;
    nz.push_back(coo);
    coo = 512*25 + 414;
    nz.push_back(coo);
    coo = 512*26 + 27;
    nz.push_back(coo);
    coo = 512*26 + 447;
    nz.push_back(coo);
    coo = 512*27 + 60;
    nz.push_back(coo);
    coo = 512*28 + 29;
    nz.push_back(coo);
    coo = 512*28 + 31;
    nz.push_back(coo);
    coo = 512*28 + 123;
    nz.push_back(coo);
    coo = 512*29 + 30;
    nz.push_back(coo);
    coo = 512*30 + 153;
    nz.push_back(coo);
    coo = 512*31 + 250;
    nz.push_back(coo);
    coo = 512*32 + 33;
    nz.push_back(coo);
    coo = 512*32 + 37;
    nz.push_back(coo);
    coo = 512*32 + 43;
    nz.push_back(coo);
    coo = 512*33 + 34;
    nz.push_back(coo);
    coo = 512*33 + 422;
    nz.push_back(coo);
    coo = 512*34 + 35;
    nz.push_back(coo);
    coo = 512*34 + 455;
    nz.push_back(coo);
    coo = 512*35 + 56;
    nz.push_back(coo);
    coo = 512*35 + 68;
    nz.push_back(coo);
    coo = 512*36 + 37;
    nz.push_back(coo);
    coo = 512*36 + 39;
    nz.push_back(coo);
    coo = 512*37 + 38;
    nz.push_back(coo);
    coo = 512*38 + 47;
    nz.push_back(coo);
    coo = 512*38 + 161;
    nz.push_back(coo);
    coo = 512*39 + 62;
    nz.push_back(coo);
    coo = 512*39 + 130;
    nz.push_back(coo);
    coo = 512*40 + 41;
    nz.push_back(coo);
    coo = 512*40 + 45;
    nz.push_back(coo);
    coo = 512*40 + 51;
    nz.push_back(coo);
    coo = 512*41 + 42;
    nz.push_back(coo);
    coo = 512*41 + 430;
    nz.push_back(coo);
    coo = 512*42 + 43;
    nz.push_back(coo);
    coo = 512*42 + 463;
    nz.push_back(coo);
    coo = 512*43 + 76;
    nz.push_back(coo);
    coo = 512*44 + 45;
    nz.push_back(coo);
    coo = 512*44 + 47;
    nz.push_back(coo);
    coo = 512*45 + 46;
    nz.push_back(coo);
    coo = 512*46 + 55;
    nz.push_back(coo);
    coo = 512*46 + 169;
    nz.push_back(coo);
    coo = 512*47 + 138;
    nz.push_back(coo);
    coo = 512*48 + 49;
    nz.push_back(coo);
    coo = 512*48 + 53;
    nz.push_back(coo);
    coo = 512*48 + 59;
    nz.push_back(coo);
    coo = 512*49 + 50;
    nz.push_back(coo);
    coo = 512*49 + 438;
    nz.push_back(coo);
    coo = 512*50 + 51;
    nz.push_back(coo);
    coo = 512*50 + 471;
    nz.push_back(coo);
    coo = 512*51 + 84;
    nz.push_back(coo);
    coo = 512*52 + 53;
    nz.push_back(coo);
    coo = 512*52 + 55;
    nz.push_back(coo);
    coo = 512*53 + 54;
    nz.push_back(coo);
    coo = 512*54 + 63;
    nz.push_back(coo);
    coo = 512*54 + 177;
    nz.push_back(coo);
    coo = 512*55 + 146;
    nz.push_back(coo);
    coo = 512*56 + 57;
    nz.push_back(coo);
    coo = 512*56 + 61;
    nz.push_back(coo);
    coo = 512*57 + 58;
    nz.push_back(coo);
    coo = 512*57 + 446;
    nz.push_back(coo);
    coo = 512*58 + 59;
    nz.push_back(coo);
    coo = 512*58 + 479;
    nz.push_back(coo);
    coo = 512*59 + 92;
    nz.push_back(coo);
    coo = 512*60 + 61;
    nz.push_back(coo);
    coo = 512*60 + 63;
    nz.push_back(coo);
    coo = 512*61 + 62;
    nz.push_back(coo);
    coo = 512*62 + 185;
    nz.push_back(coo);
    coo = 512*63 + 154;
    nz.push_back(coo);
    coo = 512*64 + 65;
    nz.push_back(coo);
    coo = 512*64 + 69;
    nz.push_back(coo);
    coo = 512*64 + 75;
    nz.push_back(coo);
    coo = 512*65 + 66;
    nz.push_back(coo);
    coo = 512*65 + 454;
    nz.push_back(coo);
    coo = 512*66 + 67;
    nz.push_back(coo);
    coo = 512*66 + 487;
    nz.push_back(coo);
    coo = 512*67 + 88;
    nz.push_back(coo);
    coo = 512*67 + 100;
    nz.push_back(coo);
    coo = 512*68 + 69;
    nz.push_back(coo);
    coo = 512*68 + 71;
    nz.push_back(coo);
    coo = 512*69 + 70;
    nz.push_back(coo);
    coo = 512*70 + 79;
    nz.push_back(coo);
    coo = 512*70 + 193;
    nz.push_back(coo);
    coo = 512*71 + 94;
    nz.push_back(coo);
    coo = 512*71 + 162;
    nz.push_back(coo);
    coo = 512*72 + 73;
    nz.push_back(coo);
    coo = 512*72 + 77;
    nz.push_back(coo);
    coo = 512*72 + 83;
    nz.push_back(coo);
    coo = 512*73 + 74;
    nz.push_back(coo);
    coo = 512*73 + 462;
    nz.push_back(coo);
    coo = 512*74 + 75;
    nz.push_back(coo);
    coo = 512*74 + 495;
    nz.push_back(coo);
    coo = 512*75 + 108;
    nz.push_back(coo);
    coo = 512*76 + 77;
    nz.push_back(coo);
    coo = 512*76 + 79;
    nz.push_back(coo);
    coo = 512*77 + 78;
    nz.push_back(coo);
    coo = 512*78 + 87;
    nz.push_back(coo);
    coo = 512*78 + 201;
    nz.push_back(coo);
    coo = 512*79 + 170;
    nz.push_back(coo);
    coo = 512*80 + 81;
    nz.push_back(coo);
    coo = 512*80 + 85;
    nz.push_back(coo);
    coo = 512*80 + 91;
    nz.push_back(coo);
    coo = 512*81 + 82;
    nz.push_back(coo);
    coo = 512*81 + 470;
    nz.push_back(coo);
    coo = 512*82 + 83;
    nz.push_back(coo);
    coo = 512*82 + 503;
    nz.push_back(coo);
    coo = 512*83 + 116;
    nz.push_back(coo);
    coo = 512*84 + 85;
    nz.push_back(coo);
    coo = 512*84 + 87;
    nz.push_back(coo);
    coo = 512*85 + 86;
    nz.push_back(coo);
    coo = 512*86 + 95;
    nz.push_back(coo);
    coo = 512*86 + 209;
    nz.push_back(coo);
    coo = 512*87 + 178;
    nz.push_back(coo);
    coo = 512*88 + 89;
    nz.push_back(coo);
    coo = 512*88 + 93;
    nz.push_back(coo);
    coo = 512*89 + 90;
    nz.push_back(coo);
    coo = 512*89 + 478;
    nz.push_back(coo);
    coo = 512*90 + 91;
    nz.push_back(coo);
    coo = 512*90 + 511;
    nz.push_back(coo);
    coo = 512*91 + 124;
    nz.push_back(coo);
    coo = 512*92 + 93;
    nz.push_back(coo);
    coo = 512*92 + 95;
    nz.push_back(coo);
    coo = 512*93 + 94;
    nz.push_back(coo);
    coo = 512*94 + 217;
    nz.push_back(coo);
    coo = 512*95 + 186;
    nz.push_back(coo);
    coo = 512*96 + 97;
    nz.push_back(coo);
    coo = 512*96 + 101;
    nz.push_back(coo);
    coo = 512*96 + 107;
    nz.push_back(coo);
    coo = 512*97 + 98;
    nz.push_back(coo);
    coo = 512*97 + 486;
    nz.push_back(coo);
    coo = 512*98 + 99;
    nz.push_back(coo);
    coo = 512*98 + 391;
    nz.push_back(coo);
    coo = 512*99 + 120;
    nz.push_back(coo);
    coo = 512*100 + 101;
    nz.push_back(coo);
    coo = 512*100 + 103;
    nz.push_back(coo);
    coo = 512*101 + 102;
    nz.push_back(coo);
    coo = 512*102 + 111;
    nz.push_back(coo);
    coo = 512*102 + 225;
    nz.push_back(coo);
    coo = 512*103 + 126;
    nz.push_back(coo);
    coo = 512*103 + 194;
    nz.push_back(coo);
    coo = 512*104 + 105;
    nz.push_back(coo);
    coo = 512*104 + 109;
    nz.push_back(coo);
    coo = 512*104 + 115;
    nz.push_back(coo);
    coo = 512*105 + 106;
    nz.push_back(coo);
    coo = 512*105 + 494;
    nz.push_back(coo);
    coo = 512*106 + 107;
    nz.push_back(coo);
    coo = 512*106 + 399;
    nz.push_back(coo);
    coo = 512*108 + 109;
    nz.push_back(coo);
    coo = 512*108 + 111;
    nz.push_back(coo);
    coo = 512*109 + 110;
    nz.push_back(coo);
    coo = 512*110 + 119;
    nz.push_back(coo);
    coo = 512*110 + 233;
    nz.push_back(coo);
    coo = 512*111 + 202;
    nz.push_back(coo);
    coo = 512*112 + 113;
    nz.push_back(coo);
    coo = 512*112 + 117;
    nz.push_back(coo);
    coo = 512*112 + 123;
    nz.push_back(coo);
    coo = 512*113 + 114;
    nz.push_back(coo);
    coo = 512*113 + 502;
    nz.push_back(coo);
    coo = 512*114 + 115;
    nz.push_back(coo);
    coo = 512*114 + 407;
    nz.push_back(coo);
    coo = 512*116 + 117;
    nz.push_back(coo);
    coo = 512*116 + 119;
    nz.push_back(coo);
    coo = 512*117 + 118;
    nz.push_back(coo);
    coo = 512*118 + 127;
    nz.push_back(coo);
    coo = 512*118 + 241;
    nz.push_back(coo);
    coo = 512*119 + 210;
    nz.push_back(coo);
    coo = 512*120 + 121;
    nz.push_back(coo);
    coo = 512*120 + 125;
    nz.push_back(coo);
    coo = 512*121 + 122;
    nz.push_back(coo);
    coo = 512*121 + 510;
    nz.push_back(coo);
    coo = 512*122 + 123;
    nz.push_back(coo);
    coo = 512*122 + 415;
    nz.push_back(coo);
    coo = 512*124 + 125;
    nz.push_back(coo);
    coo = 512*124 + 127;
    nz.push_back(coo);
    coo = 512*125 + 126;
    nz.push_back(coo);
    coo = 512*126 + 249;
    nz.push_back(coo);
    coo = 512*127 + 218;
    nz.push_back(coo);
    coo = 512*128 + 129;
    nz.push_back(coo);
    coo = 512*128 + 133;
    nz.push_back(coo);
    coo = 512*128 + 139;
    nz.push_back(coo);
    coo = 512*129 + 130;
    nz.push_back(coo);
    coo = 512*130 + 131;
    nz.push_back(coo);
    coo = 512*131 + 152;
    nz.push_back(coo);
    coo = 512*131 + 164;
    nz.push_back(coo);
    coo = 512*132 + 133;
    nz.push_back(coo);
    coo = 512*132 + 135;
    nz.push_back(coo);
    coo = 512*132 + 227;
    nz.push_back(coo);
    coo = 512*133 + 134;
    nz.push_back(coo);
    coo = 512*134 + 143;
    nz.push_back(coo);
    coo = 512*134 + 257;
    nz.push_back(coo);
    coo = 512*135 + 158;
    nz.push_back(coo);
    coo = 512*135 + 354;
    nz.push_back(coo);
    coo = 512*136 + 137;
    nz.push_back(coo);
    coo = 512*136 + 141;
    nz.push_back(coo);
    coo = 512*136 + 147;
    nz.push_back(coo);
    coo = 512*137 + 138;
    nz.push_back(coo);
    coo = 512*138 + 139;
    nz.push_back(coo);
    coo = 512*139 + 172;
    nz.push_back(coo);
    coo = 512*140 + 141;
    nz.push_back(coo);
    coo = 512*140 + 143;
    nz.push_back(coo);
    coo = 512*140 + 235;
    nz.push_back(coo);
    coo = 512*141 + 142;
    nz.push_back(coo);
    coo = 512*142 + 151;
    nz.push_back(coo);
    coo = 512*142 + 265;
    nz.push_back(coo);
    coo = 512*143 + 362;
    nz.push_back(coo);
    coo = 512*144 + 145;
    nz.push_back(coo);
    coo = 512*144 + 149;
    nz.push_back(coo);
    coo = 512*144 + 155;
    nz.push_back(coo);
    coo = 512*145 + 146;
    nz.push_back(coo);
    coo = 512*146 + 147;
    nz.push_back(coo);
    coo = 512*147 + 180;
    nz.push_back(coo);
    coo = 512*148 + 149;
    nz.push_back(coo);
    coo = 512*148 + 151;
    nz.push_back(coo);
    coo = 512*148 + 243;
    nz.push_back(coo);
    coo = 512*149 + 150;
    nz.push_back(coo);
    coo = 512*150 + 159;
    nz.push_back(coo);
    coo = 512*150 + 273;
    nz.push_back(coo);
    coo = 512*151 + 370;
    nz.push_back(coo);
    coo = 512*152 + 153;
    nz.push_back(coo);
    coo = 512*152 + 157;
    nz.push_back(coo);
    coo = 512*153 + 154;
    nz.push_back(coo);
    coo = 512*154 + 155;
    nz.push_back(coo);
    coo = 512*155 + 188;
    nz.push_back(coo);
    coo = 512*156 + 157;
    nz.push_back(coo);
    coo = 512*156 + 159;
    nz.push_back(coo);
    coo = 512*156 + 251;
    nz.push_back(coo);
    coo = 512*157 + 158;
    nz.push_back(coo);
    coo = 512*158 + 281;
    nz.push_back(coo);
    coo = 512*159 + 378;
    nz.push_back(coo);
    coo = 512*160 + 161;
    nz.push_back(coo);
    coo = 512*160 + 165;
    nz.push_back(coo);
    coo = 512*160 + 171;
    nz.push_back(coo);
    coo = 512*161 + 162;
    nz.push_back(coo);
    coo = 512*162 + 163;
    nz.push_back(coo);
    coo = 512*163 + 184;
    nz.push_back(coo);
    coo = 512*163 + 196;
    nz.push_back(coo);
    coo = 512*164 + 165;
    nz.push_back(coo);
    coo = 512*164 + 167;
    nz.push_back(coo);
    coo = 512*165 + 166;
    nz.push_back(coo);
    coo = 512*166 + 175;
    nz.push_back(coo);
    coo = 512*166 + 289;
    nz.push_back(coo);
    coo = 512*167 + 190;
    nz.push_back(coo);
    coo = 512*167 + 258;
    nz.push_back(coo);
    coo = 512*168 + 169;
    nz.push_back(coo);
    coo = 512*168 + 173;
    nz.push_back(coo);
    coo = 512*168 + 179;
    nz.push_back(coo);
    coo = 512*169 + 170;
    nz.push_back(coo);
    coo = 512*170 + 171;
    nz.push_back(coo);
    coo = 512*171 + 204;
    nz.push_back(coo);
    coo = 512*172 + 173;
    nz.push_back(coo);
    coo = 512*172 + 175;
    nz.push_back(coo);
    coo = 512*173 + 174;
    nz.push_back(coo);
    coo = 512*174 + 183;
    nz.push_back(coo);
    coo = 512*174 + 297;
    nz.push_back(coo);
    coo = 512*175 + 266;
    nz.push_back(coo);
    coo = 512*176 + 177;
    nz.push_back(coo);
    coo = 512*176 + 181;
    nz.push_back(coo);
    coo = 512*176 + 187;
    nz.push_back(coo);
    coo = 512*177 + 178;
    nz.push_back(coo);
    coo = 512*178 + 179;
    nz.push_back(coo);
    coo = 512*179 + 212;
    nz.push_back(coo);
    coo = 512*180 + 181;
    nz.push_back(coo);
    coo = 512*180 + 183;
    nz.push_back(coo);
    coo = 512*181 + 182;
    nz.push_back(coo);
    coo = 512*182 + 191;
    nz.push_back(coo);
    coo = 512*182 + 305;
    nz.push_back(coo);
    coo = 512*183 + 274;
    nz.push_back(coo);
    coo = 512*184 + 185;
    nz.push_back(coo);
    coo = 512*184 + 189;
    nz.push_back(coo);
    coo = 512*185 + 186;
    nz.push_back(coo);
    coo = 512*186 + 187;
    nz.push_back(coo);
    coo = 512*187 + 220;
    nz.push_back(coo);
    coo = 512*188 + 189;
    nz.push_back(coo);
    coo = 512*188 + 191;
    nz.push_back(coo);
    coo = 512*189 + 190;
    nz.push_back(coo);
    coo = 512*190 + 313;
    nz.push_back(coo);
    coo = 512*191 + 282;
    nz.push_back(coo);
    coo = 512*192 + 193;
    nz.push_back(coo);
    coo = 512*192 + 197;
    nz.push_back(coo);
    coo = 512*192 + 203;
    nz.push_back(coo);
    coo = 512*193 + 194;
    nz.push_back(coo);
    coo = 512*194 + 195;
    nz.push_back(coo);
    coo = 512*195 + 216;
    nz.push_back(coo);
    coo = 512*195 + 228;
    nz.push_back(coo);
    coo = 512*196 + 197;
    nz.push_back(coo);
    coo = 512*196 + 199;
    nz.push_back(coo);
    coo = 512*197 + 198;
    nz.push_back(coo);
    coo = 512*198 + 207;
    nz.push_back(coo);
    coo = 512*198 + 321;
    nz.push_back(coo);
    coo = 512*199 + 222;
    nz.push_back(coo);
    coo = 512*199 + 290;
    nz.push_back(coo);
    coo = 512*200 + 201;
    nz.push_back(coo);
    coo = 512*200 + 205;
    nz.push_back(coo);
    coo = 512*200 + 211;
    nz.push_back(coo);
    coo = 512*201 + 202;
    nz.push_back(coo);
    coo = 512*202 + 203;
    nz.push_back(coo);
    coo = 512*203 + 236;
    nz.push_back(coo);
    coo = 512*204 + 205;
    nz.push_back(coo);
    coo = 512*204 + 207;
    nz.push_back(coo);
    coo = 512*205 + 206;
    nz.push_back(coo);
    coo = 512*206 + 215;
    nz.push_back(coo);
    coo = 512*206 + 329;
    nz.push_back(coo);
    coo = 512*207 + 298;
    nz.push_back(coo);
    coo = 512*208 + 209;
    nz.push_back(coo);
    coo = 512*208 + 213;
    nz.push_back(coo);
    coo = 512*208 + 219;
    nz.push_back(coo);
    coo = 512*209 + 210;
    nz.push_back(coo);
    coo = 512*210 + 211;
    nz.push_back(coo);
    coo = 512*211 + 244;
    nz.push_back(coo);
    coo = 512*212 + 213;
    nz.push_back(coo);
    coo = 512*212 + 215;
    nz.push_back(coo);
    coo = 512*213 + 214;
    nz.push_back(coo);
    coo = 512*214 + 223;
    nz.push_back(coo);
    coo = 512*214 + 337;
    nz.push_back(coo);
    coo = 512*215 + 306;
    nz.push_back(coo);
    coo = 512*216 + 217;
    nz.push_back(coo);
    coo = 512*216 + 221;
    nz.push_back(coo);
    coo = 512*217 + 218;
    nz.push_back(coo);
    coo = 512*218 + 219;
    nz.push_back(coo);
    coo = 512*219 + 252;
    nz.push_back(coo);
    coo = 512*220 + 221;
    nz.push_back(coo);
    coo = 512*220 + 223;
    nz.push_back(coo);
    coo = 512*221 + 222;
    nz.push_back(coo);
    coo = 512*222 + 345;
    nz.push_back(coo);
    coo = 512*223 + 314;
    nz.push_back(coo);
    coo = 512*224 + 225;
    nz.push_back(coo);
    coo = 512*224 + 229;
    nz.push_back(coo);
    coo = 512*224 + 235;
    nz.push_back(coo);
    coo = 512*225 + 226;
    nz.push_back(coo);
    coo = 512*226 + 227;
    nz.push_back(coo);
    coo = 512*227 + 248;
    nz.push_back(coo);
    coo = 512*228 + 229;
    nz.push_back(coo);
    coo = 512*228 + 231;
    nz.push_back(coo);
    coo = 512*229 + 230;
    nz.push_back(coo);
    coo = 512*230 + 239;
    nz.push_back(coo);
    coo = 512*230 + 353;
    nz.push_back(coo);
    coo = 512*231 + 254;
    nz.push_back(coo);
    coo = 512*231 + 322;
    nz.push_back(coo);
    coo = 512*232 + 233;
    nz.push_back(coo);
    coo = 512*232 + 237;
    nz.push_back(coo);
    coo = 512*232 + 243;
    nz.push_back(coo);
    coo = 512*233 + 234;
    nz.push_back(coo);
    coo = 512*234 + 235;
    nz.push_back(coo);
    coo = 512*236 + 237;
    nz.push_back(coo);
    coo = 512*236 + 239;
    nz.push_back(coo);
    coo = 512*237 + 238;
    nz.push_back(coo);
    coo = 512*238 + 247;
    nz.push_back(coo);
    coo = 512*238 + 361;
    nz.push_back(coo);
    coo = 512*239 + 330;
    nz.push_back(coo);
    coo = 512*240 + 241;
    nz.push_back(coo);
    coo = 512*240 + 245;
    nz.push_back(coo);
    coo = 512*240 + 251;
    nz.push_back(coo);
    coo = 512*241 + 242;
    nz.push_back(coo);
    coo = 512*242 + 243;
    nz.push_back(coo);
    coo = 512*244 + 245;
    nz.push_back(coo);
    coo = 512*244 + 247;
    nz.push_back(coo);
    coo = 512*245 + 246;
    nz.push_back(coo);
    coo = 512*246 + 255;
    nz.push_back(coo);
    coo = 512*246 + 369;
    nz.push_back(coo);
    coo = 512*247 + 338;
    nz.push_back(coo);
    coo = 512*248 + 249;
    nz.push_back(coo);
    coo = 512*248 + 253;
    nz.push_back(coo);
    coo = 512*249 + 250;
    nz.push_back(coo);
    coo = 512*250 + 251;
    nz.push_back(coo);
    coo = 512*252 + 253;
    nz.push_back(coo);
    coo = 512*252 + 255;
    nz.push_back(coo);
    coo = 512*253 + 254;
    nz.push_back(coo);
    coo = 512*254 + 377;
    nz.push_back(coo);
    coo = 512*255 + 346;
    nz.push_back(coo);
    coo = 512*256 + 257;
    nz.push_back(coo);
    coo = 512*256 + 261;
    nz.push_back(coo);
    coo = 512*256 + 267;
    nz.push_back(coo);
    coo = 512*257 + 258;
    nz.push_back(coo);
    coo = 512*258 + 259;
    nz.push_back(coo);
    coo = 512*259 + 280;
    nz.push_back(coo);
    coo = 512*259 + 292;
    nz.push_back(coo);
    coo = 512*260 + 261;
    nz.push_back(coo);
    coo = 512*260 + 263;
    nz.push_back(coo);
    coo = 512*260 + 355;
    nz.push_back(coo);
    coo = 512*261 + 262;
    nz.push_back(coo);
    coo = 512*262 + 271;
    nz.push_back(coo);
    coo = 512*262 + 385;
    nz.push_back(coo);
    coo = 512*263 + 286;
    nz.push_back(coo);
    coo = 512*263 + 482;
    nz.push_back(coo);
    coo = 512*264 + 265;
    nz.push_back(coo);
    coo = 512*264 + 269;
    nz.push_back(coo);
    coo = 512*264 + 275;
    nz.push_back(coo);
    coo = 512*265 + 266;
    nz.push_back(coo);
    coo = 512*266 + 267;
    nz.push_back(coo);
    coo = 512*267 + 300;
    nz.push_back(coo);
    coo = 512*268 + 269;
    nz.push_back(coo);
    coo = 512*268 + 271;
    nz.push_back(coo);
    coo = 512*268 + 363;
    nz.push_back(coo);
    coo = 512*269 + 270;
    nz.push_back(coo);
    coo = 512*270 + 279;
    nz.push_back(coo);
    coo = 512*270 + 393;
    nz.push_back(coo);
    coo = 512*271 + 490;
    nz.push_back(coo);
    coo = 512*272 + 273;
    nz.push_back(coo);
    coo = 512*272 + 277;
    nz.push_back(coo);
    coo = 512*272 + 283;
    nz.push_back(coo);
    coo = 512*273 + 274;
    nz.push_back(coo);
    coo = 512*274 + 275;
    nz.push_back(coo);
    coo = 512*275 + 308;
    nz.push_back(coo);
    coo = 512*276 + 277;
    nz.push_back(coo);
    coo = 512*276 + 279;
    nz.push_back(coo);
    coo = 512*276 + 371;
    nz.push_back(coo);
    coo = 512*277 + 278;
    nz.push_back(coo);
    coo = 512*278 + 287;
    nz.push_back(coo);
    coo = 512*278 + 401;
    nz.push_back(coo);
    coo = 512*279 + 498;
    nz.push_back(coo);
    coo = 512*280 + 281;
    nz.push_back(coo);
    coo = 512*280 + 285;
    nz.push_back(coo);
    coo = 512*281 + 282;
    nz.push_back(coo);
    coo = 512*282 + 283;
    nz.push_back(coo);
    coo = 512*283 + 316;
    nz.push_back(coo);
    coo = 512*284 + 285;
    nz.push_back(coo);
    coo = 512*284 + 287;
    nz.push_back(coo);
    coo = 512*284 + 379;
    nz.push_back(coo);
    coo = 512*285 + 286;
    nz.push_back(coo);
    coo = 512*286 + 409;
    nz.push_back(coo);
    coo = 512*287 + 506;
    nz.push_back(coo);
    coo = 512*288 + 289;
    nz.push_back(coo);
    coo = 512*288 + 293;
    nz.push_back(coo);
    coo = 512*288 + 299;
    nz.push_back(coo);
    coo = 512*289 + 290;
    nz.push_back(coo);
    coo = 512*290 + 291;
    nz.push_back(coo);
    coo = 512*291 + 312;
    nz.push_back(coo);
    coo = 512*291 + 324;
    nz.push_back(coo);
    coo = 512*292 + 293;
    nz.push_back(coo);
    coo = 512*292 + 295;
    nz.push_back(coo);
    coo = 512*293 + 294;
    nz.push_back(coo);
    coo = 512*294 + 303;
    nz.push_back(coo);
    coo = 512*294 + 417;
    nz.push_back(coo);
    coo = 512*295 + 318;
    nz.push_back(coo);
    coo = 512*295 + 386;
    nz.push_back(coo);
    coo = 512*296 + 297;
    nz.push_back(coo);
    coo = 512*296 + 301;
    nz.push_back(coo);
    coo = 512*296 + 307;
    nz.push_back(coo);
    coo = 512*297 + 298;
    nz.push_back(coo);
    coo = 512*298 + 299;
    nz.push_back(coo);
    coo = 512*299 + 332;
    nz.push_back(coo);
    coo = 512*300 + 301;
    nz.push_back(coo);
    coo = 512*300 + 303;
    nz.push_back(coo);
    coo = 512*301 + 302;
    nz.push_back(coo);
    coo = 512*302 + 311;
    nz.push_back(coo);
    coo = 512*302 + 425;
    nz.push_back(coo);
    coo = 512*303 + 394;
    nz.push_back(coo);
    coo = 512*304 + 305;
    nz.push_back(coo);
    coo = 512*304 + 309;
    nz.push_back(coo);
    coo = 512*304 + 315;
    nz.push_back(coo);
    coo = 512*305 + 306;
    nz.push_back(coo);
    coo = 512*306 + 307;
    nz.push_back(coo);
    coo = 512*307 + 340;
    nz.push_back(coo);
    coo = 512*308 + 309;
    nz.push_back(coo);
    coo = 512*308 + 311;
    nz.push_back(coo);
    coo = 512*309 + 310;
    nz.push_back(coo);
    coo = 512*310 + 319;
    nz.push_back(coo);
    coo = 512*310 + 433;
    nz.push_back(coo);
    coo = 512*311 + 402;
    nz.push_back(coo);
    coo = 512*312 + 313;
    nz.push_back(coo);
    coo = 512*312 + 317;
    nz.push_back(coo);
    coo = 512*313 + 314;
    nz.push_back(coo);
    coo = 512*314 + 315;
    nz.push_back(coo);
    coo = 512*315 + 348;
    nz.push_back(coo);
    coo = 512*316 + 317;
    nz.push_back(coo);
    coo = 512*316 + 319;
    nz.push_back(coo);
    coo = 512*317 + 318;
    nz.push_back(coo);
    coo = 512*318 + 441;
    nz.push_back(coo);
    coo = 512*319 + 410;
    nz.push_back(coo);
    coo = 512*320 + 321;
    nz.push_back(coo);
    coo = 512*320 + 325;
    nz.push_back(coo);
    coo = 512*320 + 331;
    nz.push_back(coo);
    coo = 512*321 + 322;
    nz.push_back(coo);
    coo = 512*322 + 323;
    nz.push_back(coo);
    coo = 512*323 + 344;
    nz.push_back(coo);
    coo = 512*323 + 356;
    nz.push_back(coo);
    coo = 512*324 + 325;
    nz.push_back(coo);
    coo = 512*324 + 327;
    nz.push_back(coo);
    coo = 512*325 + 326;
    nz.push_back(coo);
    coo = 512*326 + 335;
    nz.push_back(coo);
    coo = 512*326 + 449;
    nz.push_back(coo);
    coo = 512*327 + 350;
    nz.push_back(coo);
    coo = 512*327 + 418;
    nz.push_back(coo);
    coo = 512*328 + 329;
    nz.push_back(coo);
    coo = 512*328 + 333;
    nz.push_back(coo);
    coo = 512*328 + 339;
    nz.push_back(coo);
    coo = 512*329 + 330;
    nz.push_back(coo);
    coo = 512*330 + 331;
    nz.push_back(coo);
    coo = 512*331 + 364;
    nz.push_back(coo);
    coo = 512*332 + 333;
    nz.push_back(coo);
    coo = 512*332 + 335;
    nz.push_back(coo);
    coo = 512*333 + 334;
    nz.push_back(coo);
    coo = 512*334 + 343;
    nz.push_back(coo);
    coo = 512*334 + 457;
    nz.push_back(coo);
    coo = 512*335 + 426;
    nz.push_back(coo);
    coo = 512*336 + 337;
    nz.push_back(coo);
    coo = 512*336 + 341;
    nz.push_back(coo);
    coo = 512*336 + 347;
    nz.push_back(coo);
    coo = 512*337 + 338;
    nz.push_back(coo);
    coo = 512*338 + 339;
    nz.push_back(coo);
    coo = 512*339 + 372;
    nz.push_back(coo);
    coo = 512*340 + 341;
    nz.push_back(coo);
    coo = 512*340 + 343;
    nz.push_back(coo);
    coo = 512*341 + 342;
    nz.push_back(coo);
    coo = 512*342 + 351;
    nz.push_back(coo);
    coo = 512*342 + 465;
    nz.push_back(coo);
    coo = 512*343 + 434;
    nz.push_back(coo);
    coo = 512*344 + 345;
    nz.push_back(coo);
    coo = 512*344 + 349;
    nz.push_back(coo);
    coo = 512*345 + 346;
    nz.push_back(coo);
    coo = 512*346 + 347;
    nz.push_back(coo);
    coo = 512*347 + 380;
    nz.push_back(coo);
    coo = 512*348 + 349;
    nz.push_back(coo);
    coo = 512*348 + 351;
    nz.push_back(coo);
    coo = 512*349 + 350;
    nz.push_back(coo);
    coo = 512*350 + 473;
    nz.push_back(coo);
    coo = 512*351 + 442;
    nz.push_back(coo);
    coo = 512*352 + 353;
    nz.push_back(coo);
    coo = 512*352 + 357;
    nz.push_back(coo);
    coo = 512*352 + 363;
    nz.push_back(coo);
    coo = 512*353 + 354;
    nz.push_back(coo);
    coo = 512*354 + 355;
    nz.push_back(coo);
    coo = 512*355 + 376;
    nz.push_back(coo);
    coo = 512*356 + 357;
    nz.push_back(coo);
    coo = 512*356 + 359;
    nz.push_back(coo);
    coo = 512*357 + 358;
    nz.push_back(coo);
    coo = 512*358 + 367;
    nz.push_back(coo);
    coo = 512*358 + 481;
    nz.push_back(coo);
    coo = 512*359 + 382;
    nz.push_back(coo);
    coo = 512*359 + 450;
    nz.push_back(coo);
    coo = 512*360 + 361;
    nz.push_back(coo);
    coo = 512*360 + 365;
    nz.push_back(coo);
    coo = 512*360 + 371;
    nz.push_back(coo);
    coo = 512*361 + 362;
    nz.push_back(coo);
    coo = 512*362 + 363;
    nz.push_back(coo);
    coo = 512*364 + 365;
    nz.push_back(coo);
    coo = 512*364 + 367;
    nz.push_back(coo);
    coo = 512*365 + 366;
    nz.push_back(coo);
    coo = 512*366 + 375;
    nz.push_back(coo);
    coo = 512*366 + 489;
    nz.push_back(coo);
    coo = 512*367 + 458;
    nz.push_back(coo);
    coo = 512*368 + 369;
    nz.push_back(coo);
    coo = 512*368 + 373;
    nz.push_back(coo);
    coo = 512*368 + 379;
    nz.push_back(coo);
    coo = 512*369 + 370;
    nz.push_back(coo);
    coo = 512*370 + 371;
    nz.push_back(coo);
    coo = 512*372 + 373;
    nz.push_back(coo);
    coo = 512*372 + 375;
    nz.push_back(coo);
    coo = 512*373 + 374;
    nz.push_back(coo);
    coo = 512*374 + 383;
    nz.push_back(coo);
    coo = 512*374 + 497;
    nz.push_back(coo);
    coo = 512*375 + 466;
    nz.push_back(coo);
    coo = 512*376 + 377;
    nz.push_back(coo);
    coo = 512*376 + 381;
    nz.push_back(coo);
    coo = 512*377 + 378;
    nz.push_back(coo);
    coo = 512*378 + 379;
    nz.push_back(coo);
    coo = 512*380 + 381;
    nz.push_back(coo);
    coo = 512*380 + 383;
    nz.push_back(coo);
    coo = 512*381 + 382;
    nz.push_back(coo);
    coo = 512*382 + 505;
    nz.push_back(coo);
    coo = 512*383 + 474;
    nz.push_back(coo);
    coo = 512*384 + 385;
    nz.push_back(coo);
    coo = 512*384 + 389;
    nz.push_back(coo);
    coo = 512*384 + 395;
    nz.push_back(coo);
    coo = 512*385 + 386;
    nz.push_back(coo);
    coo = 512*386 + 387;
    nz.push_back(coo);
    coo = 512*387 + 408;
    nz.push_back(coo);
    coo = 512*387 + 420;
    nz.push_back(coo);
    coo = 512*388 + 389;
    nz.push_back(coo);
    coo = 512*388 + 391;
    nz.push_back(coo);
    coo = 512*388 + 483;
    nz.push_back(coo);
    coo = 512*389 + 390;
    nz.push_back(coo);
    coo = 512*390 + 399;
    nz.push_back(coo);
    coo = 512*391 + 414;
    nz.push_back(coo);
    coo = 512*392 + 393;
    nz.push_back(coo);
    coo = 512*392 + 397;
    nz.push_back(coo);
    coo = 512*392 + 403;
    nz.push_back(coo);
    coo = 512*393 + 394;
    nz.push_back(coo);
    coo = 512*394 + 395;
    nz.push_back(coo);
    coo = 512*395 + 428;
    nz.push_back(coo);
    coo = 512*396 + 397;
    nz.push_back(coo);
    coo = 512*396 + 399;
    nz.push_back(coo);
    coo = 512*396 + 491;
    nz.push_back(coo);
    coo = 512*397 + 398;
    nz.push_back(coo);
    coo = 512*398 + 407;
    nz.push_back(coo);
    coo = 512*400 + 401;
    nz.push_back(coo);
    coo = 512*400 + 405;
    nz.push_back(coo);
    coo = 512*400 + 411;
    nz.push_back(coo);
    coo = 512*401 + 402;
    nz.push_back(coo);
    coo = 512*402 + 403;
    nz.push_back(coo);
    coo = 512*403 + 436;
    nz.push_back(coo);
    coo = 512*404 + 405;
    nz.push_back(coo);
    coo = 512*404 + 407;
    nz.push_back(coo);
    coo = 512*404 + 499;
    nz.push_back(coo);
    coo = 512*405 + 406;
    nz.push_back(coo);
    coo = 512*406 + 415;
    nz.push_back(coo);
    coo = 512*408 + 409;
    nz.push_back(coo);
    coo = 512*408 + 413;
    nz.push_back(coo);
    coo = 512*409 + 410;
    nz.push_back(coo);
    coo = 512*410 + 411;
    nz.push_back(coo);
    coo = 512*411 + 444;
    nz.push_back(coo);
    coo = 512*412 + 413;
    nz.push_back(coo);
    coo = 512*412 + 415;
    nz.push_back(coo);
    coo = 512*412 + 507;
    nz.push_back(coo);
    coo = 512*413 + 414;
    nz.push_back(coo);
    coo = 512*416 + 417;
    nz.push_back(coo);
    coo = 512*416 + 421;
    nz.push_back(coo);
    coo = 512*416 + 427;
    nz.push_back(coo);
    coo = 512*417 + 418;
    nz.push_back(coo);
    coo = 512*418 + 419;
    nz.push_back(coo);
    coo = 512*419 + 440;
    nz.push_back(coo);
    coo = 512*419 + 452;
    nz.push_back(coo);
    coo = 512*420 + 421;
    nz.push_back(coo);
    coo = 512*420 + 423;
    nz.push_back(coo);
    coo = 512*421 + 422;
    nz.push_back(coo);
    coo = 512*422 + 431;
    nz.push_back(coo);
    coo = 512*423 + 446;
    nz.push_back(coo);
    coo = 512*424 + 425;
    nz.push_back(coo);
    coo = 512*424 + 429;
    nz.push_back(coo);
    coo = 512*424 + 435;
    nz.push_back(coo);
    coo = 512*425 + 426;
    nz.push_back(coo);
    coo = 512*426 + 427;
    nz.push_back(coo);
    coo = 512*427 + 460;
    nz.push_back(coo);
    coo = 512*428 + 429;
    nz.push_back(coo);
    coo = 512*428 + 431;
    nz.push_back(coo);
    coo = 512*429 + 430;
    nz.push_back(coo);
    coo = 512*430 + 439;
    nz.push_back(coo);
    coo = 512*432 + 433;
    nz.push_back(coo);
    coo = 512*432 + 437;
    nz.push_back(coo);
    coo = 512*432 + 443;
    nz.push_back(coo);
    coo = 512*433 + 434;
    nz.push_back(coo);
    coo = 512*434 + 435;
    nz.push_back(coo);
    coo = 512*435 + 468;
    nz.push_back(coo);
    coo = 512*436 + 437;
    nz.push_back(coo);
    coo = 512*436 + 439;
    nz.push_back(coo);
    coo = 512*437 + 438;
    nz.push_back(coo);
    coo = 512*438 + 447;
    nz.push_back(coo);
    coo = 512*440 + 441;
    nz.push_back(coo);
    coo = 512*440 + 445;
    nz.push_back(coo);
    coo = 512*441 + 442;
    nz.push_back(coo);
    coo = 512*442 + 443;
    nz.push_back(coo);
    coo = 512*443 + 476;
    nz.push_back(coo);
    coo = 512*444 + 445;
    nz.push_back(coo);
    coo = 512*444 + 447;
    nz.push_back(coo);
    coo = 512*445 + 446;
    nz.push_back(coo);
    coo = 512*448 + 449;
    nz.push_back(coo);
    coo = 512*448 + 453;
    nz.push_back(coo);
    coo = 512*448 + 459;
    nz.push_back(coo);
    coo = 512*449 + 450;
    nz.push_back(coo);
    coo = 512*450 + 451;
    nz.push_back(coo);
    coo = 512*451 + 472;
    nz.push_back(coo);
    coo = 512*451 + 484;
    nz.push_back(coo);
    coo = 512*452 + 453;
    nz.push_back(coo);
    coo = 512*452 + 455;
    nz.push_back(coo);
    coo = 512*453 + 454;
    nz.push_back(coo);
    coo = 512*454 + 463;
    nz.push_back(coo);
    coo = 512*455 + 478;
    nz.push_back(coo);
    coo = 512*456 + 457;
    nz.push_back(coo);
    coo = 512*456 + 461;
    nz.push_back(coo);
    coo = 512*456 + 467;
    nz.push_back(coo);
    coo = 512*457 + 458;
    nz.push_back(coo);
    coo = 512*458 + 459;
    nz.push_back(coo);
    coo = 512*459 + 492;
    nz.push_back(coo);
    coo = 512*460 + 461;
    nz.push_back(coo);
    coo = 512*460 + 463;
    nz.push_back(coo);
    coo = 512*461 + 462;
    nz.push_back(coo);
    coo = 512*462 + 471;
    nz.push_back(coo);
    coo = 512*464 + 465;
    nz.push_back(coo);
    coo = 512*464 + 469;
    nz.push_back(coo);
    coo = 512*464 + 475;
    nz.push_back(coo);
    coo = 512*465 + 466;
    nz.push_back(coo);
    coo = 512*466 + 467;
    nz.push_back(coo);
    coo = 512*467 + 500;
    nz.push_back(coo);
    coo = 512*468 + 469;
    nz.push_back(coo);
    coo = 512*468 + 471;
    nz.push_back(coo);
    coo = 512*469 + 470;
    nz.push_back(coo);
    coo = 512*470 + 479;
    nz.push_back(coo);
    coo = 512*472 + 473;
    nz.push_back(coo);
    coo = 512*472 + 477;
    nz.push_back(coo);
    coo = 512*473 + 474;
    nz.push_back(coo);
    coo = 512*474 + 475;
    nz.push_back(coo);
    coo = 512*475 + 508;
    nz.push_back(coo);
    coo = 512*476 + 477;
    nz.push_back(coo);
    coo = 512*476 + 479;
    nz.push_back(coo);
    coo = 512*477 + 478;
    nz.push_back(coo);
    coo = 512*480 + 481;
    nz.push_back(coo);
    coo = 512*480 + 485;
    nz.push_back(coo);
    coo = 512*480 + 491;
    nz.push_back(coo);
    coo = 512*481 + 482;
    nz.push_back(coo);
    coo = 512*482 + 483;
    nz.push_back(coo);
    coo = 512*483 + 504;
    nz.push_back(coo);
    coo = 512*484 + 485;
    nz.push_back(coo);
    coo = 512*484 + 487;
    nz.push_back(coo);
    coo = 512*485 + 486;
    nz.push_back(coo);
    coo = 512*486 + 495;
    nz.push_back(coo);
    coo = 512*487 + 510;
    nz.push_back(coo);
    coo = 512*488 + 489;
    nz.push_back(coo);
    coo = 512*488 + 493;
    nz.push_back(coo);
    coo = 512*488 + 499;
    nz.push_back(coo);
    coo = 512*489 + 490;
    nz.push_back(coo);
    coo = 512*490 + 491;
    nz.push_back(coo);
    coo = 512*492 + 493;
    nz.push_back(coo);
    coo = 512*492 + 495;
    nz.push_back(coo);
    coo = 512*493 + 494;
    nz.push_back(coo);
    coo = 512*494 + 503;
    nz.push_back(coo);
    coo = 512*496 + 497;
    nz.push_back(coo);
    coo = 512*496 + 501;
    nz.push_back(coo);
    coo = 512*496 + 507;
    nz.push_back(coo);
    coo = 512*497 + 498;
    nz.push_back(coo);
    coo = 512*498 + 499;
    nz.push_back(coo);
    coo = 512*500 + 501;
    nz.push_back(coo);
    coo = 512*500 + 503;
    nz.push_back(coo);
    coo = 512*501 + 502;
    nz.push_back(coo);
    coo = 512*502 + 511;
    nz.push_back(coo);
    coo = 512*504 + 505;
    nz.push_back(coo);
    coo = 512*504 + 509;
    nz.push_back(coo);
    coo = 512*505 + 506;
    nz.push_back(coo);
    coo = 512*506 + 507;
    nz.push_back(coo);
    coo = 512*508 + 509;
    nz.push_back(coo);
    coo = 512*508 + 511;
    nz.push_back(coo);
    coo = 512*509 + 510;
    nz.push_back(coo);
    return nz;
}

Mat<int> create_plaquettes()
{
   Mat<int> P(512,10);
   P(0, 0) = 512*0+1;
   P(0, 1) = 512*1+2;
   P(0, 2) = 512*2+3;
   P(0, 3) = 512*3+36;
   P(0, 4) = 512*36+37;
   P(0, 5) = 512*37+38;
   P(0, 6) = 512*38+47;
   P(0, 7) = 512*47+44;
   P(0, 8) = 512*44+11;
   P(0, 9) = 512*11+0;
   P(1, 0) = 512*0+1;
   P(1, 1) = 512*1+2;
   P(1, 2) = 512*2+3;
   P(1, 3) = 512*3+36;
   P(1, 4) = 512*36+39;
   P(1, 5) = 512*39+130;
   P(1, 6) = 512*130+129;
   P(1, 7) = 512*129+6;
   P(1, 8) = 512*6+5;
   P(1, 9) = 512*5+0;
   P(2, 0) = 512*0+1;
   P(2, 1) = 512*1+2;
   P(2, 2) = 512*2+3;
   P(2, 3) = 512*3+24;
   P(2, 4) = 512*24+29;
   P(2, 5) = 512*29+30;
   P(2, 6) = 512*30+7;
   P(2, 7) = 512*7+4;
   P(2, 8) = 512*4+5;
   P(2, 9) = 512*5+0;
   P(3, 0) = 512*0+1;
   P(3, 1) = 512*1+2;
   P(3, 2) = 512*2+423;
   P(3, 3) = 512*423+420;
   P(3, 4) = 512*420+421;
   P(3, 5) = 512*421+422;
   P(3, 6) = 512*422+431;
   P(3, 7) = 512*431+10;
   P(3, 8) = 512*10+11;
   P(3, 9) = 512*11+0;
   P(4, 0) = 512*0+1;
   P(4, 1) = 512*1+390;
   P(4, 2) = 512*390+389;
   P(4, 3) = 512*389+388;
   P(4, 4) = 512*388+391;
   P(4, 5) = 512*391+98;
   P(4, 6) = 512*98+99;
   P(4, 7) = 512*99+4;
   P(4, 8) = 512*4+5;
   P(4, 9) = 512*5+0;
   P(5, 0) = 512*0+1;
   P(5, 1) = 512*1+390;
   P(5, 2) = 512*390+389;
   P(5, 3) = 512*389+384;
   P(5, 4) = 512*384+395;
   P(5, 5) = 512*395+428;
   P(5, 6) = 512*428+431;
   P(5, 7) = 512*431+10;
   P(5, 8) = 512*10+11;
   P(5, 9) = 512*11+0;
   P(6, 0) = 512*0+1;
   P(6, 1) = 512*1+390;
   P(6, 2) = 512*390+399;
   P(6, 3) = 512*399+396;
   P(6, 4) = 512*396+397;
   P(6, 5) = 512*397+398;
   P(6, 6) = 512*398+9;
   P(6, 7) = 512*9+10;
   P(6, 8) = 512*10+11;
   P(6, 9) = 512*11+0;
   P(7, 0) = 512*0+1;
   P(7, 1) = 512*1+390;
   P(7, 2) = 512*390+399;
   P(7, 3) = 512*399+106;
   P(7, 4) = 512*106+107;
   P(7, 5) = 512*107+12;
   P(7, 6) = 512*12+15;
   P(7, 7) = 512*15+6;
   P(7, 8) = 512*6+5;
   P(7, 9) = 512*5+0;
   P(8, 0) = 512*0+5;
   P(8, 1) = 512*5+6;
   P(8, 2) = 512*6+15;
   P(8, 3) = 512*15+12;
   P(8, 4) = 512*12+13;
   P(8, 5) = 512*13+8;
   P(8, 6) = 512*8+9;
   P(8, 7) = 512*9+10;
   P(8, 8) = 512*10+11;
   P(8, 9) = 512*11+0;
   P(9, 0) = 512*0+5;
   P(9, 1) = 512*5+6;
   P(9, 2) = 512*6+129;
   P(9, 3) = 512*129+128;
   P(9, 4) = 512*128+139;
   P(9, 5) = 512*139+138;
   P(9, 6) = 512*138+47;
   P(9, 7) = 512*47+44;
   P(9, 8) = 512*44+11;
   P(9, 9) = 512*11+0;
   P(10, 0) = 512*1+2;
   P(10, 1) = 512*2+3;
   P(10, 2) = 512*3+24;
   P(10, 3) = 512*24+25;
   P(10, 4) = 512*25+414;
   P(10, 5) = 512*414+391;
   P(10, 6) = 512*391+388;
   P(10, 7) = 512*388+389;
   P(10, 8) = 512*389+390;
   P(10, 9) = 512*390+1;
   P(11, 0) = 512*1+2;
   P(11, 1) = 512*2+423;
   P(11, 2) = 512*423+420;
   P(11, 3) = 512*420+387;
   P(11, 4) = 512*387+386;
   P(11, 5) = 512*386+385;
   P(11, 6) = 512*385+384;
   P(11, 7) = 512*384+389;
   P(11, 8) = 512*389+390;
   P(11, 9) = 512*390+1;
   P(12, 0) = 512*2+3;
   P(12, 1) = 512*3+36;
   P(12, 2) = 512*36+37;
   P(12, 3) = 512*37+32;
   P(12, 4) = 512*32+33;
   P(12, 5) = 512*33+422;
   P(12, 6) = 512*422+421;
   P(12, 7) = 512*421+420;
   P(12, 8) = 512*420+423;
   P(12, 9) = 512*423+2;
   P(13, 0) = 512*2+3;
   P(13, 1) = 512*3+36;
   P(13, 2) = 512*36+39;
   P(13, 3) = 512*39+62;
   P(13, 4) = 512*62+61;
   P(13, 5) = 512*61+56;
   P(13, 6) = 512*56+57;
   P(13, 7) = 512*57+446;
   P(13, 8) = 512*446+423;
   P(13, 9) = 512*423+2;
   P(14, 0) = 512*2+3;
   P(14, 1) = 512*3+24;
   P(14, 2) = 512*24+25;
   P(14, 3) = 512*25+26;
   P(14, 4) = 512*26+447;
   P(14, 5) = 512*447+444;
   P(14, 6) = 512*444+445;
   P(14, 7) = 512*445+446;
   P(14, 8) = 512*446+423;
   P(14, 9) = 512*423+2;
   P(15, 0) = 512*2+3;
   P(15, 1) = 512*3+24;
   P(15, 2) = 512*24+25;
   P(15, 3) = 512*25+414;
   P(15, 4) = 512*414+413;
   P(15, 5) = 512*413+408;
   P(15, 6) = 512*408+387;
   P(15, 7) = 512*387+420;
   P(15, 8) = 512*420+423;
   P(15, 9) = 512*423+2;
   P(16, 0) = 512*3+36;
   P(16, 1) = 512*36+39;
   P(16, 2) = 512*39+62;
   P(16, 3) = 512*62+61;
   P(16, 4) = 512*61+60;
   P(16, 5) = 512*60+27;
   P(16, 6) = 512*27+26;
   P(16, 7) = 512*26+25;
   P(16, 8) = 512*25+24;
   P(16, 9) = 512*24+3;
   P(17, 0) = 512*3+36;
   P(17, 1) = 512*36+39;
   P(17, 2) = 512*39+130;
   P(17, 3) = 512*130+131;
   P(17, 4) = 512*131+152;
   P(17, 5) = 512*152+153;
   P(17, 6) = 512*153+30;
   P(17, 7) = 512*30+29;
   P(17, 8) = 512*29+24;
   P(17, 9) = 512*24+3;
   P(18, 0) = 512*4+5;
   P(18, 1) = 512*5+6;
   P(18, 2) = 512*6+15;
   P(18, 3) = 512*15+12;
   P(18, 4) = 512*12+107;
   P(18, 5) = 512*107+96;
   P(18, 6) = 512*96+97;
   P(18, 7) = 512*97+98;
   P(18, 8) = 512*98+99;
   P(18, 9) = 512*99+4;
   P(19, 0) = 512*4+5;
   P(19, 1) = 512*5+6;
   P(19, 2) = 512*6+15;
   P(19, 3) = 512*15+234;
   P(19, 4) = 512*234+235;
   P(19, 5) = 512*235+224;
   P(19, 6) = 512*224+225;
   P(19, 7) = 512*225+226;
   P(19, 8) = 512*226+7;
   P(19, 9) = 512*7+4;
   P(20, 0) = 512*4+5;
   P(20, 1) = 512*5+6;
   P(20, 2) = 512*6+129;
   P(20, 3) = 512*129+128;
   P(20, 4) = 512*128+133;
   P(20, 5) = 512*133+132;
   P(20, 6) = 512*132+227;
   P(20, 7) = 512*227+226;
   P(20, 8) = 512*226+7;
   P(20, 9) = 512*7+4;
   P(21, 0) = 512*4+5;
   P(21, 1) = 512*5+6;
   P(21, 2) = 512*6+129;
   P(21, 3) = 512*129+130;
   P(21, 4) = 512*130+131;
   P(21, 5) = 512*131+152;
   P(21, 6) = 512*152+153;
   P(21, 7) = 512*153+30;
   P(21, 8) = 512*30+7;
   P(21, 9) = 512*7+4;
   P(22, 0) = 512*4+99;
   P(22, 1) = 512*99+98;
   P(22, 2) = 512*98+97;
   P(22, 3) = 512*97+96;
   P(22, 4) = 512*96+101;
   P(22, 5) = 512*101+102;
   P(22, 6) = 512*102+225;
   P(22, 7) = 512*225+226;
   P(22, 8) = 512*226+7;
   P(22, 9) = 512*7+4;
   P(23, 0) = 512*4+99;
   P(23, 1) = 512*99+98;
   P(23, 2) = 512*98+391;
   P(23, 3) = 512*391+414;
   P(23, 4) = 512*414+25;
   P(23, 5) = 512*25+24;
   P(23, 6) = 512*24+29;
   P(23, 7) = 512*29+30;
   P(23, 8) = 512*30+7;
   P(23, 9) = 512*7+4;
   P(24, 0) = 512*4+99;
   P(24, 1) = 512*99+120;
   P(24, 2) = 512*120+121;
   P(24, 3) = 512*121+122;
   P(24, 4) = 512*122+123;
   P(24, 5) = 512*123+28;
   P(24, 6) = 512*28+29;
   P(24, 7) = 512*29+30;
   P(24, 8) = 512*30+7;
   P(24, 9) = 512*7+4;
   P(25, 0) = 512*4+99;
   P(25, 1) = 512*99+120;
   P(25, 2) = 512*120+125;
   P(25, 3) = 512*125+126;
   P(25, 4) = 512*126+249;
   P(25, 5) = 512*249+248;
   P(25, 6) = 512*248+227;
   P(25, 7) = 512*227+226;
   P(25, 8) = 512*226+7;
   P(25, 9) = 512*7+4;
   P(26, 0) = 512*6+15;
   P(26, 1) = 512*15+12;
   P(26, 2) = 512*12+13;
   P(26, 3) = 512*13+14;
   P(26, 4) = 512*14+137;
   P(26, 5) = 512*137+138;
   P(26, 6) = 512*138+139;
   P(26, 7) = 512*139+128;
   P(26, 8) = 512*128+129;
   P(26, 9) = 512*129+6;
   P(27, 0) = 512*6+15;
   P(27, 1) = 512*15+234;
   P(27, 2) = 512*234+235;
   P(27, 3) = 512*235+140;
   P(27, 4) = 512*140+143;
   P(27, 5) = 512*143+134;
   P(27, 6) = 512*134+133;
   P(27, 7) = 512*133+128;
   P(27, 8) = 512*128+129;
   P(27, 9) = 512*129+6;
   P(28, 0) = 512*7+30;
   P(28, 1) = 512*30+29;
   P(28, 2) = 512*29+28;
   P(28, 3) = 512*28+31;
   P(28, 4) = 512*31+250;
   P(28, 5) = 512*250+249;
   P(28, 6) = 512*249+248;
   P(28, 7) = 512*248+227;
   P(28, 8) = 512*227+226;
   P(28, 9) = 512*226+7;
   P(29, 0) = 512*7+30;
   P(29, 1) = 512*30+153;
   P(29, 2) = 512*153+152;
   P(29, 3) = 512*152+157;
   P(29, 4) = 512*157+158;
   P(29, 5) = 512*158+135;
   P(29, 6) = 512*135+132;
   P(29, 7) = 512*132+227;
   P(29, 8) = 512*227+226;
   P(29, 9) = 512*226+7;
   P(30, 0) = 512*8+9;
   P(30, 1) = 512*9+10;
   P(30, 2) = 512*10+11;
   P(30, 3) = 512*11+44;
   P(30, 4) = 512*44+45;
   P(30, 5) = 512*45+46;
   P(30, 6) = 512*46+55;
   P(30, 7) = 512*55+52;
   P(30, 8) = 512*52+19;
   P(30, 9) = 512*19+8;
   P(31, 0) = 512*8+9;
   P(31, 1) = 512*9+10;
   P(31, 2) = 512*10+11;
   P(31, 3) = 512*11+44;
   P(31, 4) = 512*44+47;
   P(31, 5) = 512*47+138;
   P(31, 6) = 512*138+137;
   P(31, 7) = 512*137+14;
   P(31, 8) = 512*14+13;
   P(31, 9) = 512*13+8;
   P(32, 0) = 512*8+9;
   P(32, 1) = 512*9+10;
   P(32, 2) = 512*10+431;
   P(32, 3) = 512*431+428;
   P(32, 4) = 512*428+429;
   P(32, 5) = 512*429+430;
   P(32, 6) = 512*430+439;
   P(32, 7) = 512*439+18;
   P(32, 8) = 512*18+19;
   P(32, 9) = 512*19+8;
   P(33, 0) = 512*8+9;
   P(33, 1) = 512*9+398;
   P(33, 2) = 512*398+397;
   P(33, 3) = 512*397+396;
   P(33, 4) = 512*396+399;
   P(33, 5) = 512*399+106;
   P(33, 6) = 512*106+107;
   P(33, 7) = 512*107+12;
   P(33, 8) = 512*12+13;
   P(33, 9) = 512*13+8;
   P(34, 0) = 512*8+9;
   P(34, 1) = 512*9+398;
   P(34, 2) = 512*398+397;
   P(34, 3) = 512*397+392;
   P(34, 4) = 512*392+403;
   P(34, 5) = 512*403+436;
   P(34, 6) = 512*436+439;
   P(34, 7) = 512*439+18;
   P(34, 8) = 512*18+19;
   P(34, 9) = 512*19+8;
   P(35, 0) = 512*8+9;
   P(35, 1) = 512*9+398;
   P(35, 2) = 512*398+407;
   P(35, 3) = 512*407+404;
   P(35, 4) = 512*404+405;
   P(35, 5) = 512*405+406;
   P(35, 6) = 512*406+17;
   P(35, 7) = 512*17+18;
   P(35, 8) = 512*18+19;
   P(35, 9) = 512*19+8;
   P(36, 0) = 512*8+9;
   P(36, 1) = 512*9+398;
   P(36, 2) = 512*398+407;
   P(36, 3) = 512*407+114;
   P(36, 4) = 512*114+115;
   P(36, 5) = 512*115+20;
   P(36, 6) = 512*20+23;
   P(36, 7) = 512*23+14;
   P(36, 8) = 512*14+13;
   P(36, 9) = 512*13+8;
   P(37, 0) = 512*8+13;
   P(37, 1) = 512*13+14;
   P(37, 2) = 512*14+23;
   P(37, 3) = 512*23+20;
   P(37, 4) = 512*20+21;
   P(37, 5) = 512*21+16;
   P(37, 6) = 512*16+17;
   P(37, 7) = 512*17+18;
   P(37, 8) = 512*18+19;
   P(37, 9) = 512*19+8;
   P(38, 0) = 512*8+13;
   P(38, 1) = 512*13+14;
   P(38, 2) = 512*14+137;
   P(38, 3) = 512*137+136;
   P(38, 4) = 512*136+147;
   P(38, 5) = 512*147+146;
   P(38, 6) = 512*146+55;
   P(38, 7) = 512*55+52;
   P(38, 8) = 512*52+19;
   P(38, 9) = 512*19+8;
   P(39, 0) = 512*9+10;
   P(39, 1) = 512*10+431;
   P(39, 2) = 512*431+428;
   P(39, 3) = 512*428+395;
   P(39, 4) = 512*395+394;
   P(39, 5) = 512*394+393;
   P(39, 6) = 512*393+392;
   P(39, 7) = 512*392+397;
   P(39, 8) = 512*397+398;
   P(39, 9) = 512*398+9;
   P(40, 0) = 512*10+11;
   P(40, 1) = 512*11+44;
   P(40, 2) = 512*44+45;
   P(40, 3) = 512*45+40;
   P(40, 4) = 512*40+41;
   P(40, 5) = 512*41+430;
   P(40, 6) = 512*430+429;
   P(40, 7) = 512*429+428;
   P(40, 8) = 512*428+431;
   P(40, 9) = 512*431+10;
   P(41, 0) = 512*10+11;
   P(41, 1) = 512*11+44;
   P(41, 2) = 512*44+47;
   P(41, 3) = 512*47+38;
   P(41, 4) = 512*38+37;
   P(41, 5) = 512*37+32;
   P(41, 6) = 512*32+33;
   P(41, 7) = 512*33+422;
   P(41, 8) = 512*422+431;
   P(41, 9) = 512*431+10;
   P(42, 0) = 512*12+13;
   P(42, 1) = 512*13+14;
   P(42, 2) = 512*14+23;
   P(42, 3) = 512*23+20;
   P(42, 4) = 512*20+115;
   P(42, 5) = 512*115+104;
   P(42, 6) = 512*104+105;
   P(42, 7) = 512*105+106;
   P(42, 8) = 512*106+107;
   P(42, 9) = 512*107+12;
   P(43, 0) = 512*12+13;
   P(43, 1) = 512*13+14;
   P(43, 2) = 512*14+23;
   P(43, 3) = 512*23+242;
   P(43, 4) = 512*242+243;
   P(43, 5) = 512*243+232;
   P(43, 6) = 512*232+233;
   P(43, 7) = 512*233+234;
   P(43, 8) = 512*234+15;
   P(43, 9) = 512*15+12;
   P(44, 0) = 512*12+13;
   P(44, 1) = 512*13+14;
   P(44, 2) = 512*14+137;
   P(44, 3) = 512*137+136;
   P(44, 4) = 512*136+141;
   P(44, 5) = 512*141+140;
   P(44, 6) = 512*140+235;
   P(44, 7) = 512*235+234;
   P(44, 8) = 512*234+15;
   P(44, 9) = 512*15+12;
   P(45, 0) = 512*12+107;
   P(45, 1) = 512*107+106;
   P(45, 2) = 512*106+105;
   P(45, 3) = 512*105+104;
   P(45, 4) = 512*104+109;
   P(45, 5) = 512*109+110;
   P(45, 6) = 512*110+233;
   P(45, 7) = 512*233+234;
   P(45, 8) = 512*234+15;
   P(45, 9) = 512*15+12;
   P(46, 0) = 512*12+107;
   P(46, 1) = 512*107+96;
   P(46, 2) = 512*96+101;
   P(46, 3) = 512*101+102;
   P(46, 4) = 512*102+225;
   P(46, 5) = 512*225+224;
   P(46, 6) = 512*224+235;
   P(46, 7) = 512*235+234;
   P(46, 8) = 512*234+15;
   P(46, 9) = 512*15+12;
   P(47, 0) = 512*14+23;
   P(47, 1) = 512*23+20;
   P(47, 2) = 512*20+21;
   P(47, 3) = 512*21+22;
   P(47, 4) = 512*22+145;
   P(47, 5) = 512*145+146;
   P(47, 6) = 512*146+147;
   P(47, 7) = 512*147+136;
   P(47, 8) = 512*136+137;
   P(47, 9) = 512*137+14;
   P(48, 0) = 512*14+23;
   P(48, 1) = 512*23+242;
   P(48, 2) = 512*242+243;
   P(48, 3) = 512*243+148;
   P(48, 4) = 512*148+151;
   P(48, 5) = 512*151+142;
   P(48, 6) = 512*142+141;
   P(48, 7) = 512*141+136;
   P(48, 8) = 512*136+137;
   P(48, 9) = 512*137+14;
   P(49, 0) = 512*16+17;
   P(49, 1) = 512*17+18;
   P(49, 2) = 512*18+19;
   P(49, 3) = 512*19+52;
   P(49, 4) = 512*52+53;
   P(49, 5) = 512*53+54;
   P(49, 6) = 512*54+63;
   P(49, 7) = 512*63+60;
   P(49, 8) = 512*60+27;
   P(49, 9) = 512*27+16;
   P(50, 0) = 512*16+17;
   P(50, 1) = 512*17+18;
   P(50, 2) = 512*18+19;
   P(50, 3) = 512*19+52;
   P(50, 4) = 512*52+55;
   P(50, 5) = 512*55+146;
   P(50, 6) = 512*146+145;
   P(50, 7) = 512*145+22;
   P(50, 8) = 512*22+21;
   P(50, 9) = 512*21+16;
   P(51, 0) = 512*16+17;
   P(51, 1) = 512*17+18;
   P(51, 2) = 512*18+439;
   P(51, 3) = 512*439+436;
   P(51, 4) = 512*436+437;
   P(51, 5) = 512*437+438;
   P(51, 6) = 512*438+447;
   P(51, 7) = 512*447+26;
   P(51, 8) = 512*26+27;
   P(51, 9) = 512*27+16;
   P(52, 0) = 512*16+17;
   P(52, 1) = 512*17+406;
   P(52, 2) = 512*406+405;
   P(52, 3) = 512*405+404;
   P(52, 4) = 512*404+407;
   P(52, 5) = 512*407+114;
   P(52, 6) = 512*114+115;
   P(52, 7) = 512*115+20;
   P(52, 8) = 512*20+21;
   P(52, 9) = 512*21+16;
   P(53, 0) = 512*16+17;
   P(53, 1) = 512*17+406;
   P(53, 2) = 512*406+405;
   P(53, 3) = 512*405+400;
   P(53, 4) = 512*400+411;
   P(53, 5) = 512*411+444;
   P(53, 6) = 512*444+447;
   P(53, 7) = 512*447+26;
   P(53, 8) = 512*26+27;
   P(53, 9) = 512*27+16;
   P(54, 0) = 512*16+17;
   P(54, 1) = 512*17+406;
   P(54, 2) = 512*406+415;
   P(54, 3) = 512*415+412;
   P(54, 4) = 512*412+413;
   P(54, 5) = 512*413+414;
   P(54, 6) = 512*414+25;
   P(54, 7) = 512*25+26;
   P(54, 8) = 512*26+27;
   P(54, 9) = 512*27+16;
   P(55, 0) = 512*16+17;
   P(55, 1) = 512*17+406;
   P(55, 2) = 512*406+415;
   P(55, 3) = 512*415+122;
   P(55, 4) = 512*122+123;
   P(55, 5) = 512*123+28;
   P(55, 6) = 512*28+31;
   P(55, 7) = 512*31+22;
   P(55, 8) = 512*22+21;
   P(55, 9) = 512*21+16;
   P(56, 0) = 512*16+21;
   P(56, 1) = 512*21+22;
   P(56, 2) = 512*22+31;
   P(56, 3) = 512*31+28;
   P(56, 4) = 512*28+29;
   P(56, 5) = 512*29+24;
   P(56, 6) = 512*24+25;
   P(56, 7) = 512*25+26;
   P(56, 8) = 512*26+27;
   P(56, 9) = 512*27+16;
   P(57, 0) = 512*16+21;
   P(57, 1) = 512*21+22;
   P(57, 2) = 512*22+145;
   P(57, 3) = 512*145+144;
   P(57, 4) = 512*144+155;
   P(57, 5) = 512*155+154;
   P(57, 6) = 512*154+63;
   P(57, 7) = 512*63+60;
   P(57, 8) = 512*60+27;
   P(57, 9) = 512*27+16;
   P(58, 0) = 512*17+18;
   P(58, 1) = 512*18+439;
   P(58, 2) = 512*439+436;
   P(58, 3) = 512*436+403;
   P(58, 4) = 512*403+402;
   P(58, 5) = 512*402+401;
   P(58, 6) = 512*401+400;
   P(58, 7) = 512*400+405;
   P(58, 8) = 512*405+406;
   P(58, 9) = 512*406+17;
   P(59, 0) = 512*18+19;
   P(59, 1) = 512*19+52;
   P(59, 2) = 512*52+53;
   P(59, 3) = 512*53+48;
   P(59, 4) = 512*48+49;
   P(59, 5) = 512*49+438;
   P(59, 6) = 512*438+437;
   P(59, 7) = 512*437+436;
   P(59, 8) = 512*436+439;
   P(59, 9) = 512*439+18;
   P(60, 0) = 512*18+19;
   P(60, 1) = 512*19+52;
   P(60, 2) = 512*52+55;
   P(60, 3) = 512*55+46;
   P(60, 4) = 512*46+45;
   P(60, 5) = 512*45+40;
   P(60, 6) = 512*40+41;
   P(60, 7) = 512*41+430;
   P(60, 8) = 512*430+439;
   P(60, 9) = 512*439+18;
   P(61, 0) = 512*20+21;
   P(61, 1) = 512*21+22;
   P(61, 2) = 512*22+31;
   P(61, 3) = 512*31+28;
   P(61, 4) = 512*28+123;
   P(61, 5) = 512*123+112;
   P(61, 6) = 512*112+113;
   P(61, 7) = 512*113+114;
   P(61, 8) = 512*114+115;
   P(61, 9) = 512*115+20;
   P(62, 0) = 512*20+21;
   P(62, 1) = 512*21+22;
   P(62, 2) = 512*22+31;
   P(62, 3) = 512*31+250;
   P(62, 4) = 512*250+251;
   P(62, 5) = 512*251+240;
   P(62, 6) = 512*240+241;
   P(62, 7) = 512*241+242;
   P(62, 8) = 512*242+23;
   P(62, 9) = 512*23+20;
   P(63, 0) = 512*20+21;
   P(63, 1) = 512*21+22;
   P(63, 2) = 512*22+145;
   P(63, 3) = 512*145+144;
   P(63, 4) = 512*144+149;
   P(63, 5) = 512*149+148;
   P(63, 6) = 512*148+243;
   P(63, 7) = 512*243+242;
   P(63, 8) = 512*242+23;
   P(63, 9) = 512*23+20;
   P(64, 0) = 512*20+115;
   P(64, 1) = 512*115+114;
   P(64, 2) = 512*114+113;
   P(64, 3) = 512*113+112;
   P(64, 4) = 512*112+117;
   P(64, 5) = 512*117+118;
   P(64, 6) = 512*118+241;
   P(64, 7) = 512*241+242;
   P(64, 8) = 512*242+23;
   P(64, 9) = 512*23+20;
   P(65, 0) = 512*20+115;
   P(65, 1) = 512*115+104;
   P(65, 2) = 512*104+109;
   P(65, 3) = 512*109+110;
   P(65, 4) = 512*110+233;
   P(65, 5) = 512*233+232;
   P(65, 6) = 512*232+243;
   P(65, 7) = 512*243+242;
   P(65, 8) = 512*242+23;
   P(65, 9) = 512*23+20;
   P(66, 0) = 512*22+31;
   P(66, 1) = 512*31+28;
   P(66, 2) = 512*28+29;
   P(66, 3) = 512*29+30;
   P(66, 4) = 512*30+153;
   P(66, 5) = 512*153+154;
   P(66, 6) = 512*154+155;
   P(66, 7) = 512*155+144;
   P(66, 8) = 512*144+145;
   P(66, 9) = 512*145+22;
   P(67, 0) = 512*22+31;
   P(67, 1) = 512*31+250;
   P(67, 2) = 512*250+251;
   P(67, 3) = 512*251+156;
   P(67, 4) = 512*156+159;
   P(67, 5) = 512*159+150;
   P(67, 6) = 512*150+149;
   P(67, 7) = 512*149+144;
   P(67, 8) = 512*144+145;
   P(67, 9) = 512*145+22;
   P(68, 0) = 512*24+25;
   P(68, 1) = 512*25+26;
   P(68, 2) = 512*26+27;
   P(68, 3) = 512*27+60;
   P(68, 4) = 512*60+63;
   P(68, 5) = 512*63+154;
   P(68, 6) = 512*154+153;
   P(68, 7) = 512*153+30;
   P(68, 8) = 512*30+29;
   P(68, 9) = 512*29+24;
   P(69, 0) = 512*24+25;
   P(69, 1) = 512*25+414;
   P(69, 2) = 512*414+413;
   P(69, 3) = 512*413+412;
   P(69, 4) = 512*412+415;
   P(69, 5) = 512*415+122;
   P(69, 6) = 512*122+123;
   P(69, 7) = 512*123+28;
   P(69, 8) = 512*28+29;
   P(69, 9) = 512*29+24;
   P(70, 0) = 512*25+26;
   P(70, 1) = 512*26+447;
   P(70, 2) = 512*447+444;
   P(70, 3) = 512*444+411;
   P(70, 4) = 512*411+410;
   P(70, 5) = 512*410+409;
   P(70, 6) = 512*409+408;
   P(70, 7) = 512*408+413;
   P(70, 8) = 512*413+414;
   P(70, 9) = 512*414+25;
   P(71, 0) = 512*26+27;
   P(71, 1) = 512*27+60;
   P(71, 2) = 512*60+61;
   P(71, 3) = 512*61+56;
   P(71, 4) = 512*56+57;
   P(71, 5) = 512*57+446;
   P(71, 6) = 512*446+445;
   P(71, 7) = 512*445+444;
   P(71, 8) = 512*444+447;
   P(71, 9) = 512*447+26;
   P(72, 0) = 512*26+27;
   P(72, 1) = 512*27+60;
   P(72, 2) = 512*60+63;
   P(72, 3) = 512*63+54;
   P(72, 4) = 512*54+53;
   P(72, 5) = 512*53+48;
   P(72, 6) = 512*48+49;
   P(72, 7) = 512*49+438;
   P(72, 8) = 512*438+447;
   P(72, 9) = 512*447+26;
   P(73, 0) = 512*28+29;
   P(73, 1) = 512*29+30;
   P(73, 2) = 512*30+153;
   P(73, 3) = 512*153+152;
   P(73, 4) = 512*152+157;
   P(73, 5) = 512*157+156;
   P(73, 6) = 512*156+251;
   P(73, 7) = 512*251+250;
   P(73, 8) = 512*250+31;
   P(73, 9) = 512*31+28;
   P(74, 0) = 512*28+123;
   P(74, 1) = 512*123+122;
   P(74, 2) = 512*122+121;
   P(74, 3) = 512*121+120;
   P(74, 4) = 512*120+125;
   P(74, 5) = 512*125+126;
   P(74, 6) = 512*126+249;
   P(74, 7) = 512*249+250;
   P(74, 8) = 512*250+31;
   P(74, 9) = 512*31+28;
   P(75, 0) = 512*28+123;
   P(75, 1) = 512*123+112;
   P(75, 2) = 512*112+117;
   P(75, 3) = 512*117+118;
   P(75, 4) = 512*118+241;
   P(75, 5) = 512*241+240;
   P(75, 6) = 512*240+251;
   P(75, 7) = 512*251+250;
   P(75, 8) = 512*250+31;
   P(75, 9) = 512*31+28;
   P(76, 0) = 512*32+33;
   P(76, 1) = 512*33+34;
   P(76, 2) = 512*34+35;
   P(76, 3) = 512*35+68;
   P(76, 4) = 512*68+69;
   P(76, 5) = 512*69+70;
   P(76, 6) = 512*70+79;
   P(76, 7) = 512*79+76;
   P(76, 8) = 512*76+43;
   P(76, 9) = 512*43+32;
   P(77, 0) = 512*32+33;
   P(77, 1) = 512*33+34;
   P(77, 2) = 512*34+35;
   P(77, 3) = 512*35+68;
   P(77, 4) = 512*68+71;
   P(77, 5) = 512*71+162;
   P(77, 6) = 512*162+161;
   P(77, 7) = 512*161+38;
   P(77, 8) = 512*38+37;
   P(77, 9) = 512*37+32;
   P(78, 0) = 512*32+33;
   P(78, 1) = 512*33+34;
   P(78, 2) = 512*34+35;
   P(78, 3) = 512*35+56;
   P(78, 4) = 512*56+61;
   P(78, 5) = 512*61+62;
   P(78, 6) = 512*62+39;
   P(78, 7) = 512*39+36;
   P(78, 8) = 512*36+37;
   P(78, 9) = 512*37+32;
   P(79, 0) = 512*32+33;
   P(79, 1) = 512*33+34;
   P(79, 2) = 512*34+455;
   P(79, 3) = 512*455+452;
   P(79, 4) = 512*452+453;
   P(79, 5) = 512*453+454;
   P(79, 6) = 512*454+463;
   P(79, 7) = 512*463+42;
   P(79, 8) = 512*42+43;
   P(79, 9) = 512*43+32;
   P(80, 0) = 512*32+33;
   P(80, 1) = 512*33+422;
   P(80, 2) = 512*422+421;
   P(80, 3) = 512*421+416;
   P(80, 4) = 512*416+427;
   P(80, 5) = 512*427+460;
   P(80, 6) = 512*460+463;
   P(80, 7) = 512*463+42;
   P(80, 8) = 512*42+43;
   P(80, 9) = 512*43+32;
   P(81, 0) = 512*32+33;
   P(81, 1) = 512*33+422;
   P(81, 2) = 512*422+431;
   P(81, 3) = 512*431+428;
   P(81, 4) = 512*428+429;
   P(81, 5) = 512*429+430;
   P(81, 6) = 512*430+41;
   P(81, 7) = 512*41+42;
   P(81, 8) = 512*42+43;
   P(81, 9) = 512*43+32;
   P(82, 0) = 512*32+37;
   P(82, 1) = 512*37+38;
   P(82, 2) = 512*38+47;
   P(82, 3) = 512*47+44;
   P(82, 4) = 512*44+45;
   P(82, 5) = 512*45+40;
   P(82, 6) = 512*40+41;
   P(82, 7) = 512*41+42;
   P(82, 8) = 512*42+43;
   P(82, 9) = 512*43+32;
   P(83, 0) = 512*32+37;
   P(83, 1) = 512*37+38;
   P(83, 2) = 512*38+161;
   P(83, 3) = 512*161+160;
   P(83, 4) = 512*160+171;
   P(83, 5) = 512*171+170;
   P(83, 6) = 512*170+79;
   P(83, 7) = 512*79+76;
   P(83, 8) = 512*76+43;
   P(83, 9) = 512*43+32;
   P(84, 0) = 512*33+34;
   P(84, 1) = 512*34+35;
   P(84, 2) = 512*35+56;
   P(84, 3) = 512*56+57;
   P(84, 4) = 512*57+446;
   P(84, 5) = 512*446+423;
   P(84, 6) = 512*423+420;
   P(84, 7) = 512*420+421;
   P(84, 8) = 512*421+422;
   P(84, 9) = 512*422+33;
   P(85, 0) = 512*33+34;
   P(85, 1) = 512*34+455;
   P(85, 2) = 512*455+452;
   P(85, 3) = 512*452+419;
   P(85, 4) = 512*419+418;
   P(85, 5) = 512*418+417;
   P(85, 6) = 512*417+416;
   P(85, 7) = 512*416+421;
   P(85, 8) = 512*421+422;
   P(85, 9) = 512*422+33;
   P(86, 0) = 512*34+35;
   P(86, 1) = 512*35+68;
   P(86, 2) = 512*68+69;
   P(86, 3) = 512*69+64;
   P(86, 4) = 512*64+65;
   P(86, 5) = 512*65+454;
   P(86, 6) = 512*454+453;
   P(86, 7) = 512*453+452;
   P(86, 8) = 512*452+455;
   P(86, 9) = 512*455+34;
   P(87, 0) = 512*34+35;
   P(87, 1) = 512*35+68;
   P(87, 2) = 512*68+71;
   P(87, 3) = 512*71+94;
   P(87, 4) = 512*94+93;
   P(87, 5) = 512*93+88;
   P(87, 6) = 512*88+89;
   P(87, 7) = 512*89+478;
   P(87, 8) = 512*478+455;
   P(87, 9) = 512*455+34;
   P(88, 0) = 512*34+35;
   P(88, 1) = 512*35+56;
   P(88, 2) = 512*56+57;
   P(88, 3) = 512*57+58;
   P(88, 4) = 512*58+479;
   P(88, 5) = 512*479+476;
   P(88, 6) = 512*476+477;
   P(88, 7) = 512*477+478;
   P(88, 8) = 512*478+455;
   P(88, 9) = 512*455+34;
   P(89, 0) = 512*34+35;
   P(89, 1) = 512*35+56;
   P(89, 2) = 512*56+57;
   P(89, 3) = 512*57+446;
   P(89, 4) = 512*446+445;
   P(89, 5) = 512*445+440;
   P(89, 6) = 512*440+419;
   P(89, 7) = 512*419+452;
   P(89, 8) = 512*452+455;
   P(89, 9) = 512*455+34;
   P(90, 0) = 512*35+68;
   P(90, 1) = 512*68+71;
   P(90, 2) = 512*71+94;
   P(90, 3) = 512*94+93;
   P(90, 4) = 512*93+92;
   P(90, 5) = 512*92+59;
   P(90, 6) = 512*59+58;
   P(90, 7) = 512*58+57;
   P(90, 8) = 512*57+56;
   P(90, 9) = 512*56+35;
   P(91, 0) = 512*35+68;
   P(91, 1) = 512*68+71;
   P(91, 2) = 512*71+162;
   P(91, 3) = 512*162+163;
   P(91, 4) = 512*163+184;
   P(91, 5) = 512*184+185;
   P(91, 6) = 512*185+62;
   P(91, 7) = 512*62+61;
   P(91, 8) = 512*61+56;
   P(91, 9) = 512*56+35;
   P(92, 0) = 512*36+37;
   P(92, 1) = 512*37+38;
   P(92, 2) = 512*38+47;
   P(92, 3) = 512*47+138;
   P(92, 4) = 512*138+139;
   P(92, 5) = 512*139+128;
   P(92, 6) = 512*128+129;
   P(92, 7) = 512*129+130;
   P(92, 8) = 512*130+39;
   P(92, 9) = 512*39+36;
   P(93, 0) = 512*36+37;
   P(93, 1) = 512*37+38;
   P(93, 2) = 512*38+161;
   P(93, 3) = 512*161+160;
   P(93, 4) = 512*160+165;
   P(93, 5) = 512*165+164;
   P(93, 6) = 512*164+131;
   P(93, 7) = 512*131+130;
   P(93, 8) = 512*130+39;
   P(93, 9) = 512*39+36;
   P(94, 0) = 512*36+37;
   P(94, 1) = 512*37+38;
   P(94, 2) = 512*38+161;
   P(94, 3) = 512*161+162;
   P(94, 4) = 512*162+163;
   P(94, 5) = 512*163+184;
   P(94, 6) = 512*184+185;
   P(94, 7) = 512*185+62;
   P(94, 8) = 512*62+39;
   P(94, 9) = 512*39+36;
   P(95, 0) = 512*38+47;
   P(95, 1) = 512*47+44;
   P(95, 2) = 512*44+45;
   P(95, 3) = 512*45+46;
   P(95, 4) = 512*46+169;
   P(95, 5) = 512*169+170;
   P(95, 6) = 512*170+171;
   P(95, 7) = 512*171+160;
   P(95, 8) = 512*160+161;
   P(95, 9) = 512*161+38;
   P(96, 0) = 512*38+47;
   P(96, 1) = 512*47+138;
   P(96, 2) = 512*138+139;
   P(96, 3) = 512*139+172;
   P(96, 4) = 512*172+175;
   P(96, 5) = 512*175+166;
   P(96, 6) = 512*166+165;
   P(96, 7) = 512*165+160;
   P(96, 8) = 512*160+161;
   P(96, 9) = 512*161+38;
   P(97, 0) = 512*39+62;
   P(97, 1) = 512*62+61;
   P(97, 2) = 512*61+60;
   P(97, 3) = 512*60+63;
   P(97, 4) = 512*63+154;
   P(97, 5) = 512*154+153;
   P(97, 6) = 512*153+152;
   P(97, 7) = 512*152+131;
   P(97, 8) = 512*131+130;
   P(97, 9) = 512*130+39;
   P(98, 0) = 512*39+62;
   P(98, 1) = 512*62+185;
   P(98, 2) = 512*185+184;
   P(98, 3) = 512*184+189;
   P(98, 4) = 512*189+190;
   P(98, 5) = 512*190+167;
   P(98, 6) = 512*167+164;
   P(98, 7) = 512*164+131;
   P(98, 8) = 512*131+130;
   P(98, 9) = 512*130+39;
   P(99, 0) = 512*40+41;
   P(99, 1) = 512*41+42;
   P(99, 2) = 512*42+43;
   P(99, 3) = 512*43+76;
   P(99, 4) = 512*76+77;
   P(99, 5) = 512*77+78;
   P(99, 6) = 512*78+87;
   P(99, 7) = 512*87+84;
   P(99, 8) = 512*84+51;
   P(99, 9) = 512*51+40;
   P(100, 0) = 512*40+41;
   P(100, 1) = 512*41+42;
   P(100, 2) = 512*42+43;
   P(100, 3) = 512*43+76;
   P(100, 4) = 512*76+79;
   P(100, 5) = 512*79+170;
   P(100, 6) = 512*170+169;
   P(100, 7) = 512*169+46;
   P(100, 8) = 512*46+45;
   P(100, 9) = 512*45+40;
   P(101, 0) = 512*40+41;
   P(101, 1) = 512*41+42;
   P(101, 2) = 512*42+463;
   P(101, 3) = 512*463+460;
   P(101, 4) = 512*460+461;
   P(101, 5) = 512*461+462;
   P(101, 6) = 512*462+471;
   P(101, 7) = 512*471+50;
   P(101, 8) = 512*50+51;
   P(101, 9) = 512*51+40;
   P(102, 0) = 512*40+41;
   P(102, 1) = 512*41+430;
   P(102, 2) = 512*430+429;
   P(102, 3) = 512*429+424;
   P(102, 4) = 512*424+435;
   P(102, 5) = 512*435+468;
   P(102, 6) = 512*468+471;
   P(102, 7) = 512*471+50;
   P(102, 8) = 512*50+51;
   P(102, 9) = 512*51+40;
   P(103, 0) = 512*40+41;
   P(103, 1) = 512*41+430;
   P(103, 2) = 512*430+439;
   P(103, 3) = 512*439+436;
   P(103, 4) = 512*436+437;
   P(103, 5) = 512*437+438;
   P(103, 6) = 512*438+49;
   P(103, 7) = 512*49+50;
   P(103, 8) = 512*50+51;
   P(103, 9) = 512*51+40;
   P(104, 0) = 512*40+45;
   P(104, 1) = 512*45+46;
   P(104, 2) = 512*46+55;
   P(104, 3) = 512*55+52;
   P(104, 4) = 512*52+53;
   P(104, 5) = 512*53+48;
   P(104, 6) = 512*48+49;
   P(104, 7) = 512*49+50;
   P(104, 8) = 512*50+51;
   P(104, 9) = 512*51+40;
   P(105, 0) = 512*40+45;
   P(105, 1) = 512*45+46;
   P(105, 2) = 512*46+169;
   P(105, 3) = 512*169+168;
   P(105, 4) = 512*168+179;
   P(105, 5) = 512*179+178;
   P(105, 6) = 512*178+87;
   P(105, 7) = 512*87+84;
   P(105, 8) = 512*84+51;
   P(105, 9) = 512*51+40;
   P(106, 0) = 512*41+42;
   P(106, 1) = 512*42+463;
   P(106, 2) = 512*463+460;
   P(106, 3) = 512*460+427;
   P(106, 4) = 512*427+426;
   P(106, 5) = 512*426+425;
   P(106, 6) = 512*425+424;
   P(106, 7) = 512*424+429;
   P(106, 8) = 512*429+430;
   P(106, 9) = 512*430+41;
   P(107, 0) = 512*42+43;
   P(107, 1) = 512*43+76;
   P(107, 2) = 512*76+77;
   P(107, 3) = 512*77+72;
   P(107, 4) = 512*72+73;
   P(107, 5) = 512*73+462;
   P(107, 6) = 512*462+461;
   P(107, 7) = 512*461+460;
   P(107, 8) = 512*460+463;
   P(107, 9) = 512*463+42;
   P(108, 0) = 512*42+43;
   P(108, 1) = 512*43+76;
   P(108, 2) = 512*76+79;
   P(108, 3) = 512*79+70;
   P(108, 4) = 512*70+69;
   P(108, 5) = 512*69+64;
   P(108, 6) = 512*64+65;
   P(108, 7) = 512*65+454;
   P(108, 8) = 512*454+463;
   P(108, 9) = 512*463+42;
   P(109, 0) = 512*44+45;
   P(109, 1) = 512*45+46;
   P(109, 2) = 512*46+55;
   P(109, 3) = 512*55+146;
   P(109, 4) = 512*146+147;
   P(109, 5) = 512*147+136;
   P(109, 6) = 512*136+137;
   P(109, 7) = 512*137+138;
   P(109, 8) = 512*138+47;
   P(109, 9) = 512*47+44;
   P(110, 0) = 512*44+45;
   P(110, 1) = 512*45+46;
   P(110, 2) = 512*46+169;
   P(110, 3) = 512*169+168;
   P(110, 4) = 512*168+173;
   P(110, 5) = 512*173+172;
   P(110, 6) = 512*172+139;
   P(110, 7) = 512*139+138;
   P(110, 8) = 512*138+47;
   P(110, 9) = 512*47+44;
   P(111, 0) = 512*46+55;
   P(111, 1) = 512*55+52;
   P(111, 2) = 512*52+53;
   P(111, 3) = 512*53+54;
   P(111, 4) = 512*54+177;
   P(111, 5) = 512*177+178;
   P(111, 6) = 512*178+179;
   P(111, 7) = 512*179+168;
   P(111, 8) = 512*168+169;
   P(111, 9) = 512*169+46;
   P(112, 0) = 512*46+55;
   P(112, 1) = 512*55+146;
   P(112, 2) = 512*146+147;
   P(112, 3) = 512*147+180;
   P(112, 4) = 512*180+183;
   P(112, 5) = 512*183+174;
   P(112, 6) = 512*174+173;
   P(112, 7) = 512*173+168;
   P(112, 8) = 512*168+169;
   P(112, 9) = 512*169+46;
   P(113, 0) = 512*48+49;
   P(113, 1) = 512*49+50;
   P(113, 2) = 512*50+51;
   P(113, 3) = 512*51+84;
   P(113, 4) = 512*84+85;
   P(113, 5) = 512*85+86;
   P(113, 6) = 512*86+95;
   P(113, 7) = 512*95+92;
   P(113, 8) = 512*92+59;
   P(113, 9) = 512*59+48;
   P(114, 0) = 512*48+49;
   P(114, 1) = 512*49+50;
   P(114, 2) = 512*50+51;
   P(114, 3) = 512*51+84;
   P(114, 4) = 512*84+87;
   P(114, 5) = 512*87+178;
   P(114, 6) = 512*178+177;
   P(114, 7) = 512*177+54;
   P(114, 8) = 512*54+53;
   P(114, 9) = 512*53+48;
   P(115, 0) = 512*48+49;
   P(115, 1) = 512*49+50;
   P(115, 2) = 512*50+471;
   P(115, 3) = 512*471+468;
   P(115, 4) = 512*468+469;
   P(115, 5) = 512*469+470;
   P(115, 6) = 512*470+479;
   P(115, 7) = 512*479+58;
   P(115, 8) = 512*58+59;
   P(115, 9) = 512*59+48;
   P(116, 0) = 512*48+49;
   P(116, 1) = 512*49+438;
   P(116, 2) = 512*438+437;
   P(116, 3) = 512*437+432;
   P(116, 4) = 512*432+443;
   P(116, 5) = 512*443+476;
   P(116, 6) = 512*476+479;
   P(116, 7) = 512*479+58;
   P(116, 8) = 512*58+59;
   P(116, 9) = 512*59+48;
   P(117, 0) = 512*48+49;
   P(117, 1) = 512*49+438;
   P(117, 2) = 512*438+447;
   P(117, 3) = 512*447+444;
   P(117, 4) = 512*444+445;
   P(117, 5) = 512*445+446;
   P(117, 6) = 512*446+57;
   P(117, 7) = 512*57+58;
   P(117, 8) = 512*58+59;
   P(117, 9) = 512*59+48;
   P(118, 0) = 512*48+53;
   P(118, 1) = 512*53+54;
   P(118, 2) = 512*54+63;
   P(118, 3) = 512*63+60;
   P(118, 4) = 512*60+61;
   P(118, 5) = 512*61+56;
   P(118, 6) = 512*56+57;
   P(118, 7) = 512*57+58;
   P(118, 8) = 512*58+59;
   P(118, 9) = 512*59+48;
   P(119, 0) = 512*48+53;
   P(119, 1) = 512*53+54;
   P(119, 2) = 512*54+177;
   P(119, 3) = 512*177+176;
   P(119, 4) = 512*176+187;
   P(119, 5) = 512*187+186;
   P(119, 6) = 512*186+95;
   P(119, 7) = 512*95+92;
   P(119, 8) = 512*92+59;
   P(119, 9) = 512*59+48;
   P(120, 0) = 512*49+50;
   P(120, 1) = 512*50+471;
   P(120, 2) = 512*471+468;
   P(120, 3) = 512*468+435;
   P(120, 4) = 512*435+434;
   P(120, 5) = 512*434+433;
   P(120, 6) = 512*433+432;
   P(120, 7) = 512*432+437;
   P(120, 8) = 512*437+438;
   P(120, 9) = 512*438+49;
   P(121, 0) = 512*50+51;
   P(121, 1) = 512*51+84;
   P(121, 2) = 512*84+85;
   P(121, 3) = 512*85+80;
   P(121, 4) = 512*80+81;
   P(121, 5) = 512*81+470;
   P(121, 6) = 512*470+469;
   P(121, 7) = 512*469+468;
   P(121, 8) = 512*468+471;
   P(121, 9) = 512*471+50;
   P(122, 0) = 512*50+51;
   P(122, 1) = 512*51+84;
   P(122, 2) = 512*84+87;
   P(122, 3) = 512*87+78;
   P(122, 4) = 512*78+77;
   P(122, 5) = 512*77+72;
   P(122, 6) = 512*72+73;
   P(122, 7) = 512*73+462;
   P(122, 8) = 512*462+471;
   P(122, 9) = 512*471+50;
   P(123, 0) = 512*52+53;
   P(123, 1) = 512*53+54;
   P(123, 2) = 512*54+63;
   P(123, 3) = 512*63+154;
   P(123, 4) = 512*154+155;
   P(123, 5) = 512*155+144;
   P(123, 6) = 512*144+145;
   P(123, 7) = 512*145+146;
   P(123, 8) = 512*146+55;
   P(123, 9) = 512*55+52;
   P(124, 0) = 512*52+53;
   P(124, 1) = 512*53+54;
   P(124, 2) = 512*54+177;
   P(124, 3) = 512*177+176;
   P(124, 4) = 512*176+181;
   P(124, 5) = 512*181+180;
   P(124, 6) = 512*180+147;
   P(124, 7) = 512*147+146;
   P(124, 8) = 512*146+55;
   P(124, 9) = 512*55+52;
   P(125, 0) = 512*54+63;
   P(125, 1) = 512*63+60;
   P(125, 2) = 512*60+61;
   P(125, 3) = 512*61+62;
   P(125, 4) = 512*62+185;
   P(125, 5) = 512*185+186;
   P(125, 6) = 512*186+187;
   P(125, 7) = 512*187+176;
   P(125, 8) = 512*176+177;
   P(125, 9) = 512*177+54;
   P(126, 0) = 512*54+63;
   P(126, 1) = 512*63+154;
   P(126, 2) = 512*154+155;
   P(126, 3) = 512*155+188;
   P(126, 4) = 512*188+191;
   P(126, 5) = 512*191+182;
   P(126, 6) = 512*182+181;
   P(126, 7) = 512*181+176;
   P(126, 8) = 512*176+177;
   P(126, 9) = 512*177+54;
   P(127, 0) = 512*56+57;
   P(127, 1) = 512*57+58;
   P(127, 2) = 512*58+59;
   P(127, 3) = 512*59+92;
   P(127, 4) = 512*92+95;
   P(127, 5) = 512*95+186;
   P(127, 6) = 512*186+185;
   P(127, 7) = 512*185+62;
   P(127, 8) = 512*62+61;
   P(127, 9) = 512*61+56;
   P(128, 0) = 512*57+58;
   P(128, 1) = 512*58+479;
   P(128, 2) = 512*479+476;
   P(128, 3) = 512*476+443;
   P(128, 4) = 512*443+442;
   P(128, 5) = 512*442+441;
   P(128, 6) = 512*441+440;
   P(128, 7) = 512*440+445;
   P(128, 8) = 512*445+446;
   P(128, 9) = 512*446+57;
   P(129, 0) = 512*58+59;
   P(129, 1) = 512*59+92;
   P(129, 2) = 512*92+93;
   P(129, 3) = 512*93+88;
   P(129, 4) = 512*88+89;
   P(129, 5) = 512*89+478;
   P(129, 6) = 512*478+477;
   P(129, 7) = 512*477+476;
   P(129, 8) = 512*476+479;
   P(129, 9) = 512*479+58;
   P(130, 0) = 512*58+59;
   P(130, 1) = 512*59+92;
   P(130, 2) = 512*92+95;
   P(130, 3) = 512*95+86;
   P(130, 4) = 512*86+85;
   P(130, 5) = 512*85+80;
   P(130, 6) = 512*80+81;
   P(130, 7) = 512*81+470;
   P(130, 8) = 512*470+479;
   P(130, 9) = 512*479+58;
   P(131, 0) = 512*60+61;
   P(131, 1) = 512*61+62;
   P(131, 2) = 512*62+185;
   P(131, 3) = 512*185+184;
   P(131, 4) = 512*184+189;
   P(131, 5) = 512*189+188;
   P(131, 6) = 512*188+155;
   P(131, 7) = 512*155+154;
   P(131, 8) = 512*154+63;
   P(131, 9) = 512*63+60;
   P(132, 0) = 512*64+65;
   P(132, 1) = 512*65+66;
   P(132, 2) = 512*66+67;
   P(132, 3) = 512*67+100;
   P(132, 4) = 512*100+101;
   P(132, 5) = 512*101+102;
   P(132, 6) = 512*102+111;
   P(132, 7) = 512*111+108;
   P(132, 8) = 512*108+75;
   P(132, 9) = 512*75+64;
   P(133, 0) = 512*64+65;
   P(133, 1) = 512*65+66;
   P(133, 2) = 512*66+67;
   P(133, 3) = 512*67+100;
   P(133, 4) = 512*100+103;
   P(133, 5) = 512*103+194;
   P(133, 6) = 512*194+193;
   P(133, 7) = 512*193+70;
   P(133, 8) = 512*70+69;
   P(133, 9) = 512*69+64;
   P(134, 0) = 512*64+65;
   P(134, 1) = 512*65+66;
   P(134, 2) = 512*66+67;
   P(134, 3) = 512*67+88;
   P(134, 4) = 512*88+93;
   P(134, 5) = 512*93+94;
   P(134, 6) = 512*94+71;
   P(134, 7) = 512*71+68;
   P(134, 8) = 512*68+69;
   P(134, 9) = 512*69+64;
   P(135, 0) = 512*64+65;
   P(135, 1) = 512*65+66;
   P(135, 2) = 512*66+487;
   P(135, 3) = 512*487+484;
   P(135, 4) = 512*484+485;
   P(135, 5) = 512*485+486;
   P(135, 6) = 512*486+495;
   P(135, 7) = 512*495+74;
   P(135, 8) = 512*74+75;
   P(135, 9) = 512*75+64;
   P(136, 0) = 512*64+65;
   P(136, 1) = 512*65+454;
   P(136, 2) = 512*454+453;
   P(136, 3) = 512*453+448;
   P(136, 4) = 512*448+459;
   P(136, 5) = 512*459+492;
   P(136, 6) = 512*492+495;
   P(136, 7) = 512*495+74;
   P(136, 8) = 512*74+75;
   P(136, 9) = 512*75+64;
   P(137, 0) = 512*64+65;
   P(137, 1) = 512*65+454;
   P(137, 2) = 512*454+463;
   P(137, 3) = 512*463+460;
   P(137, 4) = 512*460+461;
   P(137, 5) = 512*461+462;
   P(137, 6) = 512*462+73;
   P(137, 7) = 512*73+74;
   P(137, 8) = 512*74+75;
   P(137, 9) = 512*75+64;
   P(138, 0) = 512*64+69;
   P(138, 1) = 512*69+70;
   P(138, 2) = 512*70+79;
   P(138, 3) = 512*79+76;
   P(138, 4) = 512*76+77;
   P(138, 5) = 512*77+72;
   P(138, 6) = 512*72+73;
   P(138, 7) = 512*73+74;
   P(138, 8) = 512*74+75;
   P(138, 9) = 512*75+64;
   P(139, 0) = 512*64+69;
   P(139, 1) = 512*69+70;
   P(139, 2) = 512*70+193;
   P(139, 3) = 512*193+192;
   P(139, 4) = 512*192+203;
   P(139, 5) = 512*203+202;
   P(139, 6) = 512*202+111;
   P(139, 7) = 512*111+108;
   P(139, 8) = 512*108+75;
   P(139, 9) = 512*75+64;
   P(140, 0) = 512*65+66;
   P(140, 1) = 512*66+67;
   P(140, 2) = 512*67+88;
   P(140, 3) = 512*88+89;
   P(140, 4) = 512*89+478;
   P(140, 5) = 512*478+455;
   P(140, 6) = 512*455+452;
   P(140, 7) = 512*452+453;
   P(140, 8) = 512*453+454;
   P(140, 9) = 512*454+65;
   P(141, 0) = 512*65+66;
   P(141, 1) = 512*66+487;
   P(141, 2) = 512*487+484;
   P(141, 3) = 512*484+451;
   P(141, 4) = 512*451+450;
   P(141, 5) = 512*450+449;
   P(141, 6) = 512*449+448;
   P(141, 7) = 512*448+453;
   P(141, 8) = 512*453+454;
   P(141, 9) = 512*454+65;
   P(142, 0) = 512*66+67;
   P(142, 1) = 512*67+100;
   P(142, 2) = 512*100+101;
   P(142, 3) = 512*101+96;
   P(142, 4) = 512*96+97;
   P(142, 5) = 512*97+486;
   P(142, 6) = 512*486+485;
   P(142, 7) = 512*485+484;
   P(142, 8) = 512*484+487;
   P(142, 9) = 512*487+66;
   P(143, 0) = 512*66+67;
   P(143, 1) = 512*67+100;
   P(143, 2) = 512*100+103;
   P(143, 3) = 512*103+126;
   P(143, 4) = 512*126+125;
   P(143, 5) = 512*125+120;
   P(143, 6) = 512*120+121;
   P(143, 7) = 512*121+510;
   P(143, 8) = 512*510+487;
   P(143, 9) = 512*487+66;
   P(144, 0) = 512*66+67;
   P(144, 1) = 512*67+88;
   P(144, 2) = 512*88+89;
   P(144, 3) = 512*89+90;
   P(144, 4) = 512*90+511;
   P(144, 5) = 512*511+508;
   P(144, 6) = 512*508+509;
   P(144, 7) = 512*509+510;
   P(144, 8) = 512*510+487;
   P(144, 9) = 512*487+66;
   P(145, 0) = 512*66+67;
   P(145, 1) = 512*67+88;
   P(145, 2) = 512*88+89;
   P(145, 3) = 512*89+478;
   P(145, 4) = 512*478+477;
   P(145, 5) = 512*477+472;
   P(145, 6) = 512*472+451;
   P(145, 7) = 512*451+484;
   P(145, 8) = 512*484+487;
   P(145, 9) = 512*487+66;
   P(146, 0) = 512*67+100;
   P(146, 1) = 512*100+103;
   P(146, 2) = 512*103+126;
   P(146, 3) = 512*126+125;
   P(146, 4) = 512*125+124;
   P(146, 5) = 512*124+91;
   P(146, 6) = 512*91+90;
   P(146, 7) = 512*90+89;
   P(146, 8) = 512*89+88;
   P(146, 9) = 512*88+67;
   P(147, 0) = 512*67+100;
   P(147, 1) = 512*100+103;
   P(147, 2) = 512*103+194;
   P(147, 3) = 512*194+195;
   P(147, 4) = 512*195+216;
   P(147, 5) = 512*216+217;
   P(147, 6) = 512*217+94;
   P(147, 7) = 512*94+93;
   P(147, 8) = 512*93+88;
   P(147, 9) = 512*88+67;
   P(148, 0) = 512*68+69;
   P(148, 1) = 512*69+70;
   P(148, 2) = 512*70+79;
   P(148, 3) = 512*79+170;
   P(148, 4) = 512*170+171;
   P(148, 5) = 512*171+160;
   P(148, 6) = 512*160+161;
   P(148, 7) = 512*161+162;
   P(148, 8) = 512*162+71;
   P(148, 9) = 512*71+68;
   P(149, 0) = 512*68+69;
   P(149, 1) = 512*69+70;
   P(149, 2) = 512*70+193;
   P(149, 3) = 512*193+192;
   P(149, 4) = 512*192+197;
   P(149, 5) = 512*197+196;
   P(149, 6) = 512*196+163;
   P(149, 7) = 512*163+162;
   P(149, 8) = 512*162+71;
   P(149, 9) = 512*71+68;
   P(150, 0) = 512*68+69;
   P(150, 1) = 512*69+70;
   P(150, 2) = 512*70+193;
   P(150, 3) = 512*193+194;
   P(150, 4) = 512*194+195;
   P(150, 5) = 512*195+216;
   P(150, 6) = 512*216+217;
   P(150, 7) = 512*217+94;
   P(150, 8) = 512*94+71;
   P(150, 9) = 512*71+68;
   P(151, 0) = 512*70+79;
   P(151, 1) = 512*79+76;
   P(151, 2) = 512*76+77;
   P(151, 3) = 512*77+78;
   P(151, 4) = 512*78+201;
   P(151, 5) = 512*201+202;
   P(151, 6) = 512*202+203;
   P(151, 7) = 512*203+192;
   P(151, 8) = 512*192+193;
   P(151, 9) = 512*193+70;
   P(152, 0) = 512*70+79;
   P(152, 1) = 512*79+170;
   P(152, 2) = 512*170+171;
   P(152, 3) = 512*171+204;
   P(152, 4) = 512*204+207;
   P(152, 5) = 512*207+198;
   P(152, 6) = 512*198+197;
   P(152, 7) = 512*197+192;
   P(152, 8) = 512*192+193;
   P(152, 9) = 512*193+70;
   P(153, 0) = 512*71+94;
   P(153, 1) = 512*94+93;
   P(153, 2) = 512*93+92;
   P(153, 3) = 512*92+95;
   P(153, 4) = 512*95+186;
   P(153, 5) = 512*186+185;
   P(153, 6) = 512*185+184;
   P(153, 7) = 512*184+163;
   P(153, 8) = 512*163+162;
   P(153, 9) = 512*162+71;
   P(154, 0) = 512*71+94;
   P(154, 1) = 512*94+217;
   P(154, 2) = 512*217+216;
   P(154, 3) = 512*216+221;
   P(154, 4) = 512*221+222;
   P(154, 5) = 512*222+199;
   P(154, 6) = 512*199+196;
   P(154, 7) = 512*196+163;
   P(154, 8) = 512*163+162;
   P(154, 9) = 512*162+71;
   P(155, 0) = 512*72+73;
   P(155, 1) = 512*73+74;
   P(155, 2) = 512*74+75;
   P(155, 3) = 512*75+108;
   P(155, 4) = 512*108+109;
   P(155, 5) = 512*109+110;
   P(155, 6) = 512*110+119;
   P(155, 7) = 512*119+116;
   P(155, 8) = 512*116+83;
   P(155, 9) = 512*83+72;
   P(156, 0) = 512*72+73;
   P(156, 1) = 512*73+74;
   P(156, 2) = 512*74+75;
   P(156, 3) = 512*75+108;
   P(156, 4) = 512*108+111;
   P(156, 5) = 512*111+202;
   P(156, 6) = 512*202+201;
   P(156, 7) = 512*201+78;
   P(156, 8) = 512*78+77;
   P(156, 9) = 512*77+72;
   P(157, 0) = 512*72+73;
   P(157, 1) = 512*73+74;
   P(157, 2) = 512*74+495;
   P(157, 3) = 512*495+492;
   P(157, 4) = 512*492+493;
   P(157, 5) = 512*493+494;
   P(157, 6) = 512*494+503;
   P(157, 7) = 512*503+82;
   P(157, 8) = 512*82+83;
   P(157, 9) = 512*83+72;
   P(158, 0) = 512*72+73;
   P(158, 1) = 512*73+462;
   P(158, 2) = 512*462+461;
   P(158, 3) = 512*461+456;
   P(158, 4) = 512*456+467;
   P(158, 5) = 512*467+500;
   P(158, 6) = 512*500+503;
   P(158, 7) = 512*503+82;
   P(158, 8) = 512*82+83;
   P(158, 9) = 512*83+72;
   P(159, 0) = 512*72+73;
   P(159, 1) = 512*73+462;
   P(159, 2) = 512*462+471;
   P(159, 3) = 512*471+468;
   P(159, 4) = 512*468+469;
   P(159, 5) = 512*469+470;
   P(159, 6) = 512*470+81;
   P(159, 7) = 512*81+82;
   P(159, 8) = 512*82+83;
   P(159, 9) = 512*83+72;
   P(160, 0) = 512*72+77;
   P(160, 1) = 512*77+78;
   P(160, 2) = 512*78+87;
   P(160, 3) = 512*87+84;
   P(160, 4) = 512*84+85;
   P(160, 5) = 512*85+80;
   P(160, 6) = 512*80+81;
   P(160, 7) = 512*81+82;
   P(160, 8) = 512*82+83;
   P(160, 9) = 512*83+72;
   P(161, 0) = 512*72+77;
   P(161, 1) = 512*77+78;
   P(161, 2) = 512*78+201;
   P(161, 3) = 512*201+200;
   P(161, 4) = 512*200+211;
   P(161, 5) = 512*211+210;
   P(161, 6) = 512*210+119;
   P(161, 7) = 512*119+116;
   P(161, 8) = 512*116+83;
   P(161, 9) = 512*83+72;
   P(162, 0) = 512*73+74;
   P(162, 1) = 512*74+495;
   P(162, 2) = 512*495+492;
   P(162, 3) = 512*492+459;
   P(162, 4) = 512*459+458;
   P(162, 5) = 512*458+457;
   P(162, 6) = 512*457+456;
   P(162, 7) = 512*456+461;
   P(162, 8) = 512*461+462;
   P(162, 9) = 512*462+73;
   P(163, 0) = 512*74+75;
   P(163, 1) = 512*75+108;
   P(163, 2) = 512*108+109;
   P(163, 3) = 512*109+104;
   P(163, 4) = 512*104+105;
   P(163, 5) = 512*105+494;
   P(163, 6) = 512*494+493;
   P(163, 7) = 512*493+492;
   P(163, 8) = 512*492+495;
   P(163, 9) = 512*495+74;
   P(164, 0) = 512*74+75;
   P(164, 1) = 512*75+108;
   P(164, 2) = 512*108+111;
   P(164, 3) = 512*111+102;
   P(164, 4) = 512*102+101;
   P(164, 5) = 512*101+96;
   P(164, 6) = 512*96+97;
   P(164, 7) = 512*97+486;
   P(164, 8) = 512*486+495;
   P(164, 9) = 512*495+74;
   P(165, 0) = 512*76+77;
   P(165, 1) = 512*77+78;
   P(165, 2) = 512*78+87;
   P(165, 3) = 512*87+178;
   P(165, 4) = 512*178+179;
   P(165, 5) = 512*179+168;
   P(165, 6) = 512*168+169;
   P(165, 7) = 512*169+170;
   P(165, 8) = 512*170+79;
   P(165, 9) = 512*79+76;
   P(166, 0) = 512*76+77;
   P(166, 1) = 512*77+78;
   P(166, 2) = 512*78+201;
   P(166, 3) = 512*201+200;
   P(166, 4) = 512*200+205;
   P(166, 5) = 512*205+204;
   P(166, 6) = 512*204+171;
   P(166, 7) = 512*171+170;
   P(166, 8) = 512*170+79;
   P(166, 9) = 512*79+76;
   P(167, 0) = 512*78+87;
   P(167, 1) = 512*87+84;
   P(167, 2) = 512*84+85;
   P(167, 3) = 512*85+86;
   P(167, 4) = 512*86+209;
   P(167, 5) = 512*209+210;
   P(167, 6) = 512*210+211;
   P(167, 7) = 512*211+200;
   P(167, 8) = 512*200+201;
   P(167, 9) = 512*201+78;
   P(168, 0) = 512*78+87;
   P(168, 1) = 512*87+178;
   P(168, 2) = 512*178+179;
   P(168, 3) = 512*179+212;
   P(168, 4) = 512*212+215;
   P(168, 5) = 512*215+206;
   P(168, 6) = 512*206+205;
   P(168, 7) = 512*205+200;
   P(168, 8) = 512*200+201;
   P(168, 9) = 512*201+78;
   P(169, 0) = 512*80+81;
   P(169, 1) = 512*81+82;
   P(169, 2) = 512*82+83;
   P(169, 3) = 512*83+116;
   P(169, 4) = 512*116+117;
   P(169, 5) = 512*117+118;
   P(169, 6) = 512*118+127;
   P(169, 7) = 512*127+124;
   P(169, 8) = 512*124+91;
   P(169, 9) = 512*91+80;
   P(170, 0) = 512*80+81;
   P(170, 1) = 512*81+82;
   P(170, 2) = 512*82+83;
   P(170, 3) = 512*83+116;
   P(170, 4) = 512*116+119;
   P(170, 5) = 512*119+210;
   P(170, 6) = 512*210+209;
   P(170, 7) = 512*209+86;
   P(170, 8) = 512*86+85;
   P(170, 9) = 512*85+80;
   P(171, 0) = 512*80+81;
   P(171, 1) = 512*81+82;
   P(171, 2) = 512*82+503;
   P(171, 3) = 512*503+500;
   P(171, 4) = 512*500+501;
   P(171, 5) = 512*501+502;
   P(171, 6) = 512*502+511;
   P(171, 7) = 512*511+90;
   P(171, 8) = 512*90+91;
   P(171, 9) = 512*91+80;
   P(172, 0) = 512*80+81;
   P(172, 1) = 512*81+470;
   P(172, 2) = 512*470+469;
   P(172, 3) = 512*469+464;
   P(172, 4) = 512*464+475;
   P(172, 5) = 512*475+508;
   P(172, 6) = 512*508+511;
   P(172, 7) = 512*511+90;
   P(172, 8) = 512*90+91;
   P(172, 9) = 512*91+80;
   P(173, 0) = 512*80+81;
   P(173, 1) = 512*81+470;
   P(173, 2) = 512*470+479;
   P(173, 3) = 512*479+476;
   P(173, 4) = 512*476+477;
   P(173, 5) = 512*477+478;
   P(173, 6) = 512*478+89;
   P(173, 7) = 512*89+90;
   P(173, 8) = 512*90+91;
   P(173, 9) = 512*91+80;
   P(174, 0) = 512*80+85;
   P(174, 1) = 512*85+86;
   P(174, 2) = 512*86+95;
   P(174, 3) = 512*95+92;
   P(174, 4) = 512*92+93;
   P(174, 5) = 512*93+88;
   P(174, 6) = 512*88+89;
   P(174, 7) = 512*89+90;
   P(174, 8) = 512*90+91;
   P(174, 9) = 512*91+80;
   P(175, 0) = 512*80+85;
   P(175, 1) = 512*85+86;
   P(175, 2) = 512*86+209;
   P(175, 3) = 512*209+208;
   P(175, 4) = 512*208+219;
   P(175, 5) = 512*219+218;
   P(175, 6) = 512*218+127;
   P(175, 7) = 512*127+124;
   P(175, 8) = 512*124+91;
   P(175, 9) = 512*91+80;
   P(176, 0) = 512*81+82;
   P(176, 1) = 512*82+503;
   P(176, 2) = 512*503+500;
   P(176, 3) = 512*500+467;
   P(176, 4) = 512*467+466;
   P(176, 5) = 512*466+465;
   P(176, 6) = 512*465+464;
   P(176, 7) = 512*464+469;
   P(176, 8) = 512*469+470;
   P(176, 9) = 512*470+81;
   P(177, 0) = 512*82+83;
   P(177, 1) = 512*83+116;
   P(177, 2) = 512*116+117;
   P(177, 3) = 512*117+112;
   P(177, 4) = 512*112+113;
   P(177, 5) = 512*113+502;
   P(177, 6) = 512*502+501;
   P(177, 7) = 512*501+500;
   P(177, 8) = 512*500+503;
   P(177, 9) = 512*503+82;
   P(178, 0) = 512*82+83;
   P(178, 1) = 512*83+116;
   P(178, 2) = 512*116+119;
   P(178, 3) = 512*119+110;
   P(178, 4) = 512*110+109;
   P(178, 5) = 512*109+104;
   P(178, 6) = 512*104+105;
   P(178, 7) = 512*105+494;
   P(178, 8) = 512*494+503;
   P(178, 9) = 512*503+82;
   P(179, 0) = 512*84+85;
   P(179, 1) = 512*85+86;
   P(179, 2) = 512*86+95;
   P(179, 3) = 512*95+186;
   P(179, 4) = 512*186+187;
   P(179, 5) = 512*187+176;
   P(179, 6) = 512*176+177;
   P(179, 7) = 512*177+178;
   P(179, 8) = 512*178+87;
   P(179, 9) = 512*87+84;
   P(180, 0) = 512*84+85;
   P(180, 1) = 512*85+86;
   P(180, 2) = 512*86+209;
   P(180, 3) = 512*209+208;
   P(180, 4) = 512*208+213;
   P(180, 5) = 512*213+212;
   P(180, 6) = 512*212+179;
   P(180, 7) = 512*179+178;
   P(180, 8) = 512*178+87;
   P(180, 9) = 512*87+84;
   P(181, 0) = 512*86+95;
   P(181, 1) = 512*95+92;
   P(181, 2) = 512*92+93;
   P(181, 3) = 512*93+94;
   P(181, 4) = 512*94+217;
   P(181, 5) = 512*217+218;
   P(181, 6) = 512*218+219;
   P(181, 7) = 512*219+208;
   P(181, 8) = 512*208+209;
   P(181, 9) = 512*209+86;
   P(182, 0) = 512*86+95;
   P(182, 1) = 512*95+186;
   P(182, 2) = 512*186+187;
   P(182, 3) = 512*187+220;
   P(182, 4) = 512*220+223;
   P(182, 5) = 512*223+214;
   P(182, 6) = 512*214+213;
   P(182, 7) = 512*213+208;
   P(182, 8) = 512*208+209;
   P(182, 9) = 512*209+86;
   P(183, 0) = 512*88+89;
   P(183, 1) = 512*89+90;
   P(183, 2) = 512*90+91;
   P(183, 3) = 512*91+124;
   P(183, 4) = 512*124+127;
   P(183, 5) = 512*127+218;
   P(183, 6) = 512*218+217;
   P(183, 7) = 512*217+94;
   P(183, 8) = 512*94+93;
   P(183, 9) = 512*93+88;
   P(184, 0) = 512*89+90;
   P(184, 1) = 512*90+511;
   P(184, 2) = 512*511+508;
   P(184, 3) = 512*508+475;
   P(184, 4) = 512*475+474;
   P(184, 5) = 512*474+473;
   P(184, 6) = 512*473+472;
   P(184, 7) = 512*472+477;
   P(184, 8) = 512*477+478;
   P(184, 9) = 512*478+89;
   P(185, 0) = 512*90+91;
   P(185, 1) = 512*91+124;
   P(185, 2) = 512*124+125;
   P(185, 3) = 512*125+120;
   P(185, 4) = 512*120+121;
   P(185, 5) = 512*121+510;
   P(185, 6) = 512*510+509;
   P(185, 7) = 512*509+508;
   P(185, 8) = 512*508+511;
   P(185, 9) = 512*511+90;
   P(186, 0) = 512*90+91;
   P(186, 1) = 512*91+124;
   P(186, 2) = 512*124+127;
   P(186, 3) = 512*127+118;
   P(186, 4) = 512*118+117;
   P(186, 5) = 512*117+112;
   P(186, 6) = 512*112+113;
   P(186, 7) = 512*113+502;
   P(186, 8) = 512*502+511;
   P(186, 9) = 512*511+90;
   P(187, 0) = 512*92+93;
   P(187, 1) = 512*93+94;
   P(187, 2) = 512*94+217;
   P(187, 3) = 512*217+216;
   P(187, 4) = 512*216+221;
   P(187, 5) = 512*221+220;
   P(187, 6) = 512*220+187;
   P(187, 7) = 512*187+186;
   P(187, 8) = 512*186+95;
   P(187, 9) = 512*95+92;
   P(188, 0) = 512*96+97;
   P(188, 1) = 512*97+98;
   P(188, 2) = 512*98+99;
   P(188, 3) = 512*99+120;
   P(188, 4) = 512*120+125;
   P(188, 5) = 512*125+126;
   P(188, 6) = 512*126+103;
   P(188, 7) = 512*103+100;
   P(188, 8) = 512*100+101;
   P(188, 9) = 512*101+96;
   P(189, 0) = 512*96+97;
   P(189, 1) = 512*97+98;
   P(189, 2) = 512*98+391;
   P(189, 3) = 512*391+388;
   P(189, 4) = 512*388+389;
   P(189, 5) = 512*389+390;
   P(189, 6) = 512*390+399;
   P(189, 7) = 512*399+106;
   P(189, 8) = 512*106+107;
   P(189, 9) = 512*107+96;
   P(190, 0) = 512*96+97;
   P(190, 1) = 512*97+486;
   P(190, 2) = 512*486+485;
   P(190, 3) = 512*485+480;
   P(190, 4) = 512*480+491;
   P(190, 5) = 512*491+396;
   P(190, 6) = 512*396+399;
   P(190, 7) = 512*399+106;
   P(190, 8) = 512*106+107;
   P(190, 9) = 512*107+96;
   P(191, 0) = 512*96+97;
   P(191, 1) = 512*97+486;
   P(191, 2) = 512*486+495;
   P(191, 3) = 512*495+492;
   P(191, 4) = 512*492+493;
   P(191, 5) = 512*493+494;
   P(191, 6) = 512*494+105;
   P(191, 7) = 512*105+106;
   P(191, 8) = 512*106+107;
   P(191, 9) = 512*107+96;
   P(192, 0) = 512*96+101;
   P(192, 1) = 512*101+102;
   P(192, 2) = 512*102+111;
   P(192, 3) = 512*111+108;
   P(192, 4) = 512*108+109;
   P(192, 5) = 512*109+104;
   P(192, 6) = 512*104+105;
   P(192, 7) = 512*105+106;
   P(192, 8) = 512*106+107;
   P(192, 9) = 512*107+96;
   P(193, 0) = 512*97+98;
   P(193, 1) = 512*98+99;
   P(193, 2) = 512*99+120;
   P(193, 3) = 512*120+121;
   P(193, 4) = 512*121+510;
   P(193, 5) = 512*510+487;
   P(193, 6) = 512*487+484;
   P(193, 7) = 512*484+485;
   P(193, 8) = 512*485+486;
   P(193, 9) = 512*486+97;
   P(194, 0) = 512*97+98;
   P(194, 1) = 512*98+391;
   P(194, 2) = 512*391+388;
   P(194, 3) = 512*388+483;
   P(194, 4) = 512*483+482;
   P(194, 5) = 512*482+481;
   P(194, 6) = 512*481+480;
   P(194, 7) = 512*480+485;
   P(194, 8) = 512*485+486;
   P(194, 9) = 512*486+97;
   P(195, 0) = 512*98+99;
   P(195, 1) = 512*99+120;
   P(195, 2) = 512*120+121;
   P(195, 3) = 512*121+122;
   P(195, 4) = 512*122+415;
   P(195, 5) = 512*415+412;
   P(195, 6) = 512*412+413;
   P(195, 7) = 512*413+414;
   P(195, 8) = 512*414+391;
   P(195, 9) = 512*391+98;
   P(196, 0) = 512*98+99;
   P(196, 1) = 512*99+120;
   P(196, 2) = 512*120+121;
   P(196, 3) = 512*121+510;
   P(196, 4) = 512*510+509;
   P(196, 5) = 512*509+504;
   P(196, 6) = 512*504+483;
   P(196, 7) = 512*483+388;
   P(196, 8) = 512*388+391;
   P(196, 9) = 512*391+98;
   P(197, 0) = 512*100+101;
   P(197, 1) = 512*101+102;
   P(197, 2) = 512*102+111;
   P(197, 3) = 512*111+202;
   P(197, 4) = 512*202+203;
   P(197, 5) = 512*203+192;
   P(197, 6) = 512*192+193;
   P(197, 7) = 512*193+194;
   P(197, 8) = 512*194+103;
   P(197, 9) = 512*103+100;
   P(198, 0) = 512*100+101;
   P(198, 1) = 512*101+102;
   P(198, 2) = 512*102+225;
   P(198, 3) = 512*225+224;
   P(198, 4) = 512*224+229;
   P(198, 5) = 512*229+228;
   P(198, 6) = 512*228+195;
   P(198, 7) = 512*195+194;
   P(198, 8) = 512*194+103;
   P(198, 9) = 512*103+100;
   P(199, 0) = 512*100+101;
   P(199, 1) = 512*101+102;
   P(199, 2) = 512*102+225;
   P(199, 3) = 512*225+226;
   P(199, 4) = 512*226+227;
   P(199, 5) = 512*227+248;
   P(199, 6) = 512*248+249;
   P(199, 7) = 512*249+126;
   P(199, 8) = 512*126+103;
   P(199, 9) = 512*103+100;
   P(200, 0) = 512*102+111;
   P(200, 1) = 512*111+108;
   P(200, 2) = 512*108+109;
   P(200, 3) = 512*109+110;
   P(200, 4) = 512*110+233;
   P(200, 5) = 512*233+234;
   P(200, 6) = 512*234+235;
   P(200, 7) = 512*235+224;
   P(200, 8) = 512*224+225;
   P(200, 9) = 512*225+102;
   P(201, 0) = 512*102+111;
   P(201, 1) = 512*111+202;
   P(201, 2) = 512*202+203;
   P(201, 3) = 512*203+236;
   P(201, 4) = 512*236+239;
   P(201, 5) = 512*239+230;
   P(201, 6) = 512*230+229;
   P(201, 7) = 512*229+224;
   P(201, 8) = 512*224+225;
   P(201, 9) = 512*225+102;
   P(202, 0) = 512*103+126;
   P(202, 1) = 512*126+125;
   P(202, 2) = 512*125+124;
   P(202, 3) = 512*124+127;
   P(202, 4) = 512*127+218;
   P(202, 5) = 512*218+217;
   P(202, 6) = 512*217+216;
   P(202, 7) = 512*216+195;
   P(202, 8) = 512*195+194;
   P(202, 9) = 512*194+103;
   P(203, 0) = 512*103+126;
   P(203, 1) = 512*126+249;
   P(203, 2) = 512*249+248;
   P(203, 3) = 512*248+253;
   P(203, 4) = 512*253+254;
   P(203, 5) = 512*254+231;
   P(203, 6) = 512*231+228;
   P(203, 7) = 512*228+195;
   P(203, 8) = 512*195+194;
   P(203, 9) = 512*194+103;
   P(204, 0) = 512*104+105;
   P(204, 1) = 512*105+106;
   P(204, 2) = 512*106+399;
   P(204, 3) = 512*399+396;
   P(204, 4) = 512*396+397;
   P(204, 5) = 512*397+398;
   P(204, 6) = 512*398+407;
   P(204, 7) = 512*407+114;
   P(204, 8) = 512*114+115;
   P(204, 9) = 512*115+104;
   P(205, 0) = 512*104+105;
   P(205, 1) = 512*105+494;
   P(205, 2) = 512*494+493;
   P(205, 3) = 512*493+488;
   P(205, 4) = 512*488+499;
   P(205, 5) = 512*499+404;
   P(205, 6) = 512*404+407;
   P(205, 7) = 512*407+114;
   P(205, 8) = 512*114+115;
   P(205, 9) = 512*115+104;
   P(206, 0) = 512*104+105;
   P(206, 1) = 512*105+494;
   P(206, 2) = 512*494+503;
   P(206, 3) = 512*503+500;
   P(206, 4) = 512*500+501;
   P(206, 5) = 512*501+502;
   P(206, 6) = 512*502+113;
   P(206, 7) = 512*113+114;
   P(206, 8) = 512*114+115;
   P(206, 9) = 512*115+104;
   P(207, 0) = 512*104+109;
   P(207, 1) = 512*109+110;
   P(207, 2) = 512*110+119;
   P(207, 3) = 512*119+116;
   P(207, 4) = 512*116+117;
   P(207, 5) = 512*117+112;
   P(207, 6) = 512*112+113;
   P(207, 7) = 512*113+114;
   P(207, 8) = 512*114+115;
   P(207, 9) = 512*115+104;
   P(208, 0) = 512*105+106;
   P(208, 1) = 512*106+399;
   P(208, 2) = 512*399+396;
   P(208, 3) = 512*396+491;
   P(208, 4) = 512*491+490;
   P(208, 5) = 512*490+489;
   P(208, 6) = 512*489+488;
   P(208, 7) = 512*488+493;
   P(208, 8) = 512*493+494;
   P(208, 9) = 512*494+105;
   P(209, 0) = 512*108+109;
   P(209, 1) = 512*109+110;
   P(209, 2) = 512*110+119;
   P(209, 3) = 512*119+210;
   P(209, 4) = 512*210+211;
   P(209, 5) = 512*211+200;
   P(209, 6) = 512*200+201;
   P(209, 7) = 512*201+202;
   P(209, 8) = 512*202+111;
   P(209, 9) = 512*111+108;
   P(210, 0) = 512*108+109;
   P(210, 1) = 512*109+110;
   P(210, 2) = 512*110+233;
   P(210, 3) = 512*233+232;
   P(210, 4) = 512*232+237;
   P(210, 5) = 512*237+236;
   P(210, 6) = 512*236+203;
   P(210, 7) = 512*203+202;
   P(210, 8) = 512*202+111;
   P(210, 9) = 512*111+108;
   P(211, 0) = 512*110+119;
   P(211, 1) = 512*119+116;
   P(211, 2) = 512*116+117;
   P(211, 3) = 512*117+118;
   P(211, 4) = 512*118+241;
   P(211, 5) = 512*241+242;
   P(211, 6) = 512*242+243;
   P(211, 7) = 512*243+232;
   P(211, 8) = 512*232+233;
   P(211, 9) = 512*233+110;
   P(212, 0) = 512*110+119;
   P(212, 1) = 512*119+210;
   P(212, 2) = 512*210+211;
   P(212, 3) = 512*211+244;
   P(212, 4) = 512*244+247;
   P(212, 5) = 512*247+238;
   P(212, 6) = 512*238+237;
   P(212, 7) = 512*237+232;
   P(212, 8) = 512*232+233;
   P(212, 9) = 512*233+110;
   P(213, 0) = 512*112+113;
   P(213, 1) = 512*113+114;
   P(213, 2) = 512*114+407;
   P(213, 3) = 512*407+404;
   P(213, 4) = 512*404+405;
   P(213, 5) = 512*405+406;
   P(213, 6) = 512*406+415;
   P(213, 7) = 512*415+122;
   P(213, 8) = 512*122+123;
   P(213, 9) = 512*123+112;
   P(214, 0) = 512*112+113;
   P(214, 1) = 512*113+502;
   P(214, 2) = 512*502+501;
   P(214, 3) = 512*501+496;
   P(214, 4) = 512*496+507;
   P(214, 5) = 512*507+412;
   P(214, 6) = 512*412+415;
   P(214, 7) = 512*415+122;
   P(214, 8) = 512*122+123;
   P(214, 9) = 512*123+112;
   P(215, 0) = 512*112+113;
   P(215, 1) = 512*113+502;
   P(215, 2) = 512*502+511;
   P(215, 3) = 512*511+508;
   P(215, 4) = 512*508+509;
   P(215, 5) = 512*509+510;
   P(215, 6) = 512*510+121;
   P(215, 7) = 512*121+122;
   P(215, 8) = 512*122+123;
   P(215, 9) = 512*123+112;
   P(216, 0) = 512*112+117;
   P(216, 1) = 512*117+118;
   P(216, 2) = 512*118+127;
   P(216, 3) = 512*127+124;
   P(216, 4) = 512*124+125;
   P(216, 5) = 512*125+120;
   P(216, 6) = 512*120+121;
   P(216, 7) = 512*121+122;
   P(216, 8) = 512*122+123;
   P(216, 9) = 512*123+112;
   P(217, 0) = 512*113+114;
   P(217, 1) = 512*114+407;
   P(217, 2) = 512*407+404;
   P(217, 3) = 512*404+499;
   P(217, 4) = 512*499+498;
   P(217, 5) = 512*498+497;
   P(217, 6) = 512*497+496;
   P(217, 7) = 512*496+501;
   P(217, 8) = 512*501+502;
   P(217, 9) = 512*502+113;
   P(218, 0) = 512*116+117;
   P(218, 1) = 512*117+118;
   P(218, 2) = 512*118+127;
   P(218, 3) = 512*127+218;
   P(218, 4) = 512*218+219;
   P(218, 5) = 512*219+208;
   P(218, 6) = 512*208+209;
   P(218, 7) = 512*209+210;
   P(218, 8) = 512*210+119;
   P(218, 9) = 512*119+116;
   P(219, 0) = 512*116+117;
   P(219, 1) = 512*117+118;
   P(219, 2) = 512*118+241;
   P(219, 3) = 512*241+240;
   P(219, 4) = 512*240+245;
   P(219, 5) = 512*245+244;
   P(219, 6) = 512*244+211;
   P(219, 7) = 512*211+210;
   P(219, 8) = 512*210+119;
   P(219, 9) = 512*119+116;
   P(220, 0) = 512*118+127;
   P(220, 1) = 512*127+124;
   P(220, 2) = 512*124+125;
   P(220, 3) = 512*125+126;
   P(220, 4) = 512*126+249;
   P(220, 5) = 512*249+250;
   P(220, 6) = 512*250+251;
   P(220, 7) = 512*251+240;
   P(220, 8) = 512*240+241;
   P(220, 9) = 512*241+118;
   P(221, 0) = 512*118+127;
   P(221, 1) = 512*127+218;
   P(221, 2) = 512*218+219;
   P(221, 3) = 512*219+252;
   P(221, 4) = 512*252+255;
   P(221, 5) = 512*255+246;
   P(221, 6) = 512*246+245;
   P(221, 7) = 512*245+240;
   P(221, 8) = 512*240+241;
   P(221, 9) = 512*241+118;
   P(222, 0) = 512*121+122;
   P(222, 1) = 512*122+415;
   P(222, 2) = 512*415+412;
   P(222, 3) = 512*412+507;
   P(222, 4) = 512*507+506;
   P(222, 5) = 512*506+505;
   P(222, 6) = 512*505+504;
   P(222, 7) = 512*504+509;
   P(222, 8) = 512*509+510;
   P(222, 9) = 512*510+121;
   P(223, 0) = 512*124+125;
   P(223, 1) = 512*125+126;
   P(223, 2) = 512*126+249;
   P(223, 3) = 512*249+248;
   P(223, 4) = 512*248+253;
   P(223, 5) = 512*253+252;
   P(223, 6) = 512*252+219;
   P(223, 7) = 512*219+218;
   P(223, 8) = 512*218+127;
   P(223, 9) = 512*127+124;
   P(224, 0) = 512*128+129;
   P(224, 1) = 512*129+130;
   P(224, 2) = 512*130+131;
   P(224, 3) = 512*131+164;
   P(224, 4) = 512*164+165;
   P(224, 5) = 512*165+166;
   P(224, 6) = 512*166+175;
   P(224, 7) = 512*175+172;
   P(224, 8) = 512*172+139;
   P(224, 9) = 512*139+128;
   P(225, 0) = 512*128+129;
   P(225, 1) = 512*129+130;
   P(225, 2) = 512*130+131;
   P(225, 3) = 512*131+164;
   P(225, 4) = 512*164+167;
   P(225, 5) = 512*167+258;
   P(225, 6) = 512*258+257;
   P(225, 7) = 512*257+134;
   P(225, 8) = 512*134+133;
   P(225, 9) = 512*133+128;
   P(226, 0) = 512*128+129;
   P(226, 1) = 512*129+130;
   P(226, 2) = 512*130+131;
   P(226, 3) = 512*131+152;
   P(226, 4) = 512*152+157;
   P(226, 5) = 512*157+158;
   P(226, 6) = 512*158+135;
   P(226, 7) = 512*135+132;
   P(226, 8) = 512*132+133;
   P(226, 9) = 512*133+128;
   P(227, 0) = 512*128+133;
   P(227, 1) = 512*133+134;
   P(227, 2) = 512*134+143;
   P(227, 3) = 512*143+140;
   P(227, 4) = 512*140+141;
   P(227, 5) = 512*141+136;
   P(227, 6) = 512*136+137;
   P(227, 7) = 512*137+138;
   P(227, 8) = 512*138+139;
   P(227, 9) = 512*139+128;
   P(228, 0) = 512*128+133;
   P(228, 1) = 512*133+134;
   P(228, 2) = 512*134+257;
   P(228, 3) = 512*257+256;
   P(228, 4) = 512*256+267;
   P(228, 5) = 512*267+266;
   P(228, 6) = 512*266+175;
   P(228, 7) = 512*175+172;
   P(228, 8) = 512*172+139;
   P(228, 9) = 512*139+128;
   P(229, 0) = 512*131+164;
   P(229, 1) = 512*164+167;
   P(229, 2) = 512*167+190;
   P(229, 3) = 512*190+189;
   P(229, 4) = 512*189+188;
   P(229, 5) = 512*188+155;
   P(229, 6) = 512*155+154;
   P(229, 7) = 512*154+153;
   P(229, 8) = 512*153+152;
   P(229, 9) = 512*152+131;
   P(230, 0) = 512*131+164;
   P(230, 1) = 512*164+167;
   P(230, 2) = 512*167+258;
   P(230, 3) = 512*258+259;
   P(230, 4) = 512*259+280;
   P(230, 5) = 512*280+281;
   P(230, 6) = 512*281+158;
   P(230, 7) = 512*158+157;
   P(230, 8) = 512*157+152;
   P(230, 9) = 512*152+131;
   P(231, 0) = 512*132+133;
   P(231, 1) = 512*133+134;
   P(231, 2) = 512*134+143;
   P(231, 3) = 512*143+140;
   P(231, 4) = 512*140+235;
   P(231, 5) = 512*235+224;
   P(231, 6) = 512*224+225;
   P(231, 7) = 512*225+226;
   P(231, 8) = 512*226+227;
   P(231, 9) = 512*227+132;
   P(232, 0) = 512*132+133;
   P(232, 1) = 512*133+134;
   P(232, 2) = 512*134+143;
   P(232, 3) = 512*143+362;
   P(232, 4) = 512*362+363;
   P(232, 5) = 512*363+352;
   P(232, 6) = 512*352+353;
   P(232, 7) = 512*353+354;
   P(232, 8) = 512*354+135;
   P(232, 9) = 512*135+132;
   P(233, 0) = 512*132+133;
   P(233, 1) = 512*133+134;
   P(233, 2) = 512*134+257;
   P(233, 3) = 512*257+256;
   P(233, 4) = 512*256+261;
   P(233, 5) = 512*261+260;
   P(233, 6) = 512*260+355;
   P(233, 7) = 512*355+354;
   P(233, 8) = 512*354+135;
   P(233, 9) = 512*135+132;
   P(234, 0) = 512*132+133;
   P(234, 1) = 512*133+134;
   P(234, 2) = 512*134+257;
   P(234, 3) = 512*257+258;
   P(234, 4) = 512*258+259;
   P(234, 5) = 512*259+280;
   P(234, 6) = 512*280+281;
   P(234, 7) = 512*281+158;
   P(234, 8) = 512*158+135;
   P(234, 9) = 512*135+132;
   P(235, 0) = 512*132+227;
   P(235, 1) = 512*227+226;
   P(235, 2) = 512*226+225;
   P(235, 3) = 512*225+224;
   P(235, 4) = 512*224+229;
   P(235, 5) = 512*229+230;
   P(235, 6) = 512*230+353;
   P(235, 7) = 512*353+354;
   P(235, 8) = 512*354+135;
   P(235, 9) = 512*135+132;
   P(236, 0) = 512*132+227;
   P(236, 1) = 512*227+248;
   P(236, 2) = 512*248+249;
   P(236, 3) = 512*249+250;
   P(236, 4) = 512*250+251;
   P(236, 5) = 512*251+156;
   P(236, 6) = 512*156+157;
   P(236, 7) = 512*157+158;
   P(236, 8) = 512*158+135;
   P(236, 9) = 512*135+132;
   P(237, 0) = 512*132+227;
   P(237, 1) = 512*227+248;
   P(237, 2) = 512*248+253;
   P(237, 3) = 512*253+254;
   P(237, 4) = 512*254+377;
   P(237, 5) = 512*377+376;
   P(237, 6) = 512*376+355;
   P(237, 7) = 512*355+354;
   P(237, 8) = 512*354+135;
   P(237, 9) = 512*135+132;
   P(238, 0) = 512*134+143;
   P(238, 1) = 512*143+140;
   P(238, 2) = 512*140+141;
   P(238, 3) = 512*141+142;
   P(238, 4) = 512*142+265;
   P(238, 5) = 512*265+266;
   P(238, 6) = 512*266+267;
   P(238, 7) = 512*267+256;
   P(238, 8) = 512*256+257;
   P(238, 9) = 512*257+134;
   P(239, 0) = 512*134+143;
   P(239, 1) = 512*143+362;
   P(239, 2) = 512*362+363;
   P(239, 3) = 512*363+268;
   P(239, 4) = 512*268+271;
   P(239, 5) = 512*271+262;
   P(239, 6) = 512*262+261;
   P(239, 7) = 512*261+256;
   P(239, 8) = 512*256+257;
   P(239, 9) = 512*257+134;
   P(240, 0) = 512*135+158;
   P(240, 1) = 512*158+157;
   P(240, 2) = 512*157+156;
   P(240, 3) = 512*156+159;
   P(240, 4) = 512*159+378;
   P(240, 5) = 512*378+377;
   P(240, 6) = 512*377+376;
   P(240, 7) = 512*376+355;
   P(240, 8) = 512*355+354;
   P(240, 9) = 512*354+135;
   P(241, 0) = 512*135+158;
   P(241, 1) = 512*158+281;
   P(241, 2) = 512*281+280;
   P(241, 3) = 512*280+285;
   P(241, 4) = 512*285+286;
   P(241, 5) = 512*286+263;
   P(241, 6) = 512*263+260;
   P(241, 7) = 512*260+355;
   P(241, 8) = 512*355+354;
   P(241, 9) = 512*354+135;
   P(242, 0) = 512*136+137;
   P(242, 1) = 512*137+138;
   P(242, 2) = 512*138+139;
   P(242, 3) = 512*139+172;
   P(242, 4) = 512*172+173;
   P(242, 5) = 512*173+174;
   P(242, 6) = 512*174+183;
   P(242, 7) = 512*183+180;
   P(242, 8) = 512*180+147;
   P(242, 9) = 512*147+136;
   P(243, 0) = 512*136+137;
   P(243, 1) = 512*137+138;
   P(243, 2) = 512*138+139;
   P(243, 3) = 512*139+172;
   P(243, 4) = 512*172+175;
   P(243, 5) = 512*175+266;
   P(243, 6) = 512*266+265;
   P(243, 7) = 512*265+142;
   P(243, 8) = 512*142+141;
   P(243, 9) = 512*141+136;
   P(244, 0) = 512*136+141;
   P(244, 1) = 512*141+142;
   P(244, 2) = 512*142+151;
   P(244, 3) = 512*151+148;
   P(244, 4) = 512*148+149;
   P(244, 5) = 512*149+144;
   P(244, 6) = 512*144+145;
   P(244, 7) = 512*145+146;
   P(244, 8) = 512*146+147;
   P(244, 9) = 512*147+136;
   P(245, 0) = 512*136+141;
   P(245, 1) = 512*141+142;
   P(245, 2) = 512*142+265;
   P(245, 3) = 512*265+264;
   P(245, 4) = 512*264+275;
   P(245, 5) = 512*275+274;
   P(245, 6) = 512*274+183;
   P(245, 7) = 512*183+180;
   P(245, 8) = 512*180+147;
   P(245, 9) = 512*147+136;
   P(246, 0) = 512*140+141;
   P(246, 1) = 512*141+142;
   P(246, 2) = 512*142+151;
   P(246, 3) = 512*151+148;
   P(246, 4) = 512*148+243;
   P(246, 5) = 512*243+232;
   P(246, 6) = 512*232+233;
   P(246, 7) = 512*233+234;
   P(246, 8) = 512*234+235;
   P(246, 9) = 512*235+140;
   P(247, 0) = 512*140+141;
   P(247, 1) = 512*141+142;
   P(247, 2) = 512*142+151;
   P(247, 3) = 512*151+370;
   P(247, 4) = 512*370+371;
   P(247, 5) = 512*371+360;
   P(247, 6) = 512*360+361;
   P(247, 7) = 512*361+362;
   P(247, 8) = 512*362+143;
   P(247, 9) = 512*143+140;
   P(248, 0) = 512*140+141;
   P(248, 1) = 512*141+142;
   P(248, 2) = 512*142+265;
   P(248, 3) = 512*265+264;
   P(248, 4) = 512*264+269;
   P(248, 5) = 512*269+268;
   P(248, 6) = 512*268+363;
   P(248, 7) = 512*363+362;
   P(248, 8) = 512*362+143;
   P(248, 9) = 512*143+140;
   P(249, 0) = 512*140+235;
   P(249, 1) = 512*235+234;
   P(249, 2) = 512*234+233;
   P(249, 3) = 512*233+232;
   P(249, 4) = 512*232+237;
   P(249, 5) = 512*237+238;
   P(249, 6) = 512*238+361;
   P(249, 7) = 512*361+362;
   P(249, 8) = 512*362+143;
   P(249, 9) = 512*143+140;
   P(250, 0) = 512*140+235;
   P(250, 1) = 512*235+224;
   P(250, 2) = 512*224+229;
   P(250, 3) = 512*229+230;
   P(250, 4) = 512*230+353;
   P(250, 5) = 512*353+352;
   P(250, 6) = 512*352+363;
   P(250, 7) = 512*363+362;
   P(250, 8) = 512*362+143;
   P(250, 9) = 512*143+140;
   P(251, 0) = 512*142+151;
   P(251, 1) = 512*151+148;
   P(251, 2) = 512*148+149;
   P(251, 3) = 512*149+150;
   P(251, 4) = 512*150+273;
   P(251, 5) = 512*273+274;
   P(251, 6) = 512*274+275;
   P(251, 7) = 512*275+264;
   P(251, 8) = 512*264+265;
   P(251, 9) = 512*265+142;
   P(252, 0) = 512*142+151;
   P(252, 1) = 512*151+370;
   P(252, 2) = 512*370+371;
   P(252, 3) = 512*371+276;
   P(252, 4) = 512*276+279;
   P(252, 5) = 512*279+270;
   P(252, 6) = 512*270+269;
   P(252, 7) = 512*269+264;
   P(252, 8) = 512*264+265;
   P(252, 9) = 512*265+142;
   P(253, 0) = 512*144+145;
   P(253, 1) = 512*145+146;
   P(253, 2) = 512*146+147;
   P(253, 3) = 512*147+180;
   P(253, 4) = 512*180+181;
   P(253, 5) = 512*181+182;
   P(253, 6) = 512*182+191;
   P(253, 7) = 512*191+188;
   P(253, 8) = 512*188+155;
   P(253, 9) = 512*155+144;
   P(254, 0) = 512*144+145;
   P(254, 1) = 512*145+146;
   P(254, 2) = 512*146+147;
   P(254, 3) = 512*147+180;
   P(254, 4) = 512*180+183;
   P(254, 5) = 512*183+274;
   P(254, 6) = 512*274+273;
   P(254, 7) = 512*273+150;
   P(254, 8) = 512*150+149;
   P(254, 9) = 512*149+144;
   P(255, 0) = 512*144+149;
   P(255, 1) = 512*149+150;
   P(255, 2) = 512*150+159;
   P(255, 3) = 512*159+156;
   P(255, 4) = 512*156+157;
   P(255, 5) = 512*157+152;
   P(255, 6) = 512*152+153;
   P(255, 7) = 512*153+154;
   P(255, 8) = 512*154+155;
   P(255, 9) = 512*155+144;
   P(256, 0) = 512*144+149;
   P(256, 1) = 512*149+150;
   P(256, 2) = 512*150+273;
   P(256, 3) = 512*273+272;
   P(256, 4) = 512*272+283;
   P(256, 5) = 512*283+282;
   P(256, 6) = 512*282+191;
   P(256, 7) = 512*191+188;
   P(256, 8) = 512*188+155;
   P(256, 9) = 512*155+144;
   P(257, 0) = 512*148+149;
   P(257, 1) = 512*149+150;
   P(257, 2) = 512*150+159;
   P(257, 3) = 512*159+156;
   P(257, 4) = 512*156+251;
   P(257, 5) = 512*251+240;
   P(257, 6) = 512*240+241;
   P(257, 7) = 512*241+242;
   P(257, 8) = 512*242+243;
   P(257, 9) = 512*243+148;
   P(258, 0) = 512*148+149;
   P(258, 1) = 512*149+150;
   P(258, 2) = 512*150+159;
   P(258, 3) = 512*159+378;
   P(258, 4) = 512*378+379;
   P(258, 5) = 512*379+368;
   P(258, 6) = 512*368+369;
   P(258, 7) = 512*369+370;
   P(258, 8) = 512*370+151;
   P(258, 9) = 512*151+148;
   P(259, 0) = 512*148+149;
   P(259, 1) = 512*149+150;
   P(259, 2) = 512*150+273;
   P(259, 3) = 512*273+272;
   P(259, 4) = 512*272+277;
   P(259, 5) = 512*277+276;
   P(259, 6) = 512*276+371;
   P(259, 7) = 512*371+370;
   P(259, 8) = 512*370+151;
   P(259, 9) = 512*151+148;
   P(260, 0) = 512*148+243;
   P(260, 1) = 512*243+242;
   P(260, 2) = 512*242+241;
   P(260, 3) = 512*241+240;
   P(260, 4) = 512*240+245;
   P(260, 5) = 512*245+246;
   P(260, 6) = 512*246+369;
   P(260, 7) = 512*369+370;
   P(260, 8) = 512*370+151;
   P(260, 9) = 512*151+148;
   P(261, 0) = 512*148+243;
   P(261, 1) = 512*243+232;
   P(261, 2) = 512*232+237;
   P(261, 3) = 512*237+238;
   P(261, 4) = 512*238+361;
   P(261, 5) = 512*361+360;
   P(261, 6) = 512*360+371;
   P(261, 7) = 512*371+370;
   P(261, 8) = 512*370+151;
   P(261, 9) = 512*151+148;
   P(262, 0) = 512*150+159;
   P(262, 1) = 512*159+156;
   P(262, 2) = 512*156+157;
   P(262, 3) = 512*157+158;
   P(262, 4) = 512*158+281;
   P(262, 5) = 512*281+282;
   P(262, 6) = 512*282+283;
   P(262, 7) = 512*283+272;
   P(262, 8) = 512*272+273;
   P(262, 9) = 512*273+150;
   P(263, 0) = 512*150+159;
   P(263, 1) = 512*159+378;
   P(263, 2) = 512*378+379;
   P(263, 3) = 512*379+284;
   P(263, 4) = 512*284+287;
   P(263, 5) = 512*287+278;
   P(263, 6) = 512*278+277;
   P(263, 7) = 512*277+272;
   P(263, 8) = 512*272+273;
   P(263, 9) = 512*273+150;
   P(264, 0) = 512*152+153;
   P(264, 1) = 512*153+154;
   P(264, 2) = 512*154+155;
   P(264, 3) = 512*155+188;
   P(264, 4) = 512*188+191;
   P(264, 5) = 512*191+282;
   P(264, 6) = 512*282+281;
   P(264, 7) = 512*281+158;
   P(264, 8) = 512*158+157;
   P(264, 9) = 512*157+152;
   P(265, 0) = 512*156+157;
   P(265, 1) = 512*157+158;
   P(265, 2) = 512*158+281;
   P(265, 3) = 512*281+280;
   P(265, 4) = 512*280+285;
   P(265, 5) = 512*285+284;
   P(265, 6) = 512*284+379;
   P(265, 7) = 512*379+378;
   P(265, 8) = 512*378+159;
   P(265, 9) = 512*159+156;
   P(266, 0) = 512*156+251;
   P(266, 1) = 512*251+250;
   P(266, 2) = 512*250+249;
   P(266, 3) = 512*249+248;
   P(266, 4) = 512*248+253;
   P(266, 5) = 512*253+254;
   P(266, 6) = 512*254+377;
   P(266, 7) = 512*377+378;
   P(266, 8) = 512*378+159;
   P(266, 9) = 512*159+156;
   P(267, 0) = 512*156+251;
   P(267, 1) = 512*251+240;
   P(267, 2) = 512*240+245;
   P(267, 3) = 512*245+246;
   P(267, 4) = 512*246+369;
   P(267, 5) = 512*369+368;
   P(267, 6) = 512*368+379;
   P(267, 7) = 512*379+378;
   P(267, 8) = 512*378+159;
   P(267, 9) = 512*159+156;
   P(268, 0) = 512*160+161;
   P(268, 1) = 512*161+162;
   P(268, 2) = 512*162+163;
   P(268, 3) = 512*163+196;
   P(268, 4) = 512*196+197;
   P(268, 5) = 512*197+198;
   P(268, 6) = 512*198+207;
   P(268, 7) = 512*207+204;
   P(268, 8) = 512*204+171;
   P(268, 9) = 512*171+160;
   P(269, 0) = 512*160+161;
   P(269, 1) = 512*161+162;
   P(269, 2) = 512*162+163;
   P(269, 3) = 512*163+196;
   P(269, 4) = 512*196+199;
   P(269, 5) = 512*199+290;
   P(269, 6) = 512*290+289;
   P(269, 7) = 512*289+166;
   P(269, 8) = 512*166+165;
   P(269, 9) = 512*165+160;
   P(270, 0) = 512*160+161;
   P(270, 1) = 512*161+162;
   P(270, 2) = 512*162+163;
   P(270, 3) = 512*163+184;
   P(270, 4) = 512*184+189;
   P(270, 5) = 512*189+190;
   P(270, 6) = 512*190+167;
   P(270, 7) = 512*167+164;
   P(270, 8) = 512*164+165;
   P(270, 9) = 512*165+160;
   P(271, 0) = 512*160+165;
   P(271, 1) = 512*165+166;
   P(271, 2) = 512*166+175;
   P(271, 3) = 512*175+172;
   P(271, 4) = 512*172+173;
   P(271, 5) = 512*173+168;
   P(271, 6) = 512*168+169;
   P(271, 7) = 512*169+170;
   P(271, 8) = 512*170+171;
   P(271, 9) = 512*171+160;
   P(272, 0) = 512*160+165;
   P(272, 1) = 512*165+166;
   P(272, 2) = 512*166+289;
   P(272, 3) = 512*289+288;
   P(272, 4) = 512*288+299;
   P(272, 5) = 512*299+298;
   P(272, 6) = 512*298+207;
   P(272, 7) = 512*207+204;
   P(272, 8) = 512*204+171;
   P(272, 9) = 512*171+160;
   P(273, 0) = 512*163+196;
   P(273, 1) = 512*196+199;
   P(273, 2) = 512*199+222;
   P(273, 3) = 512*222+221;
   P(273, 4) = 512*221+220;
   P(273, 5) = 512*220+187;
   P(273, 6) = 512*187+186;
   P(273, 7) = 512*186+185;
   P(273, 8) = 512*185+184;
   P(273, 9) = 512*184+163;
   P(274, 0) = 512*163+196;
   P(274, 1) = 512*196+199;
   P(274, 2) = 512*199+290;
   P(274, 3) = 512*290+291;
   P(274, 4) = 512*291+312;
   P(274, 5) = 512*312+313;
   P(274, 6) = 512*313+190;
   P(274, 7) = 512*190+189;
   P(274, 8) = 512*189+184;
   P(274, 9) = 512*184+163;
   P(275, 0) = 512*164+165;
   P(275, 1) = 512*165+166;
   P(275, 2) = 512*166+175;
   P(275, 3) = 512*175+266;
   P(275, 4) = 512*266+267;
   P(275, 5) = 512*267+256;
   P(275, 6) = 512*256+257;
   P(275, 7) = 512*257+258;
   P(275, 8) = 512*258+167;
   P(275, 9) = 512*167+164;
   P(276, 0) = 512*164+165;
   P(276, 1) = 512*165+166;
   P(276, 2) = 512*166+289;
   P(276, 3) = 512*289+288;
   P(276, 4) = 512*288+293;
   P(276, 5) = 512*293+292;
   P(276, 6) = 512*292+259;
   P(276, 7) = 512*259+258;
   P(276, 8) = 512*258+167;
   P(276, 9) = 512*167+164;
   P(277, 0) = 512*164+165;
   P(277, 1) = 512*165+166;
   P(277, 2) = 512*166+289;
   P(277, 3) = 512*289+290;
   P(277, 4) = 512*290+291;
   P(277, 5) = 512*291+312;
   P(277, 6) = 512*312+313;
   P(277, 7) = 512*313+190;
   P(277, 8) = 512*190+167;
   P(277, 9) = 512*167+164;
   P(278, 0) = 512*166+175;
   P(278, 1) = 512*175+172;
   P(278, 2) = 512*172+173;
   P(278, 3) = 512*173+174;
   P(278, 4) = 512*174+297;
   P(278, 5) = 512*297+298;
   P(278, 6) = 512*298+299;
   P(278, 7) = 512*299+288;
   P(278, 8) = 512*288+289;
   P(278, 9) = 512*289+166;
   P(279, 0) = 512*166+175;
   P(279, 1) = 512*175+266;
   P(279, 2) = 512*266+267;
   P(279, 3) = 512*267+300;
   P(279, 4) = 512*300+303;
   P(279, 5) = 512*303+294;
   P(279, 6) = 512*294+293;
   P(279, 7) = 512*293+288;
   P(279, 8) = 512*288+289;
   P(279, 9) = 512*289+166;
   P(280, 0) = 512*167+190;
   P(280, 1) = 512*190+189;
   P(280, 2) = 512*189+188;
   P(280, 3) = 512*188+191;
   P(280, 4) = 512*191+282;
   P(280, 5) = 512*282+281;
   P(280, 6) = 512*281+280;
   P(280, 7) = 512*280+259;
   P(280, 8) = 512*259+258;
   P(280, 9) = 512*258+167;
   P(281, 0) = 512*167+190;
   P(281, 1) = 512*190+313;
   P(281, 2) = 512*313+312;
   P(281, 3) = 512*312+317;
   P(281, 4) = 512*317+318;
   P(281, 5) = 512*318+295;
   P(281, 6) = 512*295+292;
   P(281, 7) = 512*292+259;
   P(281, 8) = 512*259+258;
   P(281, 9) = 512*258+167;
   P(282, 0) = 512*168+169;
   P(282, 1) = 512*169+170;
   P(282, 2) = 512*170+171;
   P(282, 3) = 512*171+204;
   P(282, 4) = 512*204+205;
   P(282, 5) = 512*205+206;
   P(282, 6) = 512*206+215;
   P(282, 7) = 512*215+212;
   P(282, 8) = 512*212+179;
   P(282, 9) = 512*179+168;
   P(283, 0) = 512*168+169;
   P(283, 1) = 512*169+170;
   P(283, 2) = 512*170+171;
   P(283, 3) = 512*171+204;
   P(283, 4) = 512*204+207;
   P(283, 5) = 512*207+298;
   P(283, 6) = 512*298+297;
   P(283, 7) = 512*297+174;
   P(283, 8) = 512*174+173;
   P(283, 9) = 512*173+168;
   P(284, 0) = 512*168+173;
   P(284, 1) = 512*173+174;
   P(284, 2) = 512*174+183;
   P(284, 3) = 512*183+180;
   P(284, 4) = 512*180+181;
   P(284, 5) = 512*181+176;
   P(284, 6) = 512*176+177;
   P(284, 7) = 512*177+178;
   P(284, 8) = 512*178+179;
   P(284, 9) = 512*179+168;
   P(285, 0) = 512*168+173;
   P(285, 1) = 512*173+174;
   P(285, 2) = 512*174+297;
   P(285, 3) = 512*297+296;
   P(285, 4) = 512*296+307;
   P(285, 5) = 512*307+306;
   P(285, 6) = 512*306+215;
   P(285, 7) = 512*215+212;
   P(285, 8) = 512*212+179;
   P(285, 9) = 512*179+168;
   P(286, 0) = 512*172+173;
   P(286, 1) = 512*173+174;
   P(286, 2) = 512*174+183;
   P(286, 3) = 512*183+274;
   P(286, 4) = 512*274+275;
   P(286, 5) = 512*275+264;
   P(286, 6) = 512*264+265;
   P(286, 7) = 512*265+266;
   P(286, 8) = 512*266+175;
   P(286, 9) = 512*175+172;
   P(287, 0) = 512*172+173;
   P(287, 1) = 512*173+174;
   P(287, 2) = 512*174+297;
   P(287, 3) = 512*297+296;
   P(287, 4) = 512*296+301;
   P(287, 5) = 512*301+300;
   P(287, 6) = 512*300+267;
   P(287, 7) = 512*267+266;
   P(287, 8) = 512*266+175;
   P(287, 9) = 512*175+172;
   P(288, 0) = 512*174+183;
   P(288, 1) = 512*183+180;
   P(288, 2) = 512*180+181;
   P(288, 3) = 512*181+182;
   P(288, 4) = 512*182+305;
   P(288, 5) = 512*305+306;
   P(288, 6) = 512*306+307;
   P(288, 7) = 512*307+296;
   P(288, 8) = 512*296+297;
   P(288, 9) = 512*297+174;
   P(289, 0) = 512*174+183;
   P(289, 1) = 512*183+274;
   P(289, 2) = 512*274+275;
   P(289, 3) = 512*275+308;
   P(289, 4) = 512*308+311;
   P(289, 5) = 512*311+302;
   P(289, 6) = 512*302+301;
   P(289, 7) = 512*301+296;
   P(289, 8) = 512*296+297;
   P(289, 9) = 512*297+174;
   P(290, 0) = 512*176+177;
   P(290, 1) = 512*177+178;
   P(290, 2) = 512*178+179;
   P(290, 3) = 512*179+212;
   P(290, 4) = 512*212+213;
   P(290, 5) = 512*213+214;
   P(290, 6) = 512*214+223;
   P(290, 7) = 512*223+220;
   P(290, 8) = 512*220+187;
   P(290, 9) = 512*187+176;
   P(291, 0) = 512*176+177;
   P(291, 1) = 512*177+178;
   P(291, 2) = 512*178+179;
   P(291, 3) = 512*179+212;
   P(291, 4) = 512*212+215;
   P(291, 5) = 512*215+306;
   P(291, 6) = 512*306+305;
   P(291, 7) = 512*305+182;
   P(291, 8) = 512*182+181;
   P(291, 9) = 512*181+176;
   P(292, 0) = 512*176+181;
   P(292, 1) = 512*181+182;
   P(292, 2) = 512*182+191;
   P(292, 3) = 512*191+188;
   P(292, 4) = 512*188+189;
   P(292, 5) = 512*189+184;
   P(292, 6) = 512*184+185;
   P(292, 7) = 512*185+186;
   P(292, 8) = 512*186+187;
   P(292, 9) = 512*187+176;
   P(293, 0) = 512*176+181;
   P(293, 1) = 512*181+182;
   P(293, 2) = 512*182+305;
   P(293, 3) = 512*305+304;
   P(293, 4) = 512*304+315;
   P(293, 5) = 512*315+314;
   P(293, 6) = 512*314+223;
   P(293, 7) = 512*223+220;
   P(293, 8) = 512*220+187;
   P(293, 9) = 512*187+176;
   P(294, 0) = 512*180+181;
   P(294, 1) = 512*181+182;
   P(294, 2) = 512*182+191;
   P(294, 3) = 512*191+282;
   P(294, 4) = 512*282+283;
   P(294, 5) = 512*283+272;
   P(294, 6) = 512*272+273;
   P(294, 7) = 512*273+274;
   P(294, 8) = 512*274+183;
   P(294, 9) = 512*183+180;
   P(295, 0) = 512*180+181;
   P(295, 1) = 512*181+182;
   P(295, 2) = 512*182+305;
   P(295, 3) = 512*305+304;
   P(295, 4) = 512*304+309;
   P(295, 5) = 512*309+308;
   P(295, 6) = 512*308+275;
   P(295, 7) = 512*275+274;
   P(295, 8) = 512*274+183;
   P(295, 9) = 512*183+180;
   P(296, 0) = 512*182+191;
   P(296, 1) = 512*191+188;
   P(296, 2) = 512*188+189;
   P(296, 3) = 512*189+190;
   P(296, 4) = 512*190+313;
   P(296, 5) = 512*313+314;
   P(296, 6) = 512*314+315;
   P(296, 7) = 512*315+304;
   P(296, 8) = 512*304+305;
   P(296, 9) = 512*305+182;
   P(297, 0) = 512*182+191;
   P(297, 1) = 512*191+282;
   P(297, 2) = 512*282+283;
   P(297, 3) = 512*283+316;
   P(297, 4) = 512*316+319;
   P(297, 5) = 512*319+310;
   P(297, 6) = 512*310+309;
   P(297, 7) = 512*309+304;
   P(297, 8) = 512*304+305;
   P(297, 9) = 512*305+182;
   P(298, 0) = 512*184+185;
   P(298, 1) = 512*185+186;
   P(298, 2) = 512*186+187;
   P(298, 3) = 512*187+220;
   P(298, 4) = 512*220+223;
   P(298, 5) = 512*223+314;
   P(298, 6) = 512*314+313;
   P(298, 7) = 512*313+190;
   P(298, 8) = 512*190+189;
   P(298, 9) = 512*189+184;
   P(299, 0) = 512*188+189;
   P(299, 1) = 512*189+190;
   P(299, 2) = 512*190+313;
   P(299, 3) = 512*313+312;
   P(299, 4) = 512*312+317;
   P(299, 5) = 512*317+316;
   P(299, 6) = 512*316+283;
   P(299, 7) = 512*283+282;
   P(299, 8) = 512*282+191;
   P(299, 9) = 512*191+188;
   P(300, 0) = 512*192+193;
   P(300, 1) = 512*193+194;
   P(300, 2) = 512*194+195;
   P(300, 3) = 512*195+228;
   P(300, 4) = 512*228+229;
   P(300, 5) = 512*229+230;
   P(300, 6) = 512*230+239;
   P(300, 7) = 512*239+236;
   P(300, 8) = 512*236+203;
   P(300, 9) = 512*203+192;
   P(301, 0) = 512*192+193;
   P(301, 1) = 512*193+194;
   P(301, 2) = 512*194+195;
   P(301, 3) = 512*195+228;
   P(301, 4) = 512*228+231;
   P(301, 5) = 512*231+322;
   P(301, 6) = 512*322+321;
   P(301, 7) = 512*321+198;
   P(301, 8) = 512*198+197;
   P(301, 9) = 512*197+192;
   P(302, 0) = 512*192+193;
   P(302, 1) = 512*193+194;
   P(302, 2) = 512*194+195;
   P(302, 3) = 512*195+216;
   P(302, 4) = 512*216+221;
   P(302, 5) = 512*221+222;
   P(302, 6) = 512*222+199;
   P(302, 7) = 512*199+196;
   P(302, 8) = 512*196+197;
   P(302, 9) = 512*197+192;
   P(303, 0) = 512*192+197;
   P(303, 1) = 512*197+198;
   P(303, 2) = 512*198+207;
   P(303, 3) = 512*207+204;
   P(303, 4) = 512*204+205;
   P(303, 5) = 512*205+200;
   P(303, 6) = 512*200+201;
   P(303, 7) = 512*201+202;
   P(303, 8) = 512*202+203;
   P(303, 9) = 512*203+192;
   P(304, 0) = 512*192+197;
   P(304, 1) = 512*197+198;
   P(304, 2) = 512*198+321;
   P(304, 3) = 512*321+320;
   P(304, 4) = 512*320+331;
   P(304, 5) = 512*331+330;
   P(304, 6) = 512*330+239;
   P(304, 7) = 512*239+236;
   P(304, 8) = 512*236+203;
   P(304, 9) = 512*203+192;
   P(305, 0) = 512*195+228;
   P(305, 1) = 512*228+231;
   P(305, 2) = 512*231+254;
   P(305, 3) = 512*254+253;
   P(305, 4) = 512*253+252;
   P(305, 5) = 512*252+219;
   P(305, 6) = 512*219+218;
   P(305, 7) = 512*218+217;
   P(305, 8) = 512*217+216;
   P(305, 9) = 512*216+195;
   P(306, 0) = 512*195+228;
   P(306, 1) = 512*228+231;
   P(306, 2) = 512*231+322;
   P(306, 3) = 512*322+323;
   P(306, 4) = 512*323+344;
   P(306, 5) = 512*344+345;
   P(306, 6) = 512*345+222;
   P(306, 7) = 512*222+221;
   P(306, 8) = 512*221+216;
   P(306, 9) = 512*216+195;
   P(307, 0) = 512*196+197;
   P(307, 1) = 512*197+198;
   P(307, 2) = 512*198+207;
   P(307, 3) = 512*207+298;
   P(307, 4) = 512*298+299;
   P(307, 5) = 512*299+288;
   P(307, 6) = 512*288+289;
   P(307, 7) = 512*289+290;
   P(307, 8) = 512*290+199;
   P(307, 9) = 512*199+196;
   P(308, 0) = 512*196+197;
   P(308, 1) = 512*197+198;
   P(308, 2) = 512*198+321;
   P(308, 3) = 512*321+320;
   P(308, 4) = 512*320+325;
   P(308, 5) = 512*325+324;
   P(308, 6) = 512*324+291;
   P(308, 7) = 512*291+290;
   P(308, 8) = 512*290+199;
   P(308, 9) = 512*199+196;
   P(309, 0) = 512*196+197;
   P(309, 1) = 512*197+198;
   P(309, 2) = 512*198+321;
   P(309, 3) = 512*321+322;
   P(309, 4) = 512*322+323;
   P(309, 5) = 512*323+344;
   P(309, 6) = 512*344+345;
   P(309, 7) = 512*345+222;
   P(309, 8) = 512*222+199;
   P(309, 9) = 512*199+196;
   P(310, 0) = 512*198+207;
   P(310, 1) = 512*207+204;
   P(310, 2) = 512*204+205;
   P(310, 3) = 512*205+206;
   P(310, 4) = 512*206+329;
   P(310, 5) = 512*329+330;
   P(310, 6) = 512*330+331;
   P(310, 7) = 512*331+320;
   P(310, 8) = 512*320+321;
   P(310, 9) = 512*321+198;
   P(311, 0) = 512*198+207;
   P(311, 1) = 512*207+298;
   P(311, 2) = 512*298+299;
   P(311, 3) = 512*299+332;
   P(311, 4) = 512*332+335;
   P(311, 5) = 512*335+326;
   P(311, 6) = 512*326+325;
   P(311, 7) = 512*325+320;
   P(311, 8) = 512*320+321;
   P(311, 9) = 512*321+198;
   P(312, 0) = 512*199+222;
   P(312, 1) = 512*222+221;
   P(312, 2) = 512*221+220;
   P(312, 3) = 512*220+223;
   P(312, 4) = 512*223+314;
   P(312, 5) = 512*314+313;
   P(312, 6) = 512*313+312;
   P(312, 7) = 512*312+291;
   P(312, 8) = 512*291+290;
   P(312, 9) = 512*290+199;
   P(313, 0) = 512*199+222;
   P(313, 1) = 512*222+345;
   P(313, 2) = 512*345+344;
   P(313, 3) = 512*344+349;
   P(313, 4) = 512*349+350;
   P(313, 5) = 512*350+327;
   P(313, 6) = 512*327+324;
   P(313, 7) = 512*324+291;
   P(313, 8) = 512*291+290;
   P(313, 9) = 512*290+199;
   P(314, 0) = 512*200+201;
   P(314, 1) = 512*201+202;
   P(314, 2) = 512*202+203;
   P(314, 3) = 512*203+236;
   P(314, 4) = 512*236+237;
   P(314, 5) = 512*237+238;
   P(314, 6) = 512*238+247;
   P(314, 7) = 512*247+244;
   P(314, 8) = 512*244+211;
   P(314, 9) = 512*211+200;
   P(315, 0) = 512*200+201;
   P(315, 1) = 512*201+202;
   P(315, 2) = 512*202+203;
   P(315, 3) = 512*203+236;
   P(315, 4) = 512*236+239;
   P(315, 5) = 512*239+330;
   P(315, 6) = 512*330+329;
   P(315, 7) = 512*329+206;
   P(315, 8) = 512*206+205;
   P(315, 9) = 512*205+200;
   P(316, 0) = 512*200+205;
   P(316, 1) = 512*205+206;
   P(316, 2) = 512*206+215;
   P(316, 3) = 512*215+212;
   P(316, 4) = 512*212+213;
   P(316, 5) = 512*213+208;
   P(316, 6) = 512*208+209;
   P(316, 7) = 512*209+210;
   P(316, 8) = 512*210+211;
   P(316, 9) = 512*211+200;
   P(317, 0) = 512*200+205;
   P(317, 1) = 512*205+206;
   P(317, 2) = 512*206+329;
   P(317, 3) = 512*329+328;
   P(317, 4) = 512*328+339;
   P(317, 5) = 512*339+338;
   P(317, 6) = 512*338+247;
   P(317, 7) = 512*247+244;
   P(317, 8) = 512*244+211;
   P(317, 9) = 512*211+200;
   P(318, 0) = 512*204+205;
   P(318, 1) = 512*205+206;
   P(318, 2) = 512*206+215;
   P(318, 3) = 512*215+306;
   P(318, 4) = 512*306+307;
   P(318, 5) = 512*307+296;
   P(318, 6) = 512*296+297;
   P(318, 7) = 512*297+298;
   P(318, 8) = 512*298+207;
   P(318, 9) = 512*207+204;
   P(319, 0) = 512*204+205;
   P(319, 1) = 512*205+206;
   P(319, 2) = 512*206+329;
   P(319, 3) = 512*329+328;
   P(319, 4) = 512*328+333;
   P(319, 5) = 512*333+332;
   P(319, 6) = 512*332+299;
   P(319, 7) = 512*299+298;
   P(319, 8) = 512*298+207;
   P(319, 9) = 512*207+204;
   P(320, 0) = 512*206+215;
   P(320, 1) = 512*215+212;
   P(320, 2) = 512*212+213;
   P(320, 3) = 512*213+214;
   P(320, 4) = 512*214+337;
   P(320, 5) = 512*337+338;
   P(320, 6) = 512*338+339;
   P(320, 7) = 512*339+328;
   P(320, 8) = 512*328+329;
   P(320, 9) = 512*329+206;
   P(321, 0) = 512*206+215;
   P(321, 1) = 512*215+306;
   P(321, 2) = 512*306+307;
   P(321, 3) = 512*307+340;
   P(321, 4) = 512*340+343;
   P(321, 5) = 512*343+334;
   P(321, 6) = 512*334+333;
   P(321, 7) = 512*333+328;
   P(321, 8) = 512*328+329;
   P(321, 9) = 512*329+206;
   P(322, 0) = 512*208+209;
   P(322, 1) = 512*209+210;
   P(322, 2) = 512*210+211;
   P(322, 3) = 512*211+244;
   P(322, 4) = 512*244+245;
   P(322, 5) = 512*245+246;
   P(322, 6) = 512*246+255;
   P(322, 7) = 512*255+252;
   P(322, 8) = 512*252+219;
   P(322, 9) = 512*219+208;
   P(323, 0) = 512*208+209;
   P(323, 1) = 512*209+210;
   P(323, 2) = 512*210+211;
   P(323, 3) = 512*211+244;
   P(323, 4) = 512*244+247;
   P(323, 5) = 512*247+338;
   P(323, 6) = 512*338+337;
   P(323, 7) = 512*337+214;
   P(323, 8) = 512*214+213;
   P(323, 9) = 512*213+208;
   P(324, 0) = 512*208+213;
   P(324, 1) = 512*213+214;
   P(324, 2) = 512*214+223;
   P(324, 3) = 512*223+220;
   P(324, 4) = 512*220+221;
   P(324, 5) = 512*221+216;
   P(324, 6) = 512*216+217;
   P(324, 7) = 512*217+218;
   P(324, 8) = 512*218+219;
   P(324, 9) = 512*219+208;
   P(325, 0) = 512*208+213;
   P(325, 1) = 512*213+214;
   P(325, 2) = 512*214+337;
   P(325, 3) = 512*337+336;
   P(325, 4) = 512*336+347;
   P(325, 5) = 512*347+346;
   P(325, 6) = 512*346+255;
   P(325, 7) = 512*255+252;
   P(325, 8) = 512*252+219;
   P(325, 9) = 512*219+208;
   P(326, 0) = 512*212+213;
   P(326, 1) = 512*213+214;
   P(326, 2) = 512*214+223;
   P(326, 3) = 512*223+314;
   P(326, 4) = 512*314+315;
   P(326, 5) = 512*315+304;
   P(326, 6) = 512*304+305;
   P(326, 7) = 512*305+306;
   P(326, 8) = 512*306+215;
   P(326, 9) = 512*215+212;
   P(327, 0) = 512*212+213;
   P(327, 1) = 512*213+214;
   P(327, 2) = 512*214+337;
   P(327, 3) = 512*337+336;
   P(327, 4) = 512*336+341;
   P(327, 5) = 512*341+340;
   P(327, 6) = 512*340+307;
   P(327, 7) = 512*307+306;
   P(327, 8) = 512*306+215;
   P(327, 9) = 512*215+212;
   P(328, 0) = 512*214+223;
   P(328, 1) = 512*223+220;
   P(328, 2) = 512*220+221;
   P(328, 3) = 512*221+222;
   P(328, 4) = 512*222+345;
   P(328, 5) = 512*345+346;
   P(328, 6) = 512*346+347;
   P(328, 7) = 512*347+336;
   P(328, 8) = 512*336+337;
   P(328, 9) = 512*337+214;
   P(329, 0) = 512*214+223;
   P(329, 1) = 512*223+314;
   P(329, 2) = 512*314+315;
   P(329, 3) = 512*315+348;
   P(329, 4) = 512*348+351;
   P(329, 5) = 512*351+342;
   P(329, 6) = 512*342+341;
   P(329, 7) = 512*341+336;
   P(329, 8) = 512*336+337;
   P(329, 9) = 512*337+214;
   P(330, 0) = 512*216+217;
   P(330, 1) = 512*217+218;
   P(330, 2) = 512*218+219;
   P(330, 3) = 512*219+252;
   P(330, 4) = 512*252+255;
   P(330, 5) = 512*255+346;
   P(330, 6) = 512*346+345;
   P(330, 7) = 512*345+222;
   P(330, 8) = 512*222+221;
   P(330, 9) = 512*221+216;
   P(331, 0) = 512*220+221;
   P(331, 1) = 512*221+222;
   P(331, 2) = 512*222+345;
   P(331, 3) = 512*345+344;
   P(331, 4) = 512*344+349;
   P(331, 5) = 512*349+348;
   P(331, 6) = 512*348+315;
   P(331, 7) = 512*315+314;
   P(331, 8) = 512*314+223;
   P(331, 9) = 512*223+220;
   P(332, 0) = 512*224+225;
   P(332, 1) = 512*225+226;
   P(332, 2) = 512*226+227;
   P(332, 3) = 512*227+248;
   P(332, 4) = 512*248+253;
   P(332, 5) = 512*253+254;
   P(332, 6) = 512*254+231;
   P(332, 7) = 512*231+228;
   P(332, 8) = 512*228+229;
   P(332, 9) = 512*229+224;
   P(333, 0) = 512*224+229;
   P(333, 1) = 512*229+230;
   P(333, 2) = 512*230+239;
   P(333, 3) = 512*239+236;
   P(333, 4) = 512*236+237;
   P(333, 5) = 512*237+232;
   P(333, 6) = 512*232+233;
   P(333, 7) = 512*233+234;
   P(333, 8) = 512*234+235;
   P(333, 9) = 512*235+224;
   P(334, 0) = 512*228+229;
   P(334, 1) = 512*229+230;
   P(334, 2) = 512*230+239;
   P(334, 3) = 512*239+330;
   P(334, 4) = 512*330+331;
   P(334, 5) = 512*331+320;
   P(334, 6) = 512*320+321;
   P(334, 7) = 512*321+322;
   P(334, 8) = 512*322+231;
   P(334, 9) = 512*231+228;
   P(335, 0) = 512*228+229;
   P(335, 1) = 512*229+230;
   P(335, 2) = 512*230+353;
   P(335, 3) = 512*353+352;
   P(335, 4) = 512*352+357;
   P(335, 5) = 512*357+356;
   P(335, 6) = 512*356+323;
   P(335, 7) = 512*323+322;
   P(335, 8) = 512*322+231;
   P(335, 9) = 512*231+228;
   P(336, 0) = 512*228+229;
   P(336, 1) = 512*229+230;
   P(336, 2) = 512*230+353;
   P(336, 3) = 512*353+354;
   P(336, 4) = 512*354+355;
   P(336, 5) = 512*355+376;
   P(336, 6) = 512*376+377;
   P(336, 7) = 512*377+254;
   P(336, 8) = 512*254+231;
   P(336, 9) = 512*231+228;
   P(337, 0) = 512*230+239;
   P(337, 1) = 512*239+236;
   P(337, 2) = 512*236+237;
   P(337, 3) = 512*237+238;
   P(337, 4) = 512*238+361;
   P(337, 5) = 512*361+362;
   P(337, 6) = 512*362+363;
   P(337, 7) = 512*363+352;
   P(337, 8) = 512*352+353;
   P(337, 9) = 512*353+230;
   P(338, 0) = 512*230+239;
   P(338, 1) = 512*239+330;
   P(338, 2) = 512*330+331;
   P(338, 3) = 512*331+364;
   P(338, 4) = 512*364+367;
   P(338, 5) = 512*367+358;
   P(338, 6) = 512*358+357;
   P(338, 7) = 512*357+352;
   P(338, 8) = 512*352+353;
   P(338, 9) = 512*353+230;
   P(339, 0) = 512*231+254;
   P(339, 1) = 512*254+253;
   P(339, 2) = 512*253+252;
   P(339, 3) = 512*252+255;
   P(339, 4) = 512*255+346;
   P(339, 5) = 512*346+345;
   P(339, 6) = 512*345+344;
   P(339, 7) = 512*344+323;
   P(339, 8) = 512*323+322;
   P(339, 9) = 512*322+231;
   P(340, 0) = 512*231+254;
   P(340, 1) = 512*254+377;
   P(340, 2) = 512*377+376;
   P(340, 3) = 512*376+381;
   P(340, 4) = 512*381+382;
   P(340, 5) = 512*382+359;
   P(340, 6) = 512*359+356;
   P(340, 7) = 512*356+323;
   P(340, 8) = 512*323+322;
   P(340, 9) = 512*322+231;
   P(341, 0) = 512*232+237;
   P(341, 1) = 512*237+238;
   P(341, 2) = 512*238+247;
   P(341, 3) = 512*247+244;
   P(341, 4) = 512*244+245;
   P(341, 5) = 512*245+240;
   P(341, 6) = 512*240+241;
   P(341, 7) = 512*241+242;
   P(341, 8) = 512*242+243;
   P(341, 9) = 512*243+232;
   P(342, 0) = 512*236+237;
   P(342, 1) = 512*237+238;
   P(342, 2) = 512*238+247;
   P(342, 3) = 512*247+338;
   P(342, 4) = 512*338+339;
   P(342, 5) = 512*339+328;
   P(342, 6) = 512*328+329;
   P(342, 7) = 512*329+330;
   P(342, 8) = 512*330+239;
   P(342, 9) = 512*239+236;
   P(343, 0) = 512*236+237;
   P(343, 1) = 512*237+238;
   P(343, 2) = 512*238+361;
   P(343, 3) = 512*361+360;
   P(343, 4) = 512*360+365;
   P(343, 5) = 512*365+364;
   P(343, 6) = 512*364+331;
   P(343, 7) = 512*331+330;
   P(343, 8) = 512*330+239;
   P(343, 9) = 512*239+236;
   P(344, 0) = 512*238+247;
   P(344, 1) = 512*247+244;
   P(344, 2) = 512*244+245;
   P(344, 3) = 512*245+246;
   P(344, 4) = 512*246+369;
   P(344, 5) = 512*369+370;
   P(344, 6) = 512*370+371;
   P(344, 7) = 512*371+360;
   P(344, 8) = 512*360+361;
   P(344, 9) = 512*361+238;
   P(345, 0) = 512*238+247;
   P(345, 1) = 512*247+338;
   P(345, 2) = 512*338+339;
   P(345, 3) = 512*339+372;
   P(345, 4) = 512*372+375;
   P(345, 5) = 512*375+366;
   P(345, 6) = 512*366+365;
   P(345, 7) = 512*365+360;
   P(345, 8) = 512*360+361;
   P(345, 9) = 512*361+238;
   P(346, 0) = 512*240+245;
   P(346, 1) = 512*245+246;
   P(346, 2) = 512*246+255;
   P(346, 3) = 512*255+252;
   P(346, 4) = 512*252+253;
   P(346, 5) = 512*253+248;
   P(346, 6) = 512*248+249;
   P(346, 7) = 512*249+250;
   P(346, 8) = 512*250+251;
   P(346, 9) = 512*251+240;
   P(347, 0) = 512*244+245;
   P(347, 1) = 512*245+246;
   P(347, 2) = 512*246+255;
   P(347, 3) = 512*255+346;
   P(347, 4) = 512*346+347;
   P(347, 5) = 512*347+336;
   P(347, 6) = 512*336+337;
   P(347, 7) = 512*337+338;
   P(347, 8) = 512*338+247;
   P(347, 9) = 512*247+244;
   P(348, 0) = 512*244+245;
   P(348, 1) = 512*245+246;
   P(348, 2) = 512*246+369;
   P(348, 3) = 512*369+368;
   P(348, 4) = 512*368+373;
   P(348, 5) = 512*373+372;
   P(348, 6) = 512*372+339;
   P(348, 7) = 512*339+338;
   P(348, 8) = 512*338+247;
   P(348, 9) = 512*247+244;
   P(349, 0) = 512*246+255;
   P(349, 1) = 512*255+252;
   P(349, 2) = 512*252+253;
   P(349, 3) = 512*253+254;
   P(349, 4) = 512*254+377;
   P(349, 5) = 512*377+378;
   P(349, 6) = 512*378+379;
   P(349, 7) = 512*379+368;
   P(349, 8) = 512*368+369;
   P(349, 9) = 512*369+246;
   P(350, 0) = 512*246+255;
   P(350, 1) = 512*255+346;
   P(350, 2) = 512*346+347;
   P(350, 3) = 512*347+380;
   P(350, 4) = 512*380+383;
   P(350, 5) = 512*383+374;
   P(350, 6) = 512*374+373;
   P(350, 7) = 512*373+368;
   P(350, 8) = 512*368+369;
   P(350, 9) = 512*369+246;
   P(351, 0) = 512*252+253;
   P(351, 1) = 512*253+254;
   P(351, 2) = 512*254+377;
   P(351, 3) = 512*377+376;
   P(351, 4) = 512*376+381;
   P(351, 5) = 512*381+380;
   P(351, 6) = 512*380+347;
   P(351, 7) = 512*347+346;
   P(351, 8) = 512*346+255;
   P(351, 9) = 512*255+252;
   P(352, 0) = 512*256+257;
   P(352, 1) = 512*257+258;
   P(352, 2) = 512*258+259;
   P(352, 3) = 512*259+292;
   P(352, 4) = 512*292+293;
   P(352, 5) = 512*293+294;
   P(352, 6) = 512*294+303;
   P(352, 7) = 512*303+300;
   P(352, 8) = 512*300+267;
   P(352, 9) = 512*267+256;
   P(353, 0) = 512*256+257;
   P(353, 1) = 512*257+258;
   P(353, 2) = 512*258+259;
   P(353, 3) = 512*259+292;
   P(353, 4) = 512*292+295;
   P(353, 5) = 512*295+386;
   P(353, 6) = 512*386+385;
   P(353, 7) = 512*385+262;
   P(353, 8) = 512*262+261;
   P(353, 9) = 512*261+256;
   P(354, 0) = 512*256+257;
   P(354, 1) = 512*257+258;
   P(354, 2) = 512*258+259;
   P(354, 3) = 512*259+280;
   P(354, 4) = 512*280+285;
   P(354, 5) = 512*285+286;
   P(354, 6) = 512*286+263;
   P(354, 7) = 512*263+260;
   P(354, 8) = 512*260+261;
   P(354, 9) = 512*261+256;
   P(355, 0) = 512*256+261;
   P(355, 1) = 512*261+262;
   P(355, 2) = 512*262+271;
   P(355, 3) = 512*271+268;
   P(355, 4) = 512*268+269;
   P(355, 5) = 512*269+264;
   P(355, 6) = 512*264+265;
   P(355, 7) = 512*265+266;
   P(355, 8) = 512*266+267;
   P(355, 9) = 512*267+256;
   P(356, 0) = 512*256+261;
   P(356, 1) = 512*261+262;
   P(356, 2) = 512*262+385;
   P(356, 3) = 512*385+384;
   P(356, 4) = 512*384+395;
   P(356, 5) = 512*395+394;
   P(356, 6) = 512*394+303;
   P(356, 7) = 512*303+300;
   P(356, 8) = 512*300+267;
   P(356, 9) = 512*267+256;
   P(357, 0) = 512*259+292;
   P(357, 1) = 512*292+295;
   P(357, 2) = 512*295+318;
   P(357, 3) = 512*318+317;
   P(357, 4) = 512*317+316;
   P(357, 5) = 512*316+283;
   P(357, 6) = 512*283+282;
   P(357, 7) = 512*282+281;
   P(357, 8) = 512*281+280;
   P(357, 9) = 512*280+259;
   P(358, 0) = 512*259+292;
   P(358, 1) = 512*292+295;
   P(358, 2) = 512*295+386;
   P(358, 3) = 512*386+387;
   P(358, 4) = 512*387+408;
   P(358, 5) = 512*408+409;
   P(358, 6) = 512*409+286;
   P(358, 7) = 512*286+285;
   P(358, 8) = 512*285+280;
   P(358, 9) = 512*280+259;
   P(359, 0) = 512*260+261;
   P(359, 1) = 512*261+262;
   P(359, 2) = 512*262+271;
   P(359, 3) = 512*271+268;
   P(359, 4) = 512*268+363;
   P(359, 5) = 512*363+352;
   P(359, 6) = 512*352+353;
   P(359, 7) = 512*353+354;
   P(359, 8) = 512*354+355;
   P(359, 9) = 512*355+260;
   P(360, 0) = 512*260+261;
   P(360, 1) = 512*261+262;
   P(360, 2) = 512*262+271;
   P(360, 3) = 512*271+490;
   P(360, 4) = 512*490+491;
   P(360, 5) = 512*491+480;
   P(360, 6) = 512*480+481;
   P(360, 7) = 512*481+482;
   P(360, 8) = 512*482+263;
   P(360, 9) = 512*263+260;
   P(361, 0) = 512*260+261;
   P(361, 1) = 512*261+262;
   P(361, 2) = 512*262+385;
   P(361, 3) = 512*385+384;
   P(361, 4) = 512*384+389;
   P(361, 5) = 512*389+388;
   P(361, 6) = 512*388+483;
   P(361, 7) = 512*483+482;
   P(361, 8) = 512*482+263;
   P(361, 9) = 512*263+260;
   P(362, 0) = 512*260+261;
   P(362, 1) = 512*261+262;
   P(362, 2) = 512*262+385;
   P(362, 3) = 512*385+386;
   P(362, 4) = 512*386+387;
   P(362, 5) = 512*387+408;
   P(362, 6) = 512*408+409;
   P(362, 7) = 512*409+286;
   P(362, 8) = 512*286+263;
   P(362, 9) = 512*263+260;
   P(363, 0) = 512*260+355;
   P(363, 1) = 512*355+354;
   P(363, 2) = 512*354+353;
   P(363, 3) = 512*353+352;
   P(363, 4) = 512*352+357;
   P(363, 5) = 512*357+358;
   P(363, 6) = 512*358+481;
   P(363, 7) = 512*481+482;
   P(363, 8) = 512*482+263;
   P(363, 9) = 512*263+260;
   P(364, 0) = 512*260+355;
   P(364, 1) = 512*355+376;
   P(364, 2) = 512*376+377;
   P(364, 3) = 512*377+378;
   P(364, 4) = 512*378+379;
   P(364, 5) = 512*379+284;
   P(364, 6) = 512*284+285;
   P(364, 7) = 512*285+286;
   P(364, 8) = 512*286+263;
   P(364, 9) = 512*263+260;
   P(365, 0) = 512*260+355;
   P(365, 1) = 512*355+376;
   P(365, 2) = 512*376+381;
   P(365, 3) = 512*381+382;
   P(365, 4) = 512*382+505;
   P(365, 5) = 512*505+504;
   P(365, 6) = 512*504+483;
   P(365, 7) = 512*483+482;
   P(365, 8) = 512*482+263;
   P(365, 9) = 512*263+260;
   P(366, 0) = 512*262+271;
   P(366, 1) = 512*271+268;
   P(366, 2) = 512*268+269;
   P(366, 3) = 512*269+270;
   P(366, 4) = 512*270+393;
   P(366, 5) = 512*393+394;
   P(366, 6) = 512*394+395;
   P(366, 7) = 512*395+384;
   P(366, 8) = 512*384+385;
   P(366, 9) = 512*385+262;
   P(367, 0) = 512*262+271;
   P(367, 1) = 512*271+490;
   P(367, 2) = 512*490+491;
   P(367, 3) = 512*491+396;
   P(367, 4) = 512*396+399;
   P(367, 5) = 512*399+390;
   P(367, 6) = 512*390+389;
   P(367, 7) = 512*389+384;
   P(367, 8) = 512*384+385;
   P(367, 9) = 512*385+262;
   P(368, 0) = 512*263+286;
   P(368, 1) = 512*286+285;
   P(368, 2) = 512*285+284;
   P(368, 3) = 512*284+287;
   P(368, 4) = 512*287+506;
   P(368, 5) = 512*506+505;
   P(368, 6) = 512*505+504;
   P(368, 7) = 512*504+483;
   P(368, 8) = 512*483+482;
   P(368, 9) = 512*482+263;
   P(369, 0) = 512*263+286;
   P(369, 1) = 512*286+409;
   P(369, 2) = 512*409+408;
   P(369, 3) = 512*408+413;
   P(369, 4) = 512*413+414;
   P(369, 5) = 512*414+391;
   P(369, 6) = 512*391+388;
   P(369, 7) = 512*388+483;
   P(369, 8) = 512*483+482;
   P(369, 9) = 512*482+263;
   P(370, 0) = 512*264+265;
   P(370, 1) = 512*265+266;
   P(370, 2) = 512*266+267;
   P(370, 3) = 512*267+300;
   P(370, 4) = 512*300+301;
   P(370, 5) = 512*301+302;
   P(370, 6) = 512*302+311;
   P(370, 7) = 512*311+308;
   P(370, 8) = 512*308+275;
   P(370, 9) = 512*275+264;
   P(371, 0) = 512*264+265;
   P(371, 1) = 512*265+266;
   P(371, 2) = 512*266+267;
   P(371, 3) = 512*267+300;
   P(371, 4) = 512*300+303;
   P(371, 5) = 512*303+394;
   P(371, 6) = 512*394+393;
   P(371, 7) = 512*393+270;
   P(371, 8) = 512*270+269;
   P(371, 9) = 512*269+264;
   P(372, 0) = 512*264+269;
   P(372, 1) = 512*269+270;
   P(372, 2) = 512*270+279;
   P(372, 3) = 512*279+276;
   P(372, 4) = 512*276+277;
   P(372, 5) = 512*277+272;
   P(372, 6) = 512*272+273;
   P(372, 7) = 512*273+274;
   P(372, 8) = 512*274+275;
   P(372, 9) = 512*275+264;
   P(373, 0) = 512*264+269;
   P(373, 1) = 512*269+270;
   P(373, 2) = 512*270+393;
   P(373, 3) = 512*393+392;
   P(373, 4) = 512*392+403;
   P(373, 5) = 512*403+402;
   P(373, 6) = 512*402+311;
   P(373, 7) = 512*311+308;
   P(373, 8) = 512*308+275;
   P(373, 9) = 512*275+264;
   P(374, 0) = 512*268+269;
   P(374, 1) = 512*269+270;
   P(374, 2) = 512*270+279;
   P(374, 3) = 512*279+276;
   P(374, 4) = 512*276+371;
   P(374, 5) = 512*371+360;
   P(374, 6) = 512*360+361;
   P(374, 7) = 512*361+362;
   P(374, 8) = 512*362+363;
   P(374, 9) = 512*363+268;
   P(375, 0) = 512*268+269;
   P(375, 1) = 512*269+270;
   P(375, 2) = 512*270+279;
   P(375, 3) = 512*279+498;
   P(375, 4) = 512*498+499;
   P(375, 5) = 512*499+488;
   P(375, 6) = 512*488+489;
   P(375, 7) = 512*489+490;
   P(375, 8) = 512*490+271;
   P(375, 9) = 512*271+268;
   P(376, 0) = 512*268+269;
   P(376, 1) = 512*269+270;
   P(376, 2) = 512*270+393;
   P(376, 3) = 512*393+392;
   P(376, 4) = 512*392+397;
   P(376, 5) = 512*397+396;
   P(376, 6) = 512*396+491;
   P(376, 7) = 512*491+490;
   P(376, 8) = 512*490+271;
   P(376, 9) = 512*271+268;
   P(377, 0) = 512*268+363;
   P(377, 1) = 512*363+362;
   P(377, 2) = 512*362+361;
   P(377, 3) = 512*361+360;
   P(377, 4) = 512*360+365;
   P(377, 5) = 512*365+366;
   P(377, 6) = 512*366+489;
   P(377, 7) = 512*489+490;
   P(377, 8) = 512*490+271;
   P(377, 9) = 512*271+268;
   P(378, 0) = 512*268+363;
   P(378, 1) = 512*363+352;
   P(378, 2) = 512*352+357;
   P(378, 3) = 512*357+358;
   P(378, 4) = 512*358+481;
   P(378, 5) = 512*481+480;
   P(378, 6) = 512*480+491;
   P(378, 7) = 512*491+490;
   P(378, 8) = 512*490+271;
   P(378, 9) = 512*271+268;
   P(379, 0) = 512*270+279;
   P(379, 1) = 512*279+276;
   P(379, 2) = 512*276+277;
   P(379, 3) = 512*277+278;
   P(379, 4) = 512*278+401;
   P(379, 5) = 512*401+402;
   P(379, 6) = 512*402+403;
   P(379, 7) = 512*403+392;
   P(379, 8) = 512*392+393;
   P(379, 9) = 512*393+270;
   P(380, 0) = 512*270+279;
   P(380, 1) = 512*279+498;
   P(380, 2) = 512*498+499;
   P(380, 3) = 512*499+404;
   P(380, 4) = 512*404+407;
   P(380, 5) = 512*407+398;
   P(380, 6) = 512*398+397;
   P(380, 7) = 512*397+392;
   P(380, 8) = 512*392+393;
   P(380, 9) = 512*393+270;
   P(381, 0) = 512*272+273;
   P(381, 1) = 512*273+274;
   P(381, 2) = 512*274+275;
   P(381, 3) = 512*275+308;
   P(381, 4) = 512*308+309;
   P(381, 5) = 512*309+310;
   P(381, 6) = 512*310+319;
   P(381, 7) = 512*319+316;
   P(381, 8) = 512*316+283;
   P(381, 9) = 512*283+272;
   P(382, 0) = 512*272+273;
   P(382, 1) = 512*273+274;
   P(382, 2) = 512*274+275;
   P(382, 3) = 512*275+308;
   P(382, 4) = 512*308+311;
   P(382, 5) = 512*311+402;
   P(382, 6) = 512*402+401;
   P(382, 7) = 512*401+278;
   P(382, 8) = 512*278+277;
   P(382, 9) = 512*277+272;
   P(383, 0) = 512*272+277;
   P(383, 1) = 512*277+278;
   P(383, 2) = 512*278+287;
   P(383, 3) = 512*287+284;
   P(383, 4) = 512*284+285;
   P(383, 5) = 512*285+280;
   P(383, 6) = 512*280+281;
   P(383, 7) = 512*281+282;
   P(383, 8) = 512*282+283;
   P(383, 9) = 512*283+272;
   P(384, 0) = 512*272+277;
   P(384, 1) = 512*277+278;
   P(384, 2) = 512*278+401;
   P(384, 3) = 512*401+400;
   P(384, 4) = 512*400+411;
   P(384, 5) = 512*411+410;
   P(384, 6) = 512*410+319;
   P(384, 7) = 512*319+316;
   P(384, 8) = 512*316+283;
   P(384, 9) = 512*283+272;
   P(385, 0) = 512*276+277;
   P(385, 1) = 512*277+278;
   P(385, 2) = 512*278+287;
   P(385, 3) = 512*287+284;
   P(385, 4) = 512*284+379;
   P(385, 5) = 512*379+368;
   P(385, 6) = 512*368+369;
   P(385, 7) = 512*369+370;
   P(385, 8) = 512*370+371;
   P(385, 9) = 512*371+276;
   P(386, 0) = 512*276+277;
   P(386, 1) = 512*277+278;
   P(386, 2) = 512*278+287;
   P(386, 3) = 512*287+506;
   P(386, 4) = 512*506+507;
   P(386, 5) = 512*507+496;
   P(386, 6) = 512*496+497;
   P(386, 7) = 512*497+498;
   P(386, 8) = 512*498+279;
   P(386, 9) = 512*279+276;
   P(387, 0) = 512*276+277;
   P(387, 1) = 512*277+278;
   P(387, 2) = 512*278+401;
   P(387, 3) = 512*401+400;
   P(387, 4) = 512*400+405;
   P(387, 5) = 512*405+404;
   P(387, 6) = 512*404+499;
   P(387, 7) = 512*499+498;
   P(387, 8) = 512*498+279;
   P(387, 9) = 512*279+276;
   P(388, 0) = 512*276+371;
   P(388, 1) = 512*371+370;
   P(388, 2) = 512*370+369;
   P(388, 3) = 512*369+368;
   P(388, 4) = 512*368+373;
   P(388, 5) = 512*373+374;
   P(388, 6) = 512*374+497;
   P(388, 7) = 512*497+498;
   P(388, 8) = 512*498+279;
   P(388, 9) = 512*279+276;
   P(389, 0) = 512*276+371;
   P(389, 1) = 512*371+360;
   P(389, 2) = 512*360+365;
   P(389, 3) = 512*365+366;
   P(389, 4) = 512*366+489;
   P(389, 5) = 512*489+488;
   P(389, 6) = 512*488+499;
   P(389, 7) = 512*499+498;
   P(389, 8) = 512*498+279;
   P(389, 9) = 512*279+276;
   P(390, 0) = 512*278+287;
   P(390, 1) = 512*287+284;
   P(390, 2) = 512*284+285;
   P(390, 3) = 512*285+286;
   P(390, 4) = 512*286+409;
   P(390, 5) = 512*409+410;
   P(390, 6) = 512*410+411;
   P(390, 7) = 512*411+400;
   P(390, 8) = 512*400+401;
   P(390, 9) = 512*401+278;
   P(391, 0) = 512*278+287;
   P(391, 1) = 512*287+506;
   P(391, 2) = 512*506+507;
   P(391, 3) = 512*507+412;
   P(391, 4) = 512*412+415;
   P(391, 5) = 512*415+406;
   P(391, 6) = 512*406+405;
   P(391, 7) = 512*405+400;
   P(391, 8) = 512*400+401;
   P(391, 9) = 512*401+278;
   P(392, 0) = 512*280+281;
   P(392, 1) = 512*281+282;
   P(392, 2) = 512*282+283;
   P(392, 3) = 512*283+316;
   P(392, 4) = 512*316+319;
   P(392, 5) = 512*319+410;
   P(392, 6) = 512*410+409;
   P(392, 7) = 512*409+286;
   P(392, 8) = 512*286+285;
   P(392, 9) = 512*285+280;
   P(393, 0) = 512*284+285;
   P(393, 1) = 512*285+286;
   P(393, 2) = 512*286+409;
   P(393, 3) = 512*409+408;
   P(393, 4) = 512*408+413;
   P(393, 5) = 512*413+412;
   P(393, 6) = 512*412+507;
   P(393, 7) = 512*507+506;
   P(393, 8) = 512*506+287;
   P(393, 9) = 512*287+284;
   P(394, 0) = 512*284+379;
   P(394, 1) = 512*379+378;
   P(394, 2) = 512*378+377;
   P(394, 3) = 512*377+376;
   P(394, 4) = 512*376+381;
   P(394, 5) = 512*381+382;
   P(394, 6) = 512*382+505;
   P(394, 7) = 512*505+506;
   P(394, 8) = 512*506+287;
   P(394, 9) = 512*287+284;
   P(395, 0) = 512*284+379;
   P(395, 1) = 512*379+368;
   P(395, 2) = 512*368+373;
   P(395, 3) = 512*373+374;
   P(395, 4) = 512*374+497;
   P(395, 5) = 512*497+496;
   P(395, 6) = 512*496+507;
   P(395, 7) = 512*507+506;
   P(395, 8) = 512*506+287;
   P(395, 9) = 512*287+284;
   P(396, 0) = 512*288+289;
   P(396, 1) = 512*289+290;
   P(396, 2) = 512*290+291;
   P(396, 3) = 512*291+324;
   P(396, 4) = 512*324+325;
   P(396, 5) = 512*325+326;
   P(396, 6) = 512*326+335;
   P(396, 7) = 512*335+332;
   P(396, 8) = 512*332+299;
   P(396, 9) = 512*299+288;
   P(397, 0) = 512*288+289;
   P(397, 1) = 512*289+290;
   P(397, 2) = 512*290+291;
   P(397, 3) = 512*291+324;
   P(397, 4) = 512*324+327;
   P(397, 5) = 512*327+418;
   P(397, 6) = 512*418+417;
   P(397, 7) = 512*417+294;
   P(397, 8) = 512*294+293;
   P(397, 9) = 512*293+288;
   P(398, 0) = 512*288+289;
   P(398, 1) = 512*289+290;
   P(398, 2) = 512*290+291;
   P(398, 3) = 512*291+312;
   P(398, 4) = 512*312+317;
   P(398, 5) = 512*317+318;
   P(398, 6) = 512*318+295;
   P(398, 7) = 512*295+292;
   P(398, 8) = 512*292+293;
   P(398, 9) = 512*293+288;
   P(399, 0) = 512*288+293;
   P(399, 1) = 512*293+294;
   P(399, 2) = 512*294+303;
   P(399, 3) = 512*303+300;
   P(399, 4) = 512*300+301;
   P(399, 5) = 512*301+296;
   P(399, 6) = 512*296+297;
   P(399, 7) = 512*297+298;
   P(399, 8) = 512*298+299;
   P(399, 9) = 512*299+288;
   P(400, 0) = 512*288+293;
   P(400, 1) = 512*293+294;
   P(400, 2) = 512*294+417;
   P(400, 3) = 512*417+416;
   P(400, 4) = 512*416+427;
   P(400, 5) = 512*427+426;
   P(400, 6) = 512*426+335;
   P(400, 7) = 512*335+332;
   P(400, 8) = 512*332+299;
   P(400, 9) = 512*299+288;
   P(401, 0) = 512*291+324;
   P(401, 1) = 512*324+327;
   P(401, 2) = 512*327+350;
   P(401, 3) = 512*350+349;
   P(401, 4) = 512*349+348;
   P(401, 5) = 512*348+315;
   P(401, 6) = 512*315+314;
   P(401, 7) = 512*314+313;
   P(401, 8) = 512*313+312;
   P(401, 9) = 512*312+291;
   P(402, 0) = 512*291+324;
   P(402, 1) = 512*324+327;
   P(402, 2) = 512*327+418;
   P(402, 3) = 512*418+419;
   P(402, 4) = 512*419+440;
   P(402, 5) = 512*440+441;
   P(402, 6) = 512*441+318;
   P(402, 7) = 512*318+317;
   P(402, 8) = 512*317+312;
   P(402, 9) = 512*312+291;
   P(403, 0) = 512*292+293;
   P(403, 1) = 512*293+294;
   P(403, 2) = 512*294+303;
   P(403, 3) = 512*303+394;
   P(403, 4) = 512*394+395;
   P(403, 5) = 512*395+384;
   P(403, 6) = 512*384+385;
   P(403, 7) = 512*385+386;
   P(403, 8) = 512*386+295;
   P(403, 9) = 512*295+292;
   P(404, 0) = 512*292+293;
   P(404, 1) = 512*293+294;
   P(404, 2) = 512*294+417;
   P(404, 3) = 512*417+416;
   P(404, 4) = 512*416+421;
   P(404, 5) = 512*421+420;
   P(404, 6) = 512*420+387;
   P(404, 7) = 512*387+386;
   P(404, 8) = 512*386+295;
   P(404, 9) = 512*295+292;
   P(405, 0) = 512*292+293;
   P(405, 1) = 512*293+294;
   P(405, 2) = 512*294+417;
   P(405, 3) = 512*417+418;
   P(405, 4) = 512*418+419;
   P(405, 5) = 512*419+440;
   P(405, 6) = 512*440+441;
   P(405, 7) = 512*441+318;
   P(405, 8) = 512*318+295;
   P(405, 9) = 512*295+292;
   P(406, 0) = 512*294+303;
   P(406, 1) = 512*303+300;
   P(406, 2) = 512*300+301;
   P(406, 3) = 512*301+302;
   P(406, 4) = 512*302+425;
   P(406, 5) = 512*425+426;
   P(406, 6) = 512*426+427;
   P(406, 7) = 512*427+416;
   P(406, 8) = 512*416+417;
   P(406, 9) = 512*417+294;
   P(407, 0) = 512*294+303;
   P(407, 1) = 512*303+394;
   P(407, 2) = 512*394+395;
   P(407, 3) = 512*395+428;
   P(407, 4) = 512*428+431;
   P(407, 5) = 512*431+422;
   P(407, 6) = 512*422+421;
   P(407, 7) = 512*421+416;
   P(407, 8) = 512*416+417;
   P(407, 9) = 512*417+294;
   P(408, 0) = 512*295+318;
   P(408, 1) = 512*318+317;
   P(408, 2) = 512*317+316;
   P(408, 3) = 512*316+319;
   P(408, 4) = 512*319+410;
   P(408, 5) = 512*410+409;
   P(408, 6) = 512*409+408;
   P(408, 7) = 512*408+387;
   P(408, 8) = 512*387+386;
   P(408, 9) = 512*386+295;
   P(409, 0) = 512*295+318;
   P(409, 1) = 512*318+441;
   P(409, 2) = 512*441+440;
   P(409, 3) = 512*440+445;
   P(409, 4) = 512*445+446;
   P(409, 5) = 512*446+423;
   P(409, 6) = 512*423+420;
   P(409, 7) = 512*420+387;
   P(409, 8) = 512*387+386;
   P(409, 9) = 512*386+295;
   P(410, 0) = 512*296+297;
   P(410, 1) = 512*297+298;
   P(410, 2) = 512*298+299;
   P(410, 3) = 512*299+332;
   P(410, 4) = 512*332+333;
   P(410, 5) = 512*333+334;
   P(410, 6) = 512*334+343;
   P(410, 7) = 512*343+340;
   P(410, 8) = 512*340+307;
   P(410, 9) = 512*307+296;
   P(411, 0) = 512*296+297;
   P(411, 1) = 512*297+298;
   P(411, 2) = 512*298+299;
   P(411, 3) = 512*299+332;
   P(411, 4) = 512*332+335;
   P(411, 5) = 512*335+426;
   P(411, 6) = 512*426+425;
   P(411, 7) = 512*425+302;
   P(411, 8) = 512*302+301;
   P(411, 9) = 512*301+296;
   P(412, 0) = 512*296+301;
   P(412, 1) = 512*301+302;
   P(412, 2) = 512*302+311;
   P(412, 3) = 512*311+308;
   P(412, 4) = 512*308+309;
   P(412, 5) = 512*309+304;
   P(412, 6) = 512*304+305;
   P(412, 7) = 512*305+306;
   P(412, 8) = 512*306+307;
   P(412, 9) = 512*307+296;
   P(413, 0) = 512*296+301;
   P(413, 1) = 512*301+302;
   P(413, 2) = 512*302+425;
   P(413, 3) = 512*425+424;
   P(413, 4) = 512*424+435;
   P(413, 5) = 512*435+434;
   P(413, 6) = 512*434+343;
   P(413, 7) = 512*343+340;
   P(413, 8) = 512*340+307;
   P(413, 9) = 512*307+296;
   P(414, 0) = 512*300+301;
   P(414, 1) = 512*301+302;
   P(414, 2) = 512*302+311;
   P(414, 3) = 512*311+402;
   P(414, 4) = 512*402+403;
   P(414, 5) = 512*403+392;
   P(414, 6) = 512*392+393;
   P(414, 7) = 512*393+394;
   P(414, 8) = 512*394+303;
   P(414, 9) = 512*303+300;
   P(415, 0) = 512*300+301;
   P(415, 1) = 512*301+302;
   P(415, 2) = 512*302+425;
   P(415, 3) = 512*425+424;
   P(415, 4) = 512*424+429;
   P(415, 5) = 512*429+428;
   P(415, 6) = 512*428+395;
   P(415, 7) = 512*395+394;
   P(415, 8) = 512*394+303;
   P(415, 9) = 512*303+300;
   P(416, 0) = 512*302+311;
   P(416, 1) = 512*311+308;
   P(416, 2) = 512*308+309;
   P(416, 3) = 512*309+310;
   P(416, 4) = 512*310+433;
   P(416, 5) = 512*433+434;
   P(416, 6) = 512*434+435;
   P(416, 7) = 512*435+424;
   P(416, 8) = 512*424+425;
   P(416, 9) = 512*425+302;
   P(417, 0) = 512*302+311;
   P(417, 1) = 512*311+402;
   P(417, 2) = 512*402+403;
   P(417, 3) = 512*403+436;
   P(417, 4) = 512*436+439;
   P(417, 5) = 512*439+430;
   P(417, 6) = 512*430+429;
   P(417, 7) = 512*429+424;
   P(417, 8) = 512*424+425;
   P(417, 9) = 512*425+302;
   P(418, 0) = 512*304+305;
   P(418, 1) = 512*305+306;
   P(418, 2) = 512*306+307;
   P(418, 3) = 512*307+340;
   P(418, 4) = 512*340+341;
   P(418, 5) = 512*341+342;
   P(418, 6) = 512*342+351;
   P(418, 7) = 512*351+348;
   P(418, 8) = 512*348+315;
   P(418, 9) = 512*315+304;
   P(419, 0) = 512*304+305;
   P(419, 1) = 512*305+306;
   P(419, 2) = 512*306+307;
   P(419, 3) = 512*307+340;
   P(419, 4) = 512*340+343;
   P(419, 5) = 512*343+434;
   P(419, 6) = 512*434+433;
   P(419, 7) = 512*433+310;
   P(419, 8) = 512*310+309;
   P(419, 9) = 512*309+304;
   P(420, 0) = 512*304+309;
   P(420, 1) = 512*309+310;
   P(420, 2) = 512*310+319;
   P(420, 3) = 512*319+316;
   P(420, 4) = 512*316+317;
   P(420, 5) = 512*317+312;
   P(420, 6) = 512*312+313;
   P(420, 7) = 512*313+314;
   P(420, 8) = 512*314+315;
   P(420, 9) = 512*315+304;
   P(421, 0) = 512*304+309;
   P(421, 1) = 512*309+310;
   P(421, 2) = 512*310+433;
   P(421, 3) = 512*433+432;
   P(421, 4) = 512*432+443;
   P(421, 5) = 512*443+442;
   P(421, 6) = 512*442+351;
   P(421, 7) = 512*351+348;
   P(421, 8) = 512*348+315;
   P(421, 9) = 512*315+304;
   P(422, 0) = 512*308+309;
   P(422, 1) = 512*309+310;
   P(422, 2) = 512*310+319;
   P(422, 3) = 512*319+410;
   P(422, 4) = 512*410+411;
   P(422, 5) = 512*411+400;
   P(422, 6) = 512*400+401;
   P(422, 7) = 512*401+402;
   P(422, 8) = 512*402+311;
   P(422, 9) = 512*311+308;
   P(423, 0) = 512*308+309;
   P(423, 1) = 512*309+310;
   P(423, 2) = 512*310+433;
   P(423, 3) = 512*433+432;
   P(423, 4) = 512*432+437;
   P(423, 5) = 512*437+436;
   P(423, 6) = 512*436+403;
   P(423, 7) = 512*403+402;
   P(423, 8) = 512*402+311;
   P(423, 9) = 512*311+308;
   P(424, 0) = 512*310+319;
   P(424, 1) = 512*319+316;
   P(424, 2) = 512*316+317;
   P(424, 3) = 512*317+318;
   P(424, 4) = 512*318+441;
   P(424, 5) = 512*441+442;
   P(424, 6) = 512*442+443;
   P(424, 7) = 512*443+432;
   P(424, 8) = 512*432+433;
   P(424, 9) = 512*433+310;
   P(425, 0) = 512*310+319;
   P(425, 1) = 512*319+410;
   P(425, 2) = 512*410+411;
   P(425, 3) = 512*411+444;
   P(425, 4) = 512*444+447;
   P(425, 5) = 512*447+438;
   P(425, 6) = 512*438+437;
   P(425, 7) = 512*437+432;
   P(425, 8) = 512*432+433;
   P(425, 9) = 512*433+310;
   P(426, 0) = 512*312+313;
   P(426, 1) = 512*313+314;
   P(426, 2) = 512*314+315;
   P(426, 3) = 512*315+348;
   P(426, 4) = 512*348+351;
   P(426, 5) = 512*351+442;
   P(426, 6) = 512*442+441;
   P(426, 7) = 512*441+318;
   P(426, 8) = 512*318+317;
   P(426, 9) = 512*317+312;
   P(427, 0) = 512*316+317;
   P(427, 1) = 512*317+318;
   P(427, 2) = 512*318+441;
   P(427, 3) = 512*441+440;
   P(427, 4) = 512*440+445;
   P(427, 5) = 512*445+444;
   P(427, 6) = 512*444+411;
   P(427, 7) = 512*411+410;
   P(427, 8) = 512*410+319;
   P(427, 9) = 512*319+316;
   P(428, 0) = 512*320+321;
   P(428, 1) = 512*321+322;
   P(428, 2) = 512*322+323;
   P(428, 3) = 512*323+356;
   P(428, 4) = 512*356+357;
   P(428, 5) = 512*357+358;
   P(428, 6) = 512*358+367;
   P(428, 7) = 512*367+364;
   P(428, 8) = 512*364+331;
   P(428, 9) = 512*331+320;
   P(429, 0) = 512*320+321;
   P(429, 1) = 512*321+322;
   P(429, 2) = 512*322+323;
   P(429, 3) = 512*323+356;
   P(429, 4) = 512*356+359;
   P(429, 5) = 512*359+450;
   P(429, 6) = 512*450+449;
   P(429, 7) = 512*449+326;
   P(429, 8) = 512*326+325;
   P(429, 9) = 512*325+320;
   P(430, 0) = 512*320+321;
   P(430, 1) = 512*321+322;
   P(430, 2) = 512*322+323;
   P(430, 3) = 512*323+344;
   P(430, 4) = 512*344+349;
   P(430, 5) = 512*349+350;
   P(430, 6) = 512*350+327;
   P(430, 7) = 512*327+324;
   P(430, 8) = 512*324+325;
   P(430, 9) = 512*325+320;
   P(431, 0) = 512*320+325;
   P(431, 1) = 512*325+326;
   P(431, 2) = 512*326+335;
   P(431, 3) = 512*335+332;
   P(431, 4) = 512*332+333;
   P(431, 5) = 512*333+328;
   P(431, 6) = 512*328+329;
   P(431, 7) = 512*329+330;
   P(431, 8) = 512*330+331;
   P(431, 9) = 512*331+320;
   P(432, 0) = 512*320+325;
   P(432, 1) = 512*325+326;
   P(432, 2) = 512*326+449;
   P(432, 3) = 512*449+448;
   P(432, 4) = 512*448+459;
   P(432, 5) = 512*459+458;
   P(432, 6) = 512*458+367;
   P(432, 7) = 512*367+364;
   P(432, 8) = 512*364+331;
   P(432, 9) = 512*331+320;
   P(433, 0) = 512*323+356;
   P(433, 1) = 512*356+359;
   P(433, 2) = 512*359+382;
   P(433, 3) = 512*382+381;
   P(433, 4) = 512*381+380;
   P(433, 5) = 512*380+347;
   P(433, 6) = 512*347+346;
   P(433, 7) = 512*346+345;
   P(433, 8) = 512*345+344;
   P(433, 9) = 512*344+323;
   P(434, 0) = 512*323+356;
   P(434, 1) = 512*356+359;
   P(434, 2) = 512*359+450;
   P(434, 3) = 512*450+451;
   P(434, 4) = 512*451+472;
   P(434, 5) = 512*472+473;
   P(434, 6) = 512*473+350;
   P(434, 7) = 512*350+349;
   P(434, 8) = 512*349+344;
   P(434, 9) = 512*344+323;
   P(435, 0) = 512*324+325;
   P(435, 1) = 512*325+326;
   P(435, 2) = 512*326+335;
   P(435, 3) = 512*335+426;
   P(435, 4) = 512*426+427;
   P(435, 5) = 512*427+416;
   P(435, 6) = 512*416+417;
   P(435, 7) = 512*417+418;
   P(435, 8) = 512*418+327;
   P(435, 9) = 512*327+324;
   P(436, 0) = 512*324+325;
   P(436, 1) = 512*325+326;
   P(436, 2) = 512*326+449;
   P(436, 3) = 512*449+448;
   P(436, 4) = 512*448+453;
   P(436, 5) = 512*453+452;
   P(436, 6) = 512*452+419;
   P(436, 7) = 512*419+418;
   P(436, 8) = 512*418+327;
   P(436, 9) = 512*327+324;
   P(437, 0) = 512*324+325;
   P(437, 1) = 512*325+326;
   P(437, 2) = 512*326+449;
   P(437, 3) = 512*449+450;
   P(437, 4) = 512*450+451;
   P(437, 5) = 512*451+472;
   P(437, 6) = 512*472+473;
   P(437, 7) = 512*473+350;
   P(437, 8) = 512*350+327;
   P(437, 9) = 512*327+324;
   P(438, 0) = 512*326+335;
   P(438, 1) = 512*335+332;
   P(438, 2) = 512*332+333;
   P(438, 3) = 512*333+334;
   P(438, 4) = 512*334+457;
   P(438, 5) = 512*457+458;
   P(438, 6) = 512*458+459;
   P(438, 7) = 512*459+448;
   P(438, 8) = 512*448+449;
   P(438, 9) = 512*449+326;
   P(439, 0) = 512*326+335;
   P(439, 1) = 512*335+426;
   P(439, 2) = 512*426+427;
   P(439, 3) = 512*427+460;
   P(439, 4) = 512*460+463;
   P(439, 5) = 512*463+454;
   P(439, 6) = 512*454+453;
   P(439, 7) = 512*453+448;
   P(439, 8) = 512*448+449;
   P(439, 9) = 512*449+326;
   P(440, 0) = 512*327+350;
   P(440, 1) = 512*350+349;
   P(440, 2) = 512*349+348;
   P(440, 3) = 512*348+351;
   P(440, 4) = 512*351+442;
   P(440, 5) = 512*442+441;
   P(440, 6) = 512*441+440;
   P(440, 7) = 512*440+419;
   P(440, 8) = 512*419+418;
   P(440, 9) = 512*418+327;
   P(441, 0) = 512*327+350;
   P(441, 1) = 512*350+473;
   P(441, 2) = 512*473+472;
   P(441, 3) = 512*472+477;
   P(441, 4) = 512*477+478;
   P(441, 5) = 512*478+455;
   P(441, 6) = 512*455+452;
   P(441, 7) = 512*452+419;
   P(441, 8) = 512*419+418;
   P(441, 9) = 512*418+327;
   P(442, 0) = 512*328+329;
   P(442, 1) = 512*329+330;
   P(442, 2) = 512*330+331;
   P(442, 3) = 512*331+364;
   P(442, 4) = 512*364+365;
   P(442, 5) = 512*365+366;
   P(442, 6) = 512*366+375;
   P(442, 7) = 512*375+372;
   P(442, 8) = 512*372+339;
   P(442, 9) = 512*339+328;
   P(443, 0) = 512*328+329;
   P(443, 1) = 512*329+330;
   P(443, 2) = 512*330+331;
   P(443, 3) = 512*331+364;
   P(443, 4) = 512*364+367;
   P(443, 5) = 512*367+458;
   P(443, 6) = 512*458+457;
   P(443, 7) = 512*457+334;
   P(443, 8) = 512*334+333;
   P(443, 9) = 512*333+328;
   P(444, 0) = 512*328+333;
   P(444, 1) = 512*333+334;
   P(444, 2) = 512*334+343;
   P(444, 3) = 512*343+340;
   P(444, 4) = 512*340+341;
   P(444, 5) = 512*341+336;
   P(444, 6) = 512*336+337;
   P(444, 7) = 512*337+338;
   P(444, 8) = 512*338+339;
   P(444, 9) = 512*339+328;
   P(445, 0) = 512*328+333;
   P(445, 1) = 512*333+334;
   P(445, 2) = 512*334+457;
   P(445, 3) = 512*457+456;
   P(445, 4) = 512*456+467;
   P(445, 5) = 512*467+466;
   P(445, 6) = 512*466+375;
   P(445, 7) = 512*375+372;
   P(445, 8) = 512*372+339;
   P(445, 9) = 512*339+328;
   P(446, 0) = 512*332+333;
   P(446, 1) = 512*333+334;
   P(446, 2) = 512*334+343;
   P(446, 3) = 512*343+434;
   P(446, 4) = 512*434+435;
   P(446, 5) = 512*435+424;
   P(446, 6) = 512*424+425;
   P(446, 7) = 512*425+426;
   P(446, 8) = 512*426+335;
   P(446, 9) = 512*335+332;
   P(447, 0) = 512*332+333;
   P(447, 1) = 512*333+334;
   P(447, 2) = 512*334+457;
   P(447, 3) = 512*457+456;
   P(447, 4) = 512*456+461;
   P(447, 5) = 512*461+460;
   P(447, 6) = 512*460+427;
   P(447, 7) = 512*427+426;
   P(447, 8) = 512*426+335;
   P(447, 9) = 512*335+332;
   P(448, 0) = 512*334+343;
   P(448, 1) = 512*343+340;
   P(448, 2) = 512*340+341;
   P(448, 3) = 512*341+342;
   P(448, 4) = 512*342+465;
   P(448, 5) = 512*465+466;
   P(448, 6) = 512*466+467;
   P(448, 7) = 512*467+456;
   P(448, 8) = 512*456+457;
   P(448, 9) = 512*457+334;
   P(449, 0) = 512*334+343;
   P(449, 1) = 512*343+434;
   P(449, 2) = 512*434+435;
   P(449, 3) = 512*435+468;
   P(449, 4) = 512*468+471;
   P(449, 5) = 512*471+462;
   P(449, 6) = 512*462+461;
   P(449, 7) = 512*461+456;
   P(449, 8) = 512*456+457;
   P(449, 9) = 512*457+334;
   P(450, 0) = 512*336+337;
   P(450, 1) = 512*337+338;
   P(450, 2) = 512*338+339;
   P(450, 3) = 512*339+372;
   P(450, 4) = 512*372+373;
   P(450, 5) = 512*373+374;
   P(450, 6) = 512*374+383;
   P(450, 7) = 512*383+380;
   P(450, 8) = 512*380+347;
   P(450, 9) = 512*347+336;
   P(451, 0) = 512*336+337;
   P(451, 1) = 512*337+338;
   P(451, 2) = 512*338+339;
   P(451, 3) = 512*339+372;
   P(451, 4) = 512*372+375;
   P(451, 5) = 512*375+466;
   P(451, 6) = 512*466+465;
   P(451, 7) = 512*465+342;
   P(451, 8) = 512*342+341;
   P(451, 9) = 512*341+336;
   P(452, 0) = 512*336+341;
   P(452, 1) = 512*341+342;
   P(452, 2) = 512*342+351;
   P(452, 3) = 512*351+348;
   P(452, 4) = 512*348+349;
   P(452, 5) = 512*349+344;
   P(452, 6) = 512*344+345;
   P(452, 7) = 512*345+346;
   P(452, 8) = 512*346+347;
   P(452, 9) = 512*347+336;
   P(453, 0) = 512*336+341;
   P(453, 1) = 512*341+342;
   P(453, 2) = 512*342+465;
   P(453, 3) = 512*465+464;
   P(453, 4) = 512*464+475;
   P(453, 5) = 512*475+474;
   P(453, 6) = 512*474+383;
   P(453, 7) = 512*383+380;
   P(453, 8) = 512*380+347;
   P(453, 9) = 512*347+336;
   P(454, 0) = 512*340+341;
   P(454, 1) = 512*341+342;
   P(454, 2) = 512*342+351;
   P(454, 3) = 512*351+442;
   P(454, 4) = 512*442+443;
   P(454, 5) = 512*443+432;
   P(454, 6) = 512*432+433;
   P(454, 7) = 512*433+434;
   P(454, 8) = 512*434+343;
   P(454, 9) = 512*343+340;
   P(455, 0) = 512*340+341;
   P(455, 1) = 512*341+342;
   P(455, 2) = 512*342+465;
   P(455, 3) = 512*465+464;
   P(455, 4) = 512*464+469;
   P(455, 5) = 512*469+468;
   P(455, 6) = 512*468+435;
   P(455, 7) = 512*435+434;
   P(455, 8) = 512*434+343;
   P(455, 9) = 512*343+340;
   P(456, 0) = 512*342+351;
   P(456, 1) = 512*351+348;
   P(456, 2) = 512*348+349;
   P(456, 3) = 512*349+350;
   P(456, 4) = 512*350+473;
   P(456, 5) = 512*473+474;
   P(456, 6) = 512*474+475;
   P(456, 7) = 512*475+464;
   P(456, 8) = 512*464+465;
   P(456, 9) = 512*465+342;
   P(457, 0) = 512*342+351;
   P(457, 1) = 512*351+442;
   P(457, 2) = 512*442+443;
   P(457, 3) = 512*443+476;
   P(457, 4) = 512*476+479;
   P(457, 5) = 512*479+470;
   P(457, 6) = 512*470+469;
   P(457, 7) = 512*469+464;
   P(457, 8) = 512*464+465;
   P(457, 9) = 512*465+342;
   P(458, 0) = 512*344+345;
   P(458, 1) = 512*345+346;
   P(458, 2) = 512*346+347;
   P(458, 3) = 512*347+380;
   P(458, 4) = 512*380+383;
   P(458, 5) = 512*383+474;
   P(458, 6) = 512*474+473;
   P(458, 7) = 512*473+350;
   P(458, 8) = 512*350+349;
   P(458, 9) = 512*349+344;
   P(459, 0) = 512*348+349;
   P(459, 1) = 512*349+350;
   P(459, 2) = 512*350+473;
   P(459, 3) = 512*473+472;
   P(459, 4) = 512*472+477;
   P(459, 5) = 512*477+476;
   P(459, 6) = 512*476+443;
   P(459, 7) = 512*443+442;
   P(459, 8) = 512*442+351;
   P(459, 9) = 512*351+348;
   P(460, 0) = 512*352+353;
   P(460, 1) = 512*353+354;
   P(460, 2) = 512*354+355;
   P(460, 3) = 512*355+376;
   P(460, 4) = 512*376+381;
   P(460, 5) = 512*381+382;
   P(460, 6) = 512*382+359;
   P(460, 7) = 512*359+356;
   P(460, 8) = 512*356+357;
   P(460, 9) = 512*357+352;
   P(461, 0) = 512*352+357;
   P(461, 1) = 512*357+358;
   P(461, 2) = 512*358+367;
   P(461, 3) = 512*367+364;
   P(461, 4) = 512*364+365;
   P(461, 5) = 512*365+360;
   P(461, 6) = 512*360+361;
   P(461, 7) = 512*361+362;
   P(461, 8) = 512*362+363;
   P(461, 9) = 512*363+352;
   P(462, 0) = 512*356+357;
   P(462, 1) = 512*357+358;
   P(462, 2) = 512*358+367;
   P(462, 3) = 512*367+458;
   P(462, 4) = 512*458+459;
   P(462, 5) = 512*459+448;
   P(462, 6) = 512*448+449;
   P(462, 7) = 512*449+450;
   P(462, 8) = 512*450+359;
   P(462, 9) = 512*359+356;
   P(463, 0) = 512*356+357;
   P(463, 1) = 512*357+358;
   P(463, 2) = 512*358+481;
   P(463, 3) = 512*481+480;
   P(463, 4) = 512*480+485;
   P(463, 5) = 512*485+484;
   P(463, 6) = 512*484+451;
   P(463, 7) = 512*451+450;
   P(463, 8) = 512*450+359;
   P(463, 9) = 512*359+356;
   P(464, 0) = 512*356+357;
   P(464, 1) = 512*357+358;
   P(464, 2) = 512*358+481;
   P(464, 3) = 512*481+482;
   P(464, 4) = 512*482+483;
   P(464, 5) = 512*483+504;
   P(464, 6) = 512*504+505;
   P(464, 7) = 512*505+382;
   P(464, 8) = 512*382+359;
   P(464, 9) = 512*359+356;
   P(465, 0) = 512*358+367;
   P(465, 1) = 512*367+364;
   P(465, 2) = 512*364+365;
   P(465, 3) = 512*365+366;
   P(465, 4) = 512*366+489;
   P(465, 5) = 512*489+490;
   P(465, 6) = 512*490+491;
   P(465, 7) = 512*491+480;
   P(465, 8) = 512*480+481;
   P(465, 9) = 512*481+358;
   P(466, 0) = 512*358+367;
   P(466, 1) = 512*367+458;
   P(466, 2) = 512*458+459;
   P(466, 3) = 512*459+492;
   P(466, 4) = 512*492+495;
   P(466, 5) = 512*495+486;
   P(466, 6) = 512*486+485;
   P(466, 7) = 512*485+480;
   P(466, 8) = 512*480+481;
   P(466, 9) = 512*481+358;
   P(467, 0) = 512*359+382;
   P(467, 1) = 512*382+381;
   P(467, 2) = 512*381+380;
   P(467, 3) = 512*380+383;
   P(467, 4) = 512*383+474;
   P(467, 5) = 512*474+473;
   P(467, 6) = 512*473+472;
   P(467, 7) = 512*472+451;
   P(467, 8) = 512*451+450;
   P(467, 9) = 512*450+359;
   P(468, 0) = 512*359+382;
   P(468, 1) = 512*382+505;
   P(468, 2) = 512*505+504;
   P(468, 3) = 512*504+509;
   P(468, 4) = 512*509+510;
   P(468, 5) = 512*510+487;
   P(468, 6) = 512*487+484;
   P(468, 7) = 512*484+451;
   P(468, 8) = 512*451+450;
   P(468, 9) = 512*450+359;
   P(469, 0) = 512*360+365;
   P(469, 1) = 512*365+366;
   P(469, 2) = 512*366+375;
   P(469, 3) = 512*375+372;
   P(469, 4) = 512*372+373;
   P(469, 5) = 512*373+368;
   P(469, 6) = 512*368+369;
   P(469, 7) = 512*369+370;
   P(469, 8) = 512*370+371;
   P(469, 9) = 512*371+360;
   P(470, 0) = 512*364+365;
   P(470, 1) = 512*365+366;
   P(470, 2) = 512*366+375;
   P(470, 3) = 512*375+466;
   P(470, 4) = 512*466+467;
   P(470, 5) = 512*467+456;
   P(470, 6) = 512*456+457;
   P(470, 7) = 512*457+458;
   P(470, 8) = 512*458+367;
   P(470, 9) = 512*367+364;
   P(471, 0) = 512*364+365;
   P(471, 1) = 512*365+366;
   P(471, 2) = 512*366+489;
   P(471, 3) = 512*489+488;
   P(471, 4) = 512*488+493;
   P(471, 5) = 512*493+492;
   P(471, 6) = 512*492+459;
   P(471, 7) = 512*459+458;
   P(471, 8) = 512*458+367;
   P(471, 9) = 512*367+364;
   P(472, 0) = 512*366+375;
   P(472, 1) = 512*375+372;
   P(472, 2) = 512*372+373;
   P(472, 3) = 512*373+374;
   P(472, 4) = 512*374+497;
   P(472, 5) = 512*497+498;
   P(472, 6) = 512*498+499;
   P(472, 7) = 512*499+488;
   P(472, 8) = 512*488+489;
   P(472, 9) = 512*489+366;
   P(473, 0) = 512*366+375;
   P(473, 1) = 512*375+466;
   P(473, 2) = 512*466+467;
   P(473, 3) = 512*467+500;
   P(473, 4) = 512*500+503;
   P(473, 5) = 512*503+494;
   P(473, 6) = 512*494+493;
   P(473, 7) = 512*493+488;
   P(473, 8) = 512*488+489;
   P(473, 9) = 512*489+366;
   P(474, 0) = 512*368+373;
   P(474, 1) = 512*373+374;
   P(474, 2) = 512*374+383;
   P(474, 3) = 512*383+380;
   P(474, 4) = 512*380+381;
   P(474, 5) = 512*381+376;
   P(474, 6) = 512*376+377;
   P(474, 7) = 512*377+378;
   P(474, 8) = 512*378+379;
   P(474, 9) = 512*379+368;
   P(475, 0) = 512*372+373;
   P(475, 1) = 512*373+374;
   P(475, 2) = 512*374+383;
   P(475, 3) = 512*383+474;
   P(475, 4) = 512*474+475;
   P(475, 5) = 512*475+464;
   P(475, 6) = 512*464+465;
   P(475, 7) = 512*465+466;
   P(475, 8) = 512*466+375;
   P(475, 9) = 512*375+372;
   P(476, 0) = 512*372+373;
   P(476, 1) = 512*373+374;
   P(476, 2) = 512*374+497;
   P(476, 3) = 512*497+496;
   P(476, 4) = 512*496+501;
   P(476, 5) = 512*501+500;
   P(476, 6) = 512*500+467;
   P(476, 7) = 512*467+466;
   P(476, 8) = 512*466+375;
   P(476, 9) = 512*375+372;
   P(477, 0) = 512*374+383;
   P(477, 1) = 512*383+380;
   P(477, 2) = 512*380+381;
   P(477, 3) = 512*381+382;
   P(477, 4) = 512*382+505;
   P(477, 5) = 512*505+506;
   P(477, 6) = 512*506+507;
   P(477, 7) = 512*507+496;
   P(477, 8) = 512*496+497;
   P(477, 9) = 512*497+374;
   P(478, 0) = 512*374+383;
   P(478, 1) = 512*383+474;
   P(478, 2) = 512*474+475;
   P(478, 3) = 512*475+508;
   P(478, 4) = 512*508+511;
   P(478, 5) = 512*511+502;
   P(478, 6) = 512*502+501;
   P(478, 7) = 512*501+496;
   P(478, 8) = 512*496+497;
   P(478, 9) = 512*497+374;
   P(479, 0) = 512*380+381;
   P(479, 1) = 512*381+382;
   P(479, 2) = 512*382+505;
   P(479, 3) = 512*505+504;
   P(479, 4) = 512*504+509;
   P(479, 5) = 512*509+508;
   P(479, 6) = 512*508+475;
   P(479, 7) = 512*475+474;
   P(479, 8) = 512*474+383;
   P(479, 9) = 512*383+380;
   P(480, 0) = 512*384+385;
   P(480, 1) = 512*385+386;
   P(480, 2) = 512*386+387;
   P(480, 3) = 512*387+420;
   P(480, 4) = 512*420+421;
   P(480, 5) = 512*421+422;
   P(480, 6) = 512*422+431;
   P(480, 7) = 512*431+428;
   P(480, 8) = 512*428+395;
   P(480, 9) = 512*395+384;
   P(481, 0) = 512*384+385;
   P(481, 1) = 512*385+386;
   P(481, 2) = 512*386+387;
   P(481, 3) = 512*387+408;
   P(481, 4) = 512*408+413;
   P(481, 5) = 512*413+414;
   P(481, 6) = 512*414+391;
   P(481, 7) = 512*391+388;
   P(481, 8) = 512*388+389;
   P(481, 9) = 512*389+384;
   P(482, 0) = 512*384+389;
   P(482, 1) = 512*389+390;
   P(482, 2) = 512*390+399;
   P(482, 3) = 512*399+396;
   P(482, 4) = 512*396+397;
   P(482, 5) = 512*397+392;
   P(482, 6) = 512*392+393;
   P(482, 7) = 512*393+394;
   P(482, 8) = 512*394+395;
   P(482, 9) = 512*395+384;
   P(483, 0) = 512*387+420;
   P(483, 1) = 512*420+423;
   P(483, 2) = 512*423+446;
   P(483, 3) = 512*446+445;
   P(483, 4) = 512*445+444;
   P(483, 5) = 512*444+411;
   P(483, 6) = 512*411+410;
   P(483, 7) = 512*410+409;
   P(483, 8) = 512*409+408;
   P(483, 9) = 512*408+387;
   P(484, 0) = 512*388+389;
   P(484, 1) = 512*389+390;
   P(484, 2) = 512*390+399;
   P(484, 3) = 512*399+396;
   P(484, 4) = 512*396+491;
   P(484, 5) = 512*491+480;
   P(484, 6) = 512*480+481;
   P(484, 7) = 512*481+482;
   P(484, 8) = 512*482+483;
   P(484, 9) = 512*483+388;
   P(485, 0) = 512*388+483;
   P(485, 1) = 512*483+504;
   P(485, 2) = 512*504+505;
   P(485, 3) = 512*505+506;
   P(485, 4) = 512*506+507;
   P(485, 5) = 512*507+412;
   P(485, 6) = 512*412+413;
   P(485, 7) = 512*413+414;
   P(485, 8) = 512*414+391;
   P(485, 9) = 512*391+388;
   P(486, 0) = 512*392+393;
   P(486, 1) = 512*393+394;
   P(486, 2) = 512*394+395;
   P(486, 3) = 512*395+428;
   P(486, 4) = 512*428+429;
   P(486, 5) = 512*429+430;
   P(486, 6) = 512*430+439;
   P(486, 7) = 512*439+436;
   P(486, 8) = 512*436+403;
   P(486, 9) = 512*403+392;
   P(487, 0) = 512*392+397;
   P(487, 1) = 512*397+398;
   P(487, 2) = 512*398+407;
   P(487, 3) = 512*407+404;
   P(487, 4) = 512*404+405;
   P(487, 5) = 512*405+400;
   P(487, 6) = 512*400+401;
   P(487, 7) = 512*401+402;
   P(487, 8) = 512*402+403;
   P(487, 9) = 512*403+392;
   P(488, 0) = 512*396+397;
   P(488, 1) = 512*397+398;
   P(488, 2) = 512*398+407;
   P(488, 3) = 512*407+404;
   P(488, 4) = 512*404+499;
   P(488, 5) = 512*499+488;
   P(488, 6) = 512*488+489;
   P(488, 7) = 512*489+490;
   P(488, 8) = 512*490+491;
   P(488, 9) = 512*491+396;
   P(489, 0) = 512*400+401;
   P(489, 1) = 512*401+402;
   P(489, 2) = 512*402+403;
   P(489, 3) = 512*403+436;
   P(489, 4) = 512*436+437;
   P(489, 5) = 512*437+438;
   P(489, 6) = 512*438+447;
   P(489, 7) = 512*447+444;
   P(489, 8) = 512*444+411;
   P(489, 9) = 512*411+400;
   P(490, 0) = 512*400+405;
   P(490, 1) = 512*405+406;
   P(490, 2) = 512*406+415;
   P(490, 3) = 512*415+412;
   P(490, 4) = 512*412+413;
   P(490, 5) = 512*413+408;
   P(490, 6) = 512*408+409;
   P(490, 7) = 512*409+410;
   P(490, 8) = 512*410+411;
   P(490, 9) = 512*411+400;
   P(491, 0) = 512*404+405;
   P(491, 1) = 512*405+406;
   P(491, 2) = 512*406+415;
   P(491, 3) = 512*415+412;
   P(491, 4) = 512*412+507;
   P(491, 5) = 512*507+496;
   P(491, 6) = 512*496+497;
   P(491, 7) = 512*497+498;
   P(491, 8) = 512*498+499;
   P(491, 9) = 512*499+404;
   P(492, 0) = 512*416+417;
   P(492, 1) = 512*417+418;
   P(492, 2) = 512*418+419;
   P(492, 3) = 512*419+452;
   P(492, 4) = 512*452+453;
   P(492, 5) = 512*453+454;
   P(492, 6) = 512*454+463;
   P(492, 7) = 512*463+460;
   P(492, 8) = 512*460+427;
   P(492, 9) = 512*427+416;
   P(493, 0) = 512*416+417;
   P(493, 1) = 512*417+418;
   P(493, 2) = 512*418+419;
   P(493, 3) = 512*419+440;
   P(493, 4) = 512*440+445;
   P(493, 5) = 512*445+446;
   P(493, 6) = 512*446+423;
   P(493, 7) = 512*423+420;
   P(493, 8) = 512*420+421;
   P(493, 9) = 512*421+416;
   P(494, 0) = 512*416+421;
   P(494, 1) = 512*421+422;
   P(494, 2) = 512*422+431;
   P(494, 3) = 512*431+428;
   P(494, 4) = 512*428+429;
   P(494, 5) = 512*429+424;
   P(494, 6) = 512*424+425;
   P(494, 7) = 512*425+426;
   P(494, 8) = 512*426+427;
   P(494, 9) = 512*427+416;
   P(495, 0) = 512*419+452;
   P(495, 1) = 512*452+455;
   P(495, 2) = 512*455+478;
   P(495, 3) = 512*478+477;
   P(495, 4) = 512*477+476;
   P(495, 5) = 512*476+443;
   P(495, 6) = 512*443+442;
   P(495, 7) = 512*442+441;
   P(495, 8) = 512*441+440;
   P(495, 9) = 512*440+419;
   P(496, 0) = 512*424+425;
   P(496, 1) = 512*425+426;
   P(496, 2) = 512*426+427;
   P(496, 3) = 512*427+460;
   P(496, 4) = 512*460+461;
   P(496, 5) = 512*461+462;
   P(496, 6) = 512*462+471;
   P(496, 7) = 512*471+468;
   P(496, 8) = 512*468+435;
   P(496, 9) = 512*435+424;
   P(497, 0) = 512*424+429;
   P(497, 1) = 512*429+430;
   P(497, 2) = 512*430+439;
   P(497, 3) = 512*439+436;
   P(497, 4) = 512*436+437;
   P(497, 5) = 512*437+432;
   P(497, 6) = 512*432+433;
   P(497, 7) = 512*433+434;
   P(497, 8) = 512*434+435;
   P(497, 9) = 512*435+424;
   P(498, 0) = 512*432+433;
   P(498, 1) = 512*433+434;
   P(498, 2) = 512*434+435;
   P(498, 3) = 512*435+468;
   P(498, 4) = 512*468+469;
   P(498, 5) = 512*469+470;
   P(498, 6) = 512*470+479;
   P(498, 7) = 512*479+476;
   P(498, 8) = 512*476+443;
   P(498, 9) = 512*443+432;
   P(499, 0) = 512*432+437;
   P(499, 1) = 512*437+438;
   P(499, 2) = 512*438+447;
   P(499, 3) = 512*447+444;
   P(499, 4) = 512*444+445;
   P(499, 5) = 512*445+440;
   P(499, 6) = 512*440+441;
   P(499, 7) = 512*441+442;
   P(499, 8) = 512*442+443;
   P(499, 9) = 512*443+432;
   P(500, 0) = 512*448+449;
   P(500, 1) = 512*449+450;
   P(500, 2) = 512*450+451;
   P(500, 3) = 512*451+484;
   P(500, 4) = 512*484+485;
   P(500, 5) = 512*485+486;
   P(500, 6) = 512*486+495;
   P(500, 7) = 512*495+492;
   P(500, 8) = 512*492+459;
   P(500, 9) = 512*459+448;
   P(501, 0) = 512*448+449;
   P(501, 1) = 512*449+450;
   P(501, 2) = 512*450+451;
   P(501, 3) = 512*451+472;
   P(501, 4) = 512*472+477;
   P(501, 5) = 512*477+478;
   P(501, 6) = 512*478+455;
   P(501, 7) = 512*455+452;
   P(501, 8) = 512*452+453;
   P(501, 9) = 512*453+448;
   P(502, 0) = 512*448+453;
   P(502, 1) = 512*453+454;
   P(502, 2) = 512*454+463;
   P(502, 3) = 512*463+460;
   P(502, 4) = 512*460+461;
   P(502, 5) = 512*461+456;
   P(502, 6) = 512*456+457;
   P(502, 7) = 512*457+458;
   P(502, 8) = 512*458+459;
   P(502, 9) = 512*459+448;
   P(503, 0) = 512*451+484;
   P(503, 1) = 512*484+487;
   P(503, 2) = 512*487+510;
   P(503, 3) = 512*510+509;
   P(503, 4) = 512*509+508;
   P(503, 5) = 512*508+475;
   P(503, 6) = 512*475+474;
   P(503, 7) = 512*474+473;
   P(503, 8) = 512*473+472;
   P(503, 9) = 512*472+451;
   P(504, 0) = 512*456+457;
   P(504, 1) = 512*457+458;
   P(504, 2) = 512*458+459;
   P(504, 3) = 512*459+492;
   P(504, 4) = 512*492+493;
   P(504, 5) = 512*493+494;
   P(504, 6) = 512*494+503;
   P(504, 7) = 512*503+500;
   P(504, 8) = 512*500+467;
   P(504, 9) = 512*467+456;
   P(505, 0) = 512*456+461;
   P(505, 1) = 512*461+462;
   P(505, 2) = 512*462+471;
   P(505, 3) = 512*471+468;
   P(505, 4) = 512*468+469;
   P(505, 5) = 512*469+464;
   P(505, 6) = 512*464+465;
   P(505, 7) = 512*465+466;
   P(505, 8) = 512*466+467;
   P(505, 9) = 512*467+456;
   P(506, 0) = 512*464+465;
   P(506, 1) = 512*465+466;
   P(506, 2) = 512*466+467;
   P(506, 3) = 512*467+500;
   P(506, 4) = 512*500+501;
   P(506, 5) = 512*501+502;
   P(506, 6) = 512*502+511;
   P(506, 7) = 512*511+508;
   P(506, 8) = 512*508+475;
   P(506, 9) = 512*475+464;
   P(507, 0) = 512*464+469;
   P(507, 1) = 512*469+470;
   P(507, 2) = 512*470+479;
   P(507, 3) = 512*479+476;
   P(507, 4) = 512*476+477;
   P(507, 5) = 512*477+472;
   P(507, 6) = 512*472+473;
   P(507, 7) = 512*473+474;
   P(507, 8) = 512*474+475;
   P(507, 9) = 512*475+464;
   P(508, 0) = 512*480+481;
   P(508, 1) = 512*481+482;
   P(508, 2) = 512*482+483;
   P(508, 3) = 512*483+504;
   P(508, 4) = 512*504+509;
   P(508, 5) = 512*509+510;
   P(508, 6) = 512*510+487;
   P(508, 7) = 512*487+484;
   P(508, 8) = 512*484+485;
   P(508, 9) = 512*485+480;
   P(509, 0) = 512*480+485;
   P(509, 1) = 512*485+486;
   P(509, 2) = 512*486+495;
   P(509, 3) = 512*495+492;
   P(509, 4) = 512*492+493;
   P(509, 5) = 512*493+488;
   P(509, 6) = 512*488+489;
   P(509, 7) = 512*489+490;
   P(509, 8) = 512*490+491;
   P(509, 9) = 512*491+480;
   P(510, 0) = 512*488+493;
   P(510, 1) = 512*493+494;
   P(510, 2) = 512*494+503;
   P(510, 3) = 512*503+500;
   P(510, 4) = 512*500+501;
   P(510, 5) = 512*501+496;
   P(510, 6) = 512*496+497;
   P(510, 7) = 512*497+498;
   P(510, 8) = 512*498+499;
   P(510, 9) = 512*499+488;
   P(511, 0) = 512*496+501;
   P(511, 1) = 512*501+502;
   P(511, 2) = 512*502+511;
   P(511, 3) = 512*511+508;
   P(511, 4) = 512*508+509;
   P(511, 5) = 512*509+504;
   P(511, 6) = 512*504+505;
   P(511, 7) = 512*505+506;
   P(511, 8) = 512*506+507;
   P(511, 9) = 512*507+496;
	 return P;
  }
  
