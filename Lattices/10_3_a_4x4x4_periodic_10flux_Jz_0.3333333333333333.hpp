#include <armadillo>
#include <complex>

using namespace arma;

sp_cx_mat def_matrix()
{
   sp_cx_mat A(256,256);
   A(0, 2) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(2, 0) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(0, 49) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(49, 0) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(0, 195) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(195, 0) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1, 2) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(2, 1) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1, 3) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(3, 1) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1, 16) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(16, 1) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(2, 15) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(15, 2) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(3, 6) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(6, 3) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(3, 64) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(64, 3) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(4, 6) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(6, 4) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(4, 53) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(53, 4) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(4, 199) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(199, 4) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(5, 6) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(6, 5) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(5, 7) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(7, 5) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(5, 20) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(20, 5) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(7, 10) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(10, 7) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(7, 68) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(68, 7) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(8, 10) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(10, 8) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(8, 57) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(57, 8) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(8, 203) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(203, 8) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(9, 10) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(10, 9) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(9, 11) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(11, 9) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(9, 24) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(24, 9) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(11, 14) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(14, 11) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(11, 72) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(72, 11) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(12, 14) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(14, 12) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(12, 61) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(61, 12) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(12, 207) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(207, 12) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(13, 14) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(14, 13) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(13, 15) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(15, 13) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(13, 28) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(28, 13) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(15, 76) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(76, 15) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(16, 18) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(18, 16) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(16, 211) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(211, 16) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(17, 18) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(18, 17) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(17, 19) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(19, 17) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(17, 32) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(32, 17) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(18, 31) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(31, 18) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(19, 22) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(22, 19) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(19, 80) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(80, 19) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(20, 22) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(22, 20) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(20, 215) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(215, 20) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(21, 22) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(22, 21) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(21, 23) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(23, 21) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(21, 36) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(36, 21) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(23, 26) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(26, 23) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(23, 84) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(84, 23) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(24, 26) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(26, 24) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(24, 219) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(219, 24) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(25, 26) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(26, 25) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(25, 27) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(27, 25) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(25, 40) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(40, 25) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(27, 30) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(30, 27) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(27, 88) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(88, 27) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(28, 30) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(30, 28) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(28, 223) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(223, 28) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(29, 30) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(30, 29) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(29, 31) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(31, 29) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(29, 44) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(44, 29) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(31, 92) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(92, 31) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(32, 34) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(34, 32) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(32, 227) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(227, 32) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(33, 34) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(34, 33) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(33, 35) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(35, 33) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(33, 48) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(48, 33) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(34, 47) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(47, 34) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(35, 38) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(38, 35) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(35, 96) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(96, 35) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(36, 38) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(38, 36) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(36, 231) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(231, 36) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(37, 38) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(38, 37) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(37, 39) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(39, 37) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(37, 52) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(52, 37) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(39, 42) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(42, 39) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(39, 100) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(100, 39) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(40, 42) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(42, 40) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(40, 235) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(235, 40) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(41, 42) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(42, 41) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(41, 43) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(43, 41) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(41, 56) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(56, 41) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(43, 46) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(46, 43) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(43, 104) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(104, 43) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(44, 46) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(46, 44) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(44, 239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(239, 44) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(45, 46) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(46, 45) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(45, 47) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(47, 45) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(45, 60) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(60, 45) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(47, 108) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(108, 47) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(48, 50) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(50, 48) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(48, 243) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(243, 48) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(49, 50) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(50, 49) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(49, 51) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(51, 49) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(50, 63) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(63, 50) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(51, 54) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(54, 51) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(51, 112) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(112, 51) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(52, 54) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(54, 52) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(52, 247) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(247, 52) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(53, 54) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(54, 53) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(53, 55) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(55, 53) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(55, 58) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(58, 55) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(55, 116) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(116, 55) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(56, 58) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(58, 56) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(56, 251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(251, 56) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(57, 58) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(58, 57) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(57, 59) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(59, 57) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(59, 62) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(62, 59) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(59, 120) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(120, 59) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(60, 62) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(62, 60) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(60, 255) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(255, 60) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(61, 62) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(62, 61) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(61, 63) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(63, 61) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(63, 124) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(124, 63) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(64, 66) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(66, 64) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(64, 113) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(113, 64) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(65, 66) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(66, 65) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(65, 67) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(67, 65) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(65, 80) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(80, 65) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(66, 79) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(79, 66) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(67, 70) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(70, 67) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(67, 128) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(128, 67) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(68, 70) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(70, 68) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(68, 117) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(117, 68) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(69, 70) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(70, 69) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(69, 71) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(71, 69) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(69, 84) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(84, 69) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(71, 74) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(74, 71) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(71, 132) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(132, 71) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(72, 74) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(74, 72) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(72, 121) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(121, 72) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(73, 74) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(74, 73) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(73, 75) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(75, 73) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(73, 88) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(88, 73) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(75, 78) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(78, 75) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(75, 136) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(136, 75) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(76, 78) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(78, 76) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(76, 125) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(125, 76) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(77, 78) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(78, 77) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(77, 79) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(79, 77) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(77, 92) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(92, 77) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(79, 140) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(140, 79) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(80, 82) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(82, 80) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(81, 82) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(82, 81) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(81, 83) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(83, 81) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(81, 96) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(96, 81) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(82, 95) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(95, 82) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(83, 86) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(86, 83) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(83, 144) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(144, 83) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(84, 86) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(86, 84) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(85, 86) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(86, 85) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(85, 87) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(87, 85) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(85, 100) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(100, 85) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(87, 90) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(90, 87) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(87, 148) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(148, 87) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(88, 90) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(90, 88) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(89, 90) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(90, 89) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(89, 91) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(91, 89) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(89, 104) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(104, 89) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(91, 94) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(94, 91) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(91, 152) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(152, 91) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(92, 94) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(94, 92) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(93, 94) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(94, 93) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(93, 95) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(95, 93) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(93, 108) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(108, 93) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(95, 156) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(156, 95) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(96, 98) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(98, 96) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(97, 98) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(98, 97) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(97, 99) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(99, 97) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(97, 112) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(112, 97) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(98, 111) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(111, 98) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(99, 102) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(102, 99) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(99, 160) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(160, 99) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(100, 102) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(102, 100) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(101, 102) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(102, 101) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(101, 103) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(103, 101) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(101, 116) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(116, 101) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(103, 106) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(106, 103) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(103, 164) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(164, 103) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(104, 106) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(106, 104) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(105, 106) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(106, 105) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(105, 107) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(107, 105) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(105, 120) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(120, 105) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(107, 110) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(110, 107) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(107, 168) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(168, 107) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(108, 110) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(110, 108) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(109, 110) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(110, 109) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(109, 111) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(111, 109) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(109, 124) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(124, 109) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(111, 172) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(172, 111) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(112, 114) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(114, 112) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(113, 114) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(114, 113) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(113, 115) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(115, 113) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(114, 127) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(127, 114) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(115, 118) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(118, 115) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(115, 176) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(176, 115) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(116, 118) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(118, 116) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(117, 118) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(118, 117) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(117, 119) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(119, 117) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(119, 122) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(122, 119) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(119, 180) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(180, 119) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(120, 122) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(122, 120) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(121, 122) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(122, 121) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(121, 123) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(123, 121) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(123, 126) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(126, 123) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(123, 184) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(184, 123) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(124, 126) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(126, 124) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(125, 126) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(126, 125) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(125, 127) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(127, 125) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(127, 188) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(188, 127) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(128, 130) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(130, 128) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(128, 177) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(177, 128) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(129, 130) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(130, 129) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(129, 131) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(131, 129) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(129, 144) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(144, 129) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(130, 143) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(143, 130) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(131, 134) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(134, 131) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(131, 192) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(192, 131) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(132, 134) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(134, 132) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(132, 181) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(181, 132) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(133, 134) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(134, 133) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(133, 135) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(135, 133) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(133, 148) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(148, 133) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(135, 138) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(138, 135) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(135, 196) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(196, 135) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(136, 138) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(138, 136) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(136, 185) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(185, 136) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(137, 138) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(138, 137) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(137, 139) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(139, 137) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(137, 152) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(152, 137) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(139, 142) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(142, 139) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(139, 200) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(200, 139) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(140, 142) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(142, 140) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(140, 189) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(189, 140) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(141, 142) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(142, 141) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(141, 143) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(143, 141) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(141, 156) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(156, 141) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(143, 204) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(204, 143) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(144, 146) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(146, 144) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(145, 146) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(146, 145) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(145, 147) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(147, 145) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(145, 160) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(160, 145) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(146, 159) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(159, 146) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(147, 150) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(150, 147) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(147, 208) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(208, 147) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(148, 150) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(150, 148) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(149, 150) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(150, 149) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(149, 151) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(151, 149) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(149, 164) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(164, 149) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(151, 154) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(154, 151) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(151, 212) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(212, 151) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(152, 154) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(154, 152) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(153, 154) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(154, 153) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(153, 155) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(155, 153) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(153, 168) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(168, 153) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(155, 158) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(158, 155) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(155, 216) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(216, 155) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(156, 158) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(158, 156) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(157, 158) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(158, 157) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(157, 159) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(159, 157) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(157, 172) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(172, 157) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(159, 220) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(220, 159) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(160, 162) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(162, 160) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(161, 162) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(162, 161) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(161, 163) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(163, 161) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(161, 176) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(176, 161) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(162, 175) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(175, 162) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(163, 166) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(166, 163) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(163, 224) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(224, 163) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(164, 166) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(166, 164) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(165, 166) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(166, 165) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(165, 167) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(167, 165) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(165, 180) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(180, 165) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(167, 170) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(170, 167) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(167, 228) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(228, 167) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(168, 170) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(170, 168) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(169, 170) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(170, 169) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(169, 171) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(171, 169) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(169, 184) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(184, 169) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(171, 174) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(174, 171) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(171, 232) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(232, 171) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(172, 174) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(174, 172) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(173, 174) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(174, 173) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(173, 175) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(175, 173) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(173, 188) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(188, 173) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(175, 236) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(236, 175) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(176, 178) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(178, 176) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(177, 178) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(178, 177) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(177, 179) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(179, 177) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(178, 191) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(191, 178) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(179, 182) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(182, 179) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(179, 240) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(240, 179) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(180, 182) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(182, 180) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(181, 182) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(182, 181) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(181, 183) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(183, 181) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(183, 186) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(186, 183) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(183, 244) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(244, 183) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(184, 186) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(186, 184) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(185, 186) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(186, 185) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(185, 187) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(187, 185) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(187, 190) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(190, 187) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(187, 248) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(248, 187) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(188, 190) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(190, 188) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(189, 190) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(190, 189) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(189, 191) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(191, 189) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(191, 252) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(252, 191) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(192, 194) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(194, 192) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(192, 241) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(241, 192) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(193, 194) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(194, 193) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(193, 195) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(195, 193) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(193, 208) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(208, 193) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(194, 207) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(207, 194) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(195, 198) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(198, 195) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(196, 198) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(198, 196) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(196, 245) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(245, 196) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(197, 198) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(198, 197) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(197, 199) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(199, 197) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(197, 212) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(212, 197) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(199, 202) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(202, 199) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(200, 202) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(202, 200) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(200, 249) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(249, 200) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(201, 202) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(202, 201) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(201, 203) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(203, 201) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(201, 216) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(216, 201) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(203, 206) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(206, 203) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(204, 206) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(206, 204) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(204, 253) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(253, 204) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(205, 206) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(206, 205) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(205, 207) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(207, 205) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(205, 220) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(220, 205) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(208, 210) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(210, 208) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(209, 210) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(210, 209) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(209, 211) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(211, 209) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(209, 224) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(224, 209) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(210, 223) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(223, 210) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(211, 214) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(214, 211) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(212, 214) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(214, 212) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(213, 214) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(214, 213) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(213, 215) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(215, 213) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(213, 228) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(228, 213) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(215, 218) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(218, 215) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(216, 218) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(218, 216) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(217, 218) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(218, 217) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(217, 219) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(219, 217) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(217, 232) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(232, 217) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(219, 222) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(222, 219) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(220, 222) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(222, 220) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(221, 222) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(222, 221) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(221, 223) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(223, 221) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(221, 236) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(236, 221) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(224, 226) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(226, 224) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(225, 226) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(226, 225) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(225, 227) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(227, 225) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(225, 240) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(240, 225) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(226, 239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(239, 226) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(227, 230) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(230, 227) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(228, 230) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(230, 228) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(229, 230) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(230, 229) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(229, 231) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(231, 229) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(229, 244) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(244, 229) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(231, 234) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(234, 231) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(232, 234) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(234, 232) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(233, 234) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(234, 233) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(233, 235) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(235, 233) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(233, 248) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(248, 233) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(235, 238) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(238, 235) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(236, 238) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(238, 236) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(237, 238) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(238, 237) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(237, 239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(239, 237) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(237, 252) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(252, 237) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(240, 242) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(242, 240) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(241, 242) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(242, 241) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(241, 243) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(243, 241) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(242, 255) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(255, 242) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(243, 246) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(246, 243) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(244, 246) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(246, 244) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(245, 246) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(246, 245) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(245, 247) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(247, 245) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(247, 250) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(250, 247) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(248, 250) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(250, 248) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(249, 250) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(250, 249) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(249, 251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(251, 249) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(251, 254) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(254, 251) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(252, 254) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(254, 252) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(253, 254) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(254, 253) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(253, 255) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(255, 253) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   return A;
}

std::vector<int> non_zeros()
{
    std::vector<int> nz;
    int coo;
    coo = 256*0 + 2;
    nz.push_back(coo);
    coo = 256*0 + 49;
    nz.push_back(coo);
    coo = 256*0 + 195;
    nz.push_back(coo);
    coo = 256*1 + 2;
    nz.push_back(coo);
    coo = 256*1 + 3;
    nz.push_back(coo);
    coo = 256*1 + 16;
    nz.push_back(coo);
    coo = 256*2 + 15;
    nz.push_back(coo);
    coo = 256*3 + 6;
    nz.push_back(coo);
    coo = 256*3 + 64;
    nz.push_back(coo);
    coo = 256*4 + 6;
    nz.push_back(coo);
    coo = 256*4 + 53;
    nz.push_back(coo);
    coo = 256*4 + 199;
    nz.push_back(coo);
    coo = 256*5 + 6;
    nz.push_back(coo);
    coo = 256*5 + 7;
    nz.push_back(coo);
    coo = 256*5 + 20;
    nz.push_back(coo);
    coo = 256*7 + 10;
    nz.push_back(coo);
    coo = 256*7 + 68;
    nz.push_back(coo);
    coo = 256*8 + 10;
    nz.push_back(coo);
    coo = 256*8 + 57;
    nz.push_back(coo);
    coo = 256*8 + 203;
    nz.push_back(coo);
    coo = 256*9 + 10;
    nz.push_back(coo);
    coo = 256*9 + 11;
    nz.push_back(coo);
    coo = 256*9 + 24;
    nz.push_back(coo);
    coo = 256*11 + 14;
    nz.push_back(coo);
    coo = 256*11 + 72;
    nz.push_back(coo);
    coo = 256*12 + 14;
    nz.push_back(coo);
    coo = 256*12 + 61;
    nz.push_back(coo);
    coo = 256*12 + 207;
    nz.push_back(coo);
    coo = 256*13 + 14;
    nz.push_back(coo);
    coo = 256*13 + 15;
    nz.push_back(coo);
    coo = 256*13 + 28;
    nz.push_back(coo);
    coo = 256*15 + 76;
    nz.push_back(coo);
    coo = 256*16 + 18;
    nz.push_back(coo);
    coo = 256*16 + 211;
    nz.push_back(coo);
    coo = 256*17 + 18;
    nz.push_back(coo);
    coo = 256*17 + 19;
    nz.push_back(coo);
    coo = 256*17 + 32;
    nz.push_back(coo);
    coo = 256*18 + 31;
    nz.push_back(coo);
    coo = 256*19 + 22;
    nz.push_back(coo);
    coo = 256*19 + 80;
    nz.push_back(coo);
    coo = 256*20 + 22;
    nz.push_back(coo);
    coo = 256*20 + 215;
    nz.push_back(coo);
    coo = 256*21 + 22;
    nz.push_back(coo);
    coo = 256*21 + 23;
    nz.push_back(coo);
    coo = 256*21 + 36;
    nz.push_back(coo);
    coo = 256*23 + 26;
    nz.push_back(coo);
    coo = 256*23 + 84;
    nz.push_back(coo);
    coo = 256*24 + 26;
    nz.push_back(coo);
    coo = 256*24 + 219;
    nz.push_back(coo);
    coo = 256*25 + 26;
    nz.push_back(coo);
    coo = 256*25 + 27;
    nz.push_back(coo);
    coo = 256*25 + 40;
    nz.push_back(coo);
    coo = 256*27 + 30;
    nz.push_back(coo);
    coo = 256*27 + 88;
    nz.push_back(coo);
    coo = 256*28 + 30;
    nz.push_back(coo);
    coo = 256*28 + 223;
    nz.push_back(coo);
    coo = 256*29 + 30;
    nz.push_back(coo);
    coo = 256*29 + 31;
    nz.push_back(coo);
    coo = 256*29 + 44;
    nz.push_back(coo);
    coo = 256*31 + 92;
    nz.push_back(coo);
    coo = 256*32 + 34;
    nz.push_back(coo);
    coo = 256*32 + 227;
    nz.push_back(coo);
    coo = 256*33 + 34;
    nz.push_back(coo);
    coo = 256*33 + 35;
    nz.push_back(coo);
    coo = 256*33 + 48;
    nz.push_back(coo);
    coo = 256*34 + 47;
    nz.push_back(coo);
    coo = 256*35 + 38;
    nz.push_back(coo);
    coo = 256*35 + 96;
    nz.push_back(coo);
    coo = 256*36 + 38;
    nz.push_back(coo);
    coo = 256*36 + 231;
    nz.push_back(coo);
    coo = 256*37 + 38;
    nz.push_back(coo);
    coo = 256*37 + 39;
    nz.push_back(coo);
    coo = 256*37 + 52;
    nz.push_back(coo);
    coo = 256*39 + 42;
    nz.push_back(coo);
    coo = 256*39 + 100;
    nz.push_back(coo);
    coo = 256*40 + 42;
    nz.push_back(coo);
    coo = 256*40 + 235;
    nz.push_back(coo);
    coo = 256*41 + 42;
    nz.push_back(coo);
    coo = 256*41 + 43;
    nz.push_back(coo);
    coo = 256*41 + 56;
    nz.push_back(coo);
    coo = 256*43 + 46;
    nz.push_back(coo);
    coo = 256*43 + 104;
    nz.push_back(coo);
    coo = 256*44 + 46;
    nz.push_back(coo);
    coo = 256*44 + 239;
    nz.push_back(coo);
    coo = 256*45 + 46;
    nz.push_back(coo);
    coo = 256*45 + 47;
    nz.push_back(coo);
    coo = 256*45 + 60;
    nz.push_back(coo);
    coo = 256*47 + 108;
    nz.push_back(coo);
    coo = 256*48 + 50;
    nz.push_back(coo);
    coo = 256*48 + 243;
    nz.push_back(coo);
    coo = 256*49 + 50;
    nz.push_back(coo);
    coo = 256*49 + 51;
    nz.push_back(coo);
    coo = 256*50 + 63;
    nz.push_back(coo);
    coo = 256*51 + 54;
    nz.push_back(coo);
    coo = 256*51 + 112;
    nz.push_back(coo);
    coo = 256*52 + 54;
    nz.push_back(coo);
    coo = 256*52 + 247;
    nz.push_back(coo);
    coo = 256*53 + 54;
    nz.push_back(coo);
    coo = 256*53 + 55;
    nz.push_back(coo);
    coo = 256*55 + 58;
    nz.push_back(coo);
    coo = 256*55 + 116;
    nz.push_back(coo);
    coo = 256*56 + 58;
    nz.push_back(coo);
    coo = 256*56 + 251;
    nz.push_back(coo);
    coo = 256*57 + 58;
    nz.push_back(coo);
    coo = 256*57 + 59;
    nz.push_back(coo);
    coo = 256*59 + 62;
    nz.push_back(coo);
    coo = 256*59 + 120;
    nz.push_back(coo);
    coo = 256*60 + 62;
    nz.push_back(coo);
    coo = 256*60 + 255;
    nz.push_back(coo);
    coo = 256*61 + 62;
    nz.push_back(coo);
    coo = 256*61 + 63;
    nz.push_back(coo);
    coo = 256*63 + 124;
    nz.push_back(coo);
    coo = 256*64 + 66;
    nz.push_back(coo);
    coo = 256*64 + 113;
    nz.push_back(coo);
    coo = 256*65 + 66;
    nz.push_back(coo);
    coo = 256*65 + 67;
    nz.push_back(coo);
    coo = 256*65 + 80;
    nz.push_back(coo);
    coo = 256*66 + 79;
    nz.push_back(coo);
    coo = 256*67 + 70;
    nz.push_back(coo);
    coo = 256*67 + 128;
    nz.push_back(coo);
    coo = 256*68 + 70;
    nz.push_back(coo);
    coo = 256*68 + 117;
    nz.push_back(coo);
    coo = 256*69 + 70;
    nz.push_back(coo);
    coo = 256*69 + 71;
    nz.push_back(coo);
    coo = 256*69 + 84;
    nz.push_back(coo);
    coo = 256*71 + 74;
    nz.push_back(coo);
    coo = 256*71 + 132;
    nz.push_back(coo);
    coo = 256*72 + 74;
    nz.push_back(coo);
    coo = 256*72 + 121;
    nz.push_back(coo);
    coo = 256*73 + 74;
    nz.push_back(coo);
    coo = 256*73 + 75;
    nz.push_back(coo);
    coo = 256*73 + 88;
    nz.push_back(coo);
    coo = 256*75 + 78;
    nz.push_back(coo);
    coo = 256*75 + 136;
    nz.push_back(coo);
    coo = 256*76 + 78;
    nz.push_back(coo);
    coo = 256*76 + 125;
    nz.push_back(coo);
    coo = 256*77 + 78;
    nz.push_back(coo);
    coo = 256*77 + 79;
    nz.push_back(coo);
    coo = 256*77 + 92;
    nz.push_back(coo);
    coo = 256*79 + 140;
    nz.push_back(coo);
    coo = 256*80 + 82;
    nz.push_back(coo);
    coo = 256*81 + 82;
    nz.push_back(coo);
    coo = 256*81 + 83;
    nz.push_back(coo);
    coo = 256*81 + 96;
    nz.push_back(coo);
    coo = 256*82 + 95;
    nz.push_back(coo);
    coo = 256*83 + 86;
    nz.push_back(coo);
    coo = 256*83 + 144;
    nz.push_back(coo);
    coo = 256*84 + 86;
    nz.push_back(coo);
    coo = 256*85 + 86;
    nz.push_back(coo);
    coo = 256*85 + 87;
    nz.push_back(coo);
    coo = 256*85 + 100;
    nz.push_back(coo);
    coo = 256*87 + 90;
    nz.push_back(coo);
    coo = 256*87 + 148;
    nz.push_back(coo);
    coo = 256*88 + 90;
    nz.push_back(coo);
    coo = 256*89 + 90;
    nz.push_back(coo);
    coo = 256*89 + 91;
    nz.push_back(coo);
    coo = 256*89 + 104;
    nz.push_back(coo);
    coo = 256*91 + 94;
    nz.push_back(coo);
    coo = 256*91 + 152;
    nz.push_back(coo);
    coo = 256*92 + 94;
    nz.push_back(coo);
    coo = 256*93 + 94;
    nz.push_back(coo);
    coo = 256*93 + 95;
    nz.push_back(coo);
    coo = 256*93 + 108;
    nz.push_back(coo);
    coo = 256*95 + 156;
    nz.push_back(coo);
    coo = 256*96 + 98;
    nz.push_back(coo);
    coo = 256*97 + 98;
    nz.push_back(coo);
    coo = 256*97 + 99;
    nz.push_back(coo);
    coo = 256*97 + 112;
    nz.push_back(coo);
    coo = 256*98 + 111;
    nz.push_back(coo);
    coo = 256*99 + 102;
    nz.push_back(coo);
    coo = 256*99 + 160;
    nz.push_back(coo);
    coo = 256*100 + 102;
    nz.push_back(coo);
    coo = 256*101 + 102;
    nz.push_back(coo);
    coo = 256*101 + 103;
    nz.push_back(coo);
    coo = 256*101 + 116;
    nz.push_back(coo);
    coo = 256*103 + 106;
    nz.push_back(coo);
    coo = 256*103 + 164;
    nz.push_back(coo);
    coo = 256*104 + 106;
    nz.push_back(coo);
    coo = 256*105 + 106;
    nz.push_back(coo);
    coo = 256*105 + 107;
    nz.push_back(coo);
    coo = 256*105 + 120;
    nz.push_back(coo);
    coo = 256*107 + 110;
    nz.push_back(coo);
    coo = 256*107 + 168;
    nz.push_back(coo);
    coo = 256*108 + 110;
    nz.push_back(coo);
    coo = 256*109 + 110;
    nz.push_back(coo);
    coo = 256*109 + 111;
    nz.push_back(coo);
    coo = 256*109 + 124;
    nz.push_back(coo);
    coo = 256*111 + 172;
    nz.push_back(coo);
    coo = 256*112 + 114;
    nz.push_back(coo);
    coo = 256*113 + 114;
    nz.push_back(coo);
    coo = 256*113 + 115;
    nz.push_back(coo);
    coo = 256*114 + 127;
    nz.push_back(coo);
    coo = 256*115 + 118;
    nz.push_back(coo);
    coo = 256*115 + 176;
    nz.push_back(coo);
    coo = 256*116 + 118;
    nz.push_back(coo);
    coo = 256*117 + 118;
    nz.push_back(coo);
    coo = 256*117 + 119;
    nz.push_back(coo);
    coo = 256*119 + 122;
    nz.push_back(coo);
    coo = 256*119 + 180;
    nz.push_back(coo);
    coo = 256*120 + 122;
    nz.push_back(coo);
    coo = 256*121 + 122;
    nz.push_back(coo);
    coo = 256*121 + 123;
    nz.push_back(coo);
    coo = 256*123 + 126;
    nz.push_back(coo);
    coo = 256*123 + 184;
    nz.push_back(coo);
    coo = 256*124 + 126;
    nz.push_back(coo);
    coo = 256*125 + 126;
    nz.push_back(coo);
    coo = 256*125 + 127;
    nz.push_back(coo);
    coo = 256*127 + 188;
    nz.push_back(coo);
    coo = 256*128 + 130;
    nz.push_back(coo);
    coo = 256*128 + 177;
    nz.push_back(coo);
    coo = 256*129 + 130;
    nz.push_back(coo);
    coo = 256*129 + 131;
    nz.push_back(coo);
    coo = 256*129 + 144;
    nz.push_back(coo);
    coo = 256*130 + 143;
    nz.push_back(coo);
    coo = 256*131 + 134;
    nz.push_back(coo);
    coo = 256*131 + 192;
    nz.push_back(coo);
    coo = 256*132 + 134;
    nz.push_back(coo);
    coo = 256*132 + 181;
    nz.push_back(coo);
    coo = 256*133 + 134;
    nz.push_back(coo);
    coo = 256*133 + 135;
    nz.push_back(coo);
    coo = 256*133 + 148;
    nz.push_back(coo);
    coo = 256*135 + 138;
    nz.push_back(coo);
    coo = 256*135 + 196;
    nz.push_back(coo);
    coo = 256*136 + 138;
    nz.push_back(coo);
    coo = 256*136 + 185;
    nz.push_back(coo);
    coo = 256*137 + 138;
    nz.push_back(coo);
    coo = 256*137 + 139;
    nz.push_back(coo);
    coo = 256*137 + 152;
    nz.push_back(coo);
    coo = 256*139 + 142;
    nz.push_back(coo);
    coo = 256*139 + 200;
    nz.push_back(coo);
    coo = 256*140 + 142;
    nz.push_back(coo);
    coo = 256*140 + 189;
    nz.push_back(coo);
    coo = 256*141 + 142;
    nz.push_back(coo);
    coo = 256*141 + 143;
    nz.push_back(coo);
    coo = 256*141 + 156;
    nz.push_back(coo);
    coo = 256*143 + 204;
    nz.push_back(coo);
    coo = 256*144 + 146;
    nz.push_back(coo);
    coo = 256*145 + 146;
    nz.push_back(coo);
    coo = 256*145 + 147;
    nz.push_back(coo);
    coo = 256*145 + 160;
    nz.push_back(coo);
    coo = 256*146 + 159;
    nz.push_back(coo);
    coo = 256*147 + 150;
    nz.push_back(coo);
    coo = 256*147 + 208;
    nz.push_back(coo);
    coo = 256*148 + 150;
    nz.push_back(coo);
    coo = 256*149 + 150;
    nz.push_back(coo);
    coo = 256*149 + 151;
    nz.push_back(coo);
    coo = 256*149 + 164;
    nz.push_back(coo);
    coo = 256*151 + 154;
    nz.push_back(coo);
    coo = 256*151 + 212;
    nz.push_back(coo);
    coo = 256*152 + 154;
    nz.push_back(coo);
    coo = 256*153 + 154;
    nz.push_back(coo);
    coo = 256*153 + 155;
    nz.push_back(coo);
    coo = 256*153 + 168;
    nz.push_back(coo);
    coo = 256*155 + 158;
    nz.push_back(coo);
    coo = 256*155 + 216;
    nz.push_back(coo);
    coo = 256*156 + 158;
    nz.push_back(coo);
    coo = 256*157 + 158;
    nz.push_back(coo);
    coo = 256*157 + 159;
    nz.push_back(coo);
    coo = 256*157 + 172;
    nz.push_back(coo);
    coo = 256*159 + 220;
    nz.push_back(coo);
    coo = 256*160 + 162;
    nz.push_back(coo);
    coo = 256*161 + 162;
    nz.push_back(coo);
    coo = 256*161 + 163;
    nz.push_back(coo);
    coo = 256*161 + 176;
    nz.push_back(coo);
    coo = 256*162 + 175;
    nz.push_back(coo);
    coo = 256*163 + 166;
    nz.push_back(coo);
    coo = 256*163 + 224;
    nz.push_back(coo);
    coo = 256*164 + 166;
    nz.push_back(coo);
    coo = 256*165 + 166;
    nz.push_back(coo);
    coo = 256*165 + 167;
    nz.push_back(coo);
    coo = 256*165 + 180;
    nz.push_back(coo);
    coo = 256*167 + 170;
    nz.push_back(coo);
    coo = 256*167 + 228;
    nz.push_back(coo);
    coo = 256*168 + 170;
    nz.push_back(coo);
    coo = 256*169 + 170;
    nz.push_back(coo);
    coo = 256*169 + 171;
    nz.push_back(coo);
    coo = 256*169 + 184;
    nz.push_back(coo);
    coo = 256*171 + 174;
    nz.push_back(coo);
    coo = 256*171 + 232;
    nz.push_back(coo);
    coo = 256*172 + 174;
    nz.push_back(coo);
    coo = 256*173 + 174;
    nz.push_back(coo);
    coo = 256*173 + 175;
    nz.push_back(coo);
    coo = 256*173 + 188;
    nz.push_back(coo);
    coo = 256*175 + 236;
    nz.push_back(coo);
    coo = 256*176 + 178;
    nz.push_back(coo);
    coo = 256*177 + 178;
    nz.push_back(coo);
    coo = 256*177 + 179;
    nz.push_back(coo);
    coo = 256*178 + 191;
    nz.push_back(coo);
    coo = 256*179 + 182;
    nz.push_back(coo);
    coo = 256*179 + 240;
    nz.push_back(coo);
    coo = 256*180 + 182;
    nz.push_back(coo);
    coo = 256*181 + 182;
    nz.push_back(coo);
    coo = 256*181 + 183;
    nz.push_back(coo);
    coo = 256*183 + 186;
    nz.push_back(coo);
    coo = 256*183 + 244;
    nz.push_back(coo);
    coo = 256*184 + 186;
    nz.push_back(coo);
    coo = 256*185 + 186;
    nz.push_back(coo);
    coo = 256*185 + 187;
    nz.push_back(coo);
    coo = 256*187 + 190;
    nz.push_back(coo);
    coo = 256*187 + 248;
    nz.push_back(coo);
    coo = 256*188 + 190;
    nz.push_back(coo);
    coo = 256*189 + 190;
    nz.push_back(coo);
    coo = 256*189 + 191;
    nz.push_back(coo);
    coo = 256*191 + 252;
    nz.push_back(coo);
    coo = 256*192 + 194;
    nz.push_back(coo);
    coo = 256*192 + 241;
    nz.push_back(coo);
    coo = 256*193 + 194;
    nz.push_back(coo);
    coo = 256*193 + 195;
    nz.push_back(coo);
    coo = 256*193 + 208;
    nz.push_back(coo);
    coo = 256*194 + 207;
    nz.push_back(coo);
    coo = 256*195 + 198;
    nz.push_back(coo);
    coo = 256*196 + 198;
    nz.push_back(coo);
    coo = 256*196 + 245;
    nz.push_back(coo);
    coo = 256*197 + 198;
    nz.push_back(coo);
    coo = 256*197 + 199;
    nz.push_back(coo);
    coo = 256*197 + 212;
    nz.push_back(coo);
    coo = 256*199 + 202;
    nz.push_back(coo);
    coo = 256*200 + 202;
    nz.push_back(coo);
    coo = 256*200 + 249;
    nz.push_back(coo);
    coo = 256*201 + 202;
    nz.push_back(coo);
    coo = 256*201 + 203;
    nz.push_back(coo);
    coo = 256*201 + 216;
    nz.push_back(coo);
    coo = 256*203 + 206;
    nz.push_back(coo);
    coo = 256*204 + 206;
    nz.push_back(coo);
    coo = 256*204 + 253;
    nz.push_back(coo);
    coo = 256*205 + 206;
    nz.push_back(coo);
    coo = 256*205 + 207;
    nz.push_back(coo);
    coo = 256*205 + 220;
    nz.push_back(coo);
    coo = 256*208 + 210;
    nz.push_back(coo);
    coo = 256*209 + 210;
    nz.push_back(coo);
    coo = 256*209 + 211;
    nz.push_back(coo);
    coo = 256*209 + 224;
    nz.push_back(coo);
    coo = 256*210 + 223;
    nz.push_back(coo);
    coo = 256*211 + 214;
    nz.push_back(coo);
    coo = 256*212 + 214;
    nz.push_back(coo);
    coo = 256*213 + 214;
    nz.push_back(coo);
    coo = 256*213 + 215;
    nz.push_back(coo);
    coo = 256*213 + 228;
    nz.push_back(coo);
    coo = 256*215 + 218;
    nz.push_back(coo);
    coo = 256*216 + 218;
    nz.push_back(coo);
    coo = 256*217 + 218;
    nz.push_back(coo);
    coo = 256*217 + 219;
    nz.push_back(coo);
    coo = 256*217 + 232;
    nz.push_back(coo);
    coo = 256*219 + 222;
    nz.push_back(coo);
    coo = 256*220 + 222;
    nz.push_back(coo);
    coo = 256*221 + 222;
    nz.push_back(coo);
    coo = 256*221 + 223;
    nz.push_back(coo);
    coo = 256*221 + 236;
    nz.push_back(coo);
    coo = 256*224 + 226;
    nz.push_back(coo);
    coo = 256*225 + 226;
    nz.push_back(coo);
    coo = 256*225 + 227;
    nz.push_back(coo);
    coo = 256*225 + 240;
    nz.push_back(coo);
    coo = 256*226 + 239;
    nz.push_back(coo);
    coo = 256*227 + 230;
    nz.push_back(coo);
    coo = 256*228 + 230;
    nz.push_back(coo);
    coo = 256*229 + 230;
    nz.push_back(coo);
    coo = 256*229 + 231;
    nz.push_back(coo);
    coo = 256*229 + 244;
    nz.push_back(coo);
    coo = 256*231 + 234;
    nz.push_back(coo);
    coo = 256*232 + 234;
    nz.push_back(coo);
    coo = 256*233 + 234;
    nz.push_back(coo);
    coo = 256*233 + 235;
    nz.push_back(coo);
    coo = 256*233 + 248;
    nz.push_back(coo);
    coo = 256*235 + 238;
    nz.push_back(coo);
    coo = 256*236 + 238;
    nz.push_back(coo);
    coo = 256*237 + 238;
    nz.push_back(coo);
    coo = 256*237 + 239;
    nz.push_back(coo);
    coo = 256*237 + 252;
    nz.push_back(coo);
    coo = 256*240 + 242;
    nz.push_back(coo);
    coo = 256*241 + 242;
    nz.push_back(coo);
    coo = 256*241 + 243;
    nz.push_back(coo);
    coo = 256*242 + 255;
    nz.push_back(coo);
    coo = 256*243 + 246;
    nz.push_back(coo);
    coo = 256*244 + 246;
    nz.push_back(coo);
    coo = 256*245 + 246;
    nz.push_back(coo);
    coo = 256*245 + 247;
    nz.push_back(coo);
    coo = 256*247 + 250;
    nz.push_back(coo);
    coo = 256*248 + 250;
    nz.push_back(coo);
    coo = 256*249 + 250;
    nz.push_back(coo);
    coo = 256*249 + 251;
    nz.push_back(coo);
    coo = 256*251 + 254;
    nz.push_back(coo);
    coo = 256*252 + 254;
    nz.push_back(coo);
    coo = 256*253 + 254;
    nz.push_back(coo);
    coo = 256*253 + 255;
    nz.push_back(coo);
    return nz;
}

Mat<int> create_plaquettes()
{
   Mat<int> P(384,10);
   P(0, 0) = 256*0+2;
   P(0, 1) = 256*2+1;
   P(0, 2) = 256*1+3;
   P(0, 3) = 256*3+64;
   P(0, 4) = 256*64+113;
   P(0, 5) = 256*113+114;
   P(0, 6) = 256*114+112;
   P(0, 7) = 256*112+51;
   P(0, 8) = 256*51+49;
   P(0, 9) = 256*49+0;
   P(1, 0) = 256*0+2;
   P(1, 1) = 256*2+1;
   P(1, 2) = 256*1+3;
   P(1, 3) = 256*3+6;
   P(1, 4) = 256*6+4;
   P(1, 5) = 256*4+199;
   P(1, 6) = 256*199+197;
   P(1, 7) = 256*197+198;
   P(1, 8) = 256*198+195;
   P(1, 9) = 256*195+0;
   P(2, 0) = 256*0+2;
   P(2, 1) = 256*2+1;
   P(2, 2) = 256*1+3;
   P(2, 3) = 256*3+6;
   P(2, 4) = 256*6+4;
   P(2, 5) = 256*4+53;
   P(2, 6) = 256*53+54;
   P(2, 7) = 256*54+51;
   P(2, 8) = 256*51+49;
   P(2, 9) = 256*49+0;
   P(3, 0) = 256*0+2;
   P(3, 1) = 256*2+1;
   P(3, 2) = 256*1+16;
   P(3, 3) = 256*16+211;
   P(3, 4) = 256*211+209;
   P(3, 5) = 256*209+210;
   P(3, 6) = 256*210+208;
   P(3, 7) = 256*208+193;
   P(3, 8) = 256*193+195;
   P(3, 9) = 256*195+0;
   P(4, 0) = 256*0+2;
   P(4, 1) = 256*2+1;
   P(4, 2) = 256*1+16;
   P(4, 3) = 256*16+211;
   P(4, 4) = 256*211+214;
   P(4, 5) = 256*214+212;
   P(4, 6) = 256*212+197;
   P(4, 7) = 256*197+198;
   P(4, 8) = 256*198+195;
   P(4, 9) = 256*195+0;
   P(5, 0) = 256*0+2;
   P(5, 1) = 256*2+15;
   P(5, 2) = 256*15+13;
   P(5, 3) = 256*13+14;
   P(5, 4) = 256*14+12;
   P(5, 5) = 256*12+207;
   P(5, 6) = 256*207+194;
   P(5, 7) = 256*194+193;
   P(5, 8) = 256*193+195;
   P(5, 9) = 256*195+0;
   P(6, 0) = 256*0+2;
   P(6, 1) = 256*2+15;
   P(6, 2) = 256*15+13;
   P(6, 3) = 256*13+14;
   P(6, 4) = 256*14+12;
   P(6, 5) = 256*12+61;
   P(6, 6) = 256*61+63;
   P(6, 7) = 256*63+50;
   P(6, 8) = 256*50+49;
   P(6, 9) = 256*49+0;
   P(7, 0) = 256*0+2;
   P(7, 1) = 256*2+15;
   P(7, 2) = 256*15+13;
   P(7, 3) = 256*13+28;
   P(7, 4) = 256*28+223;
   P(7, 5) = 256*223+210;
   P(7, 6) = 256*210+208;
   P(7, 7) = 256*208+193;
   P(7, 8) = 256*193+195;
   P(7, 9) = 256*195+0;
   P(8, 0) = 256*0+2;
   P(8, 1) = 256*2+15;
   P(8, 2) = 256*15+76;
   P(8, 3) = 256*76+125;
   P(8, 4) = 256*125+127;
   P(8, 5) = 256*127+114;
   P(8, 6) = 256*114+112;
   P(8, 7) = 256*112+51;
   P(8, 8) = 256*51+49;
   P(8, 9) = 256*49+0;
   P(9, 0) = 256*0+2;
   P(9, 1) = 256*2+15;
   P(9, 2) = 256*15+76;
   P(9, 3) = 256*76+125;
   P(9, 4) = 256*125+126;
   P(9, 5) = 256*126+124;
   P(9, 6) = 256*124+63;
   P(9, 7) = 256*63+50;
   P(9, 8) = 256*50+49;
   P(9, 9) = 256*49+0;
   P(10, 0) = 256*0+195;
   P(10, 1) = 256*195+193;
   P(10, 2) = 256*193+194;
   P(10, 3) = 256*194+192;
   P(10, 4) = 256*192+241;
   P(10, 5) = 256*241+243;
   P(10, 6) = 256*243+48;
   P(10, 7) = 256*48+50;
   P(10, 8) = 256*50+49;
   P(10, 9) = 256*49+0;
   P(11, 0) = 256*0+195;
   P(11, 1) = 256*195+193;
   P(11, 2) = 256*193+194;
   P(11, 3) = 256*194+207;
   P(11, 4) = 256*207+12;
   P(11, 5) = 256*12+61;
   P(11, 6) = 256*61+63;
   P(11, 7) = 256*63+50;
   P(11, 8) = 256*50+49;
   P(11, 9) = 256*49+0;
   P(12, 0) = 256*0+195;
   P(12, 1) = 256*195+198;
   P(12, 2) = 256*198+197;
   P(12, 3) = 256*197+199;
   P(12, 4) = 256*199+4;
   P(12, 5) = 256*4+53;
   P(12, 6) = 256*53+54;
   P(12, 7) = 256*54+51;
   P(12, 8) = 256*51+49;
   P(12, 9) = 256*49+0;
   P(13, 0) = 256*0+195;
   P(13, 1) = 256*195+198;
   P(13, 2) = 256*198+196;
   P(13, 3) = 256*196+245;
   P(13, 4) = 256*245+247;
   P(13, 5) = 256*247+52;
   P(13, 6) = 256*52+54;
   P(13, 7) = 256*54+51;
   P(13, 8) = 256*51+49;
   P(13, 9) = 256*49+0;
   P(14, 0) = 256*0+195;
   P(14, 1) = 256*195+198;
   P(14, 2) = 256*198+196;
   P(14, 3) = 256*196+245;
   P(14, 4) = 256*245+246;
   P(14, 5) = 256*246+243;
   P(14, 6) = 256*243+48;
   P(14, 7) = 256*48+50;
   P(14, 8) = 256*50+49;
   P(14, 9) = 256*49+0;
   P(15, 0) = 256*1+3;
   P(15, 1) = 256*3+64;
   P(15, 2) = 256*64+66;
   P(15, 3) = 256*66+65;
   P(15, 4) = 256*65+80;
   P(15, 5) = 256*80+19;
   P(15, 6) = 256*19+17;
   P(15, 7) = 256*17+18;
   P(15, 8) = 256*18+16;
   P(15, 9) = 256*16+1;
   P(16, 0) = 256*1+3;
   P(16, 1) = 256*3+64;
   P(16, 2) = 256*64+66;
   P(16, 3) = 256*66+79;
   P(16, 4) = 256*79+77;
   P(16, 5) = 256*77+78;
   P(16, 6) = 256*78+76;
   P(16, 7) = 256*76+15;
   P(16, 8) = 256*15+2;
   P(16, 9) = 256*2+1;
   P(17, 0) = 256*1+3;
   P(17, 1) = 256*3+64;
   P(17, 2) = 256*64+66;
   P(17, 3) = 256*66+79;
   P(17, 4) = 256*79+77;
   P(17, 5) = 256*77+92;
   P(17, 6) = 256*92+31;
   P(17, 7) = 256*31+18;
   P(17, 8) = 256*18+16;
   P(17, 9) = 256*16+1;
   P(18, 0) = 256*1+3;
   P(18, 1) = 256*3+64;
   P(18, 2) = 256*64+113;
   P(18, 3) = 256*113+114;
   P(18, 4) = 256*114+127;
   P(18, 5) = 256*127+125;
   P(18, 6) = 256*125+76;
   P(18, 7) = 256*76+15;
   P(18, 8) = 256*15+2;
   P(18, 9) = 256*2+1;
   P(19, 0) = 256*1+3;
   P(19, 1) = 256*3+6;
   P(19, 2) = 256*6+5;
   P(19, 3) = 256*5+20;
   P(19, 4) = 256*20+22;
   P(19, 5) = 256*22+19;
   P(19, 6) = 256*19+17;
   P(19, 7) = 256*17+18;
   P(19, 8) = 256*18+16;
   P(19, 9) = 256*16+1;
   P(20, 0) = 256*1+3;
   P(20, 1) = 256*3+6;
   P(20, 2) = 256*6+5;
   P(20, 3) = 256*5+20;
   P(20, 4) = 256*20+215;
   P(20, 5) = 256*215+213;
   P(20, 6) = 256*213+214;
   P(20, 7) = 256*214+211;
   P(20, 8) = 256*211+16;
   P(20, 9) = 256*16+1;
   P(21, 0) = 256*1+3;
   P(21, 1) = 256*3+6;
   P(21, 2) = 256*6+4;
   P(21, 3) = 256*4+199;
   P(21, 4) = 256*199+197;
   P(21, 5) = 256*197+212;
   P(21, 6) = 256*212+214;
   P(21, 7) = 256*214+211;
   P(21, 8) = 256*211+16;
   P(21, 9) = 256*16+1;
   P(22, 0) = 256*1+2;
   P(22, 1) = 256*2+15;
   P(22, 2) = 256*15+13;
   P(22, 3) = 256*13+28;
   P(22, 4) = 256*28+30;
   P(22, 5) = 256*30+29;
   P(22, 6) = 256*29+31;
   P(22, 7) = 256*31+18;
   P(22, 8) = 256*18+16;
   P(22, 9) = 256*16+1;
   P(23, 0) = 256*1+2;
   P(23, 1) = 256*2+15;
   P(23, 2) = 256*15+13;
   P(23, 3) = 256*13+28;
   P(23, 4) = 256*28+223;
   P(23, 5) = 256*223+210;
   P(23, 6) = 256*210+209;
   P(23, 7) = 256*209+211;
   P(23, 8) = 256*211+16;
   P(23, 9) = 256*16+1;
   P(24, 0) = 256*1+2;
   P(24, 1) = 256*2+15;
   P(24, 2) = 256*15+76;
   P(24, 3) = 256*76+78;
   P(24, 4) = 256*78+77;
   P(24, 5) = 256*77+92;
   P(24, 6) = 256*92+31;
   P(24, 7) = 256*31+18;
   P(24, 8) = 256*18+16;
   P(24, 9) = 256*16+1;
   P(25, 0) = 256*3+64;
   P(25, 1) = 256*64+66;
   P(25, 2) = 256*66+65;
   P(25, 3) = 256*65+67;
   P(25, 4) = 256*67+70;
   P(25, 5) = 256*70+68;
   P(25, 6) = 256*68+7;
   P(25, 7) = 256*7+5;
   P(25, 8) = 256*5+6;
   P(25, 9) = 256*6+3;
   P(26, 0) = 256*3+64;
   P(26, 1) = 256*64+66;
   P(26, 2) = 256*66+65;
   P(26, 3) = 256*65+80;
   P(26, 4) = 256*80+19;
   P(26, 5) = 256*19+22;
   P(26, 6) = 256*22+20;
   P(26, 7) = 256*20+5;
   P(26, 8) = 256*5+6;
   P(26, 9) = 256*6+3;
   P(27, 0) = 256*3+64;
   P(27, 1) = 256*64+113;
   P(27, 2) = 256*113+115;
   P(27, 3) = 256*115+118;
   P(27, 4) = 256*118+117;
   P(27, 5) = 256*117+68;
   P(27, 6) = 256*68+7;
   P(27, 7) = 256*7+5;
   P(27, 8) = 256*5+6;
   P(27, 9) = 256*6+3;
   P(28, 0) = 256*3+64;
   P(28, 1) = 256*64+113;
   P(28, 2) = 256*113+115;
   P(28, 3) = 256*115+118;
   P(28, 4) = 256*118+116;
   P(28, 5) = 256*116+55;
   P(28, 6) = 256*55+53;
   P(28, 7) = 256*53+4;
   P(28, 8) = 256*4+6;
   P(28, 9) = 256*6+3;
   P(29, 0) = 256*3+64;
   P(29, 1) = 256*64+113;
   P(29, 2) = 256*113+114;
   P(29, 3) = 256*114+112;
   P(29, 4) = 256*112+51;
   P(29, 5) = 256*51+54;
   P(29, 6) = 256*54+53;
   P(29, 7) = 256*53+4;
   P(29, 8) = 256*4+6;
   P(29, 9) = 256*6+3;
   P(30, 0) = 256*4+6;
   P(30, 1) = 256*6+5;
   P(30, 2) = 256*5+7;
   P(30, 3) = 256*7+68;
   P(30, 4) = 256*68+117;
   P(30, 5) = 256*117+118;
   P(30, 6) = 256*118+116;
   P(30, 7) = 256*116+55;
   P(30, 8) = 256*55+53;
   P(30, 9) = 256*53+4;
   P(31, 0) = 256*4+6;
   P(31, 1) = 256*6+5;
   P(31, 2) = 256*5+7;
   P(31, 3) = 256*7+10;
   P(31, 4) = 256*10+8;
   P(31, 5) = 256*8+203;
   P(31, 6) = 256*203+201;
   P(31, 7) = 256*201+202;
   P(31, 8) = 256*202+199;
   P(31, 9) = 256*199+4;
   P(32, 0) = 256*4+6;
   P(32, 1) = 256*6+5;
   P(32, 2) = 256*5+7;
   P(32, 3) = 256*7+10;
   P(32, 4) = 256*10+8;
   P(32, 5) = 256*8+57;
   P(32, 6) = 256*57+58;
   P(32, 7) = 256*58+55;
   P(32, 8) = 256*55+53;
   P(32, 9) = 256*53+4;
   P(33, 0) = 256*4+6;
   P(33, 1) = 256*6+5;
   P(33, 2) = 256*5+20;
   P(33, 3) = 256*20+215;
   P(33, 4) = 256*215+213;
   P(33, 5) = 256*213+214;
   P(33, 6) = 256*214+212;
   P(33, 7) = 256*212+197;
   P(33, 8) = 256*197+199;
   P(33, 9) = 256*199+4;
   P(34, 0) = 256*4+6;
   P(34, 1) = 256*6+5;
   P(34, 2) = 256*5+20;
   P(34, 3) = 256*20+215;
   P(34, 4) = 256*215+218;
   P(34, 5) = 256*218+216;
   P(34, 6) = 256*216+201;
   P(34, 7) = 256*201+202;
   P(34, 8) = 256*202+199;
   P(34, 9) = 256*199+4;
   P(35, 0) = 256*4+199;
   P(35, 1) = 256*199+197;
   P(35, 2) = 256*197+198;
   P(35, 3) = 256*198+196;
   P(35, 4) = 256*196+245;
   P(35, 5) = 256*245+247;
   P(35, 6) = 256*247+52;
   P(35, 7) = 256*52+54;
   P(35, 8) = 256*54+53;
   P(35, 9) = 256*53+4;
   P(36, 0) = 256*4+199;
   P(36, 1) = 256*199+202;
   P(36, 2) = 256*202+201;
   P(36, 3) = 256*201+203;
   P(36, 4) = 256*203+8;
   P(36, 5) = 256*8+57;
   P(36, 6) = 256*57+58;
   P(36, 7) = 256*58+55;
   P(36, 8) = 256*55+53;
   P(36, 9) = 256*53+4;
   P(37, 0) = 256*4+199;
   P(37, 1) = 256*199+202;
   P(37, 2) = 256*202+200;
   P(37, 3) = 256*200+249;
   P(37, 4) = 256*249+251;
   P(37, 5) = 256*251+56;
   P(37, 6) = 256*56+58;
   P(37, 7) = 256*58+55;
   P(37, 8) = 256*55+53;
   P(37, 9) = 256*53+4;
   P(38, 0) = 256*4+199;
   P(38, 1) = 256*199+202;
   P(38, 2) = 256*202+200;
   P(38, 3) = 256*200+249;
   P(38, 4) = 256*249+250;
   P(38, 5) = 256*250+247;
   P(38, 6) = 256*247+52;
   P(38, 7) = 256*52+54;
   P(38, 8) = 256*54+53;
   P(38, 9) = 256*53+4;
   P(39, 0) = 256*5+7;
   P(39, 1) = 256*7+68;
   P(39, 2) = 256*68+70;
   P(39, 3) = 256*70+69;
   P(39, 4) = 256*69+84;
   P(39, 5) = 256*84+23;
   P(39, 6) = 256*23+21;
   P(39, 7) = 256*21+22;
   P(39, 8) = 256*22+20;
   P(39, 9) = 256*20+5;
   P(40, 0) = 256*5+7;
   P(40, 1) = 256*7+68;
   P(40, 2) = 256*68+70;
   P(40, 3) = 256*70+67;
   P(40, 4) = 256*67+65;
   P(40, 5) = 256*65+80;
   P(40, 6) = 256*80+19;
   P(40, 7) = 256*19+22;
   P(40, 8) = 256*22+20;
   P(40, 9) = 256*20+5;
   P(41, 0) = 256*5+7;
   P(41, 1) = 256*7+10;
   P(41, 2) = 256*10+9;
   P(41, 3) = 256*9+24;
   P(41, 4) = 256*24+26;
   P(41, 5) = 256*26+23;
   P(41, 6) = 256*23+21;
   P(41, 7) = 256*21+22;
   P(41, 8) = 256*22+20;
   P(41, 9) = 256*20+5;
   P(42, 0) = 256*5+7;
   P(42, 1) = 256*7+10;
   P(42, 2) = 256*10+9;
   P(42, 3) = 256*9+24;
   P(42, 4) = 256*24+219;
   P(42, 5) = 256*219+217;
   P(42, 6) = 256*217+218;
   P(42, 7) = 256*218+215;
   P(42, 8) = 256*215+20;
   P(42, 9) = 256*20+5;
   P(43, 0) = 256*5+7;
   P(43, 1) = 256*7+10;
   P(43, 2) = 256*10+8;
   P(43, 3) = 256*8+203;
   P(43, 4) = 256*203+201;
   P(43, 5) = 256*201+216;
   P(43, 6) = 256*216+218;
   P(43, 7) = 256*218+215;
   P(43, 8) = 256*215+20;
   P(43, 9) = 256*20+5;
   P(44, 0) = 256*7+68;
   P(44, 1) = 256*68+70;
   P(44, 2) = 256*70+69;
   P(44, 3) = 256*69+71;
   P(44, 4) = 256*71+74;
   P(44, 5) = 256*74+72;
   P(44, 6) = 256*72+11;
   P(44, 7) = 256*11+9;
   P(44, 8) = 256*9+10;
   P(44, 9) = 256*10+7;
   P(45, 0) = 256*7+68;
   P(45, 1) = 256*68+70;
   P(45, 2) = 256*70+69;
   P(45, 3) = 256*69+84;
   P(45, 4) = 256*84+23;
   P(45, 5) = 256*23+26;
   P(45, 6) = 256*26+24;
   P(45, 7) = 256*24+9;
   P(45, 8) = 256*9+10;
   P(45, 9) = 256*10+7;
   P(46, 0) = 256*7+68;
   P(46, 1) = 256*68+117;
   P(46, 2) = 256*117+119;
   P(46, 3) = 256*119+122;
   P(46, 4) = 256*122+121;
   P(46, 5) = 256*121+72;
   P(46, 6) = 256*72+11;
   P(46, 7) = 256*11+9;
   P(46, 8) = 256*9+10;
   P(46, 9) = 256*10+7;
   P(47, 0) = 256*7+68;
   P(47, 1) = 256*68+117;
   P(47, 2) = 256*117+119;
   P(47, 3) = 256*119+122;
   P(47, 4) = 256*122+120;
   P(47, 5) = 256*120+59;
   P(47, 6) = 256*59+57;
   P(47, 7) = 256*57+8;
   P(47, 8) = 256*8+10;
   P(47, 9) = 256*10+7;
   P(48, 0) = 256*7+68;
   P(48, 1) = 256*68+117;
   P(48, 2) = 256*117+118;
   P(48, 3) = 256*118+116;
   P(48, 4) = 256*116+55;
   P(48, 5) = 256*55+58;
   P(48, 6) = 256*58+57;
   P(48, 7) = 256*57+8;
   P(48, 8) = 256*8+10;
   P(48, 9) = 256*10+7;
   P(49, 0) = 256*8+10;
   P(49, 1) = 256*10+9;
   P(49, 2) = 256*9+11;
   P(49, 3) = 256*11+72;
   P(49, 4) = 256*72+121;
   P(49, 5) = 256*121+122;
   P(49, 6) = 256*122+120;
   P(49, 7) = 256*120+59;
   P(49, 8) = 256*59+57;
   P(49, 9) = 256*57+8;
   P(50, 0) = 256*8+10;
   P(50, 1) = 256*10+9;
   P(50, 2) = 256*9+11;
   P(50, 3) = 256*11+14;
   P(50, 4) = 256*14+12;
   P(50, 5) = 256*12+207;
   P(50, 6) = 256*207+205;
   P(50, 7) = 256*205+206;
   P(50, 8) = 256*206+203;
   P(50, 9) = 256*203+8;
   P(51, 0) = 256*8+10;
   P(51, 1) = 256*10+9;
   P(51, 2) = 256*9+11;
   P(51, 3) = 256*11+14;
   P(51, 4) = 256*14+12;
   P(51, 5) = 256*12+61;
   P(51, 6) = 256*61+62;
   P(51, 7) = 256*62+59;
   P(51, 8) = 256*59+57;
   P(51, 9) = 256*57+8;
   P(52, 0) = 256*8+10;
   P(52, 1) = 256*10+9;
   P(52, 2) = 256*9+24;
   P(52, 3) = 256*24+219;
   P(52, 4) = 256*219+217;
   P(52, 5) = 256*217+218;
   P(52, 6) = 256*218+216;
   P(52, 7) = 256*216+201;
   P(52, 8) = 256*201+203;
   P(52, 9) = 256*203+8;
   P(53, 0) = 256*8+10;
   P(53, 1) = 256*10+9;
   P(53, 2) = 256*9+24;
   P(53, 3) = 256*24+219;
   P(53, 4) = 256*219+222;
   P(53, 5) = 256*222+220;
   P(53, 6) = 256*220+205;
   P(53, 7) = 256*205+206;
   P(53, 8) = 256*206+203;
   P(53, 9) = 256*203+8;
   P(54, 0) = 256*8+203;
   P(54, 1) = 256*203+201;
   P(54, 2) = 256*201+202;
   P(54, 3) = 256*202+200;
   P(54, 4) = 256*200+249;
   P(54, 5) = 256*249+251;
   P(54, 6) = 256*251+56;
   P(54, 7) = 256*56+58;
   P(54, 8) = 256*58+57;
   P(54, 9) = 256*57+8;
   P(55, 0) = 256*8+203;
   P(55, 1) = 256*203+206;
   P(55, 2) = 256*206+205;
   P(55, 3) = 256*205+207;
   P(55, 4) = 256*207+12;
   P(55, 5) = 256*12+61;
   P(55, 6) = 256*61+62;
   P(55, 7) = 256*62+59;
   P(55, 8) = 256*59+57;
   P(55, 9) = 256*57+8;
   P(56, 0) = 256*8+203;
   P(56, 1) = 256*203+206;
   P(56, 2) = 256*206+204;
   P(56, 3) = 256*204+253;
   P(56, 4) = 256*253+255;
   P(56, 5) = 256*255+60;
   P(56, 6) = 256*60+62;
   P(56, 7) = 256*62+59;
   P(56, 8) = 256*59+57;
   P(56, 9) = 256*57+8;
   P(57, 0) = 256*8+203;
   P(57, 1) = 256*203+206;
   P(57, 2) = 256*206+204;
   P(57, 3) = 256*204+253;
   P(57, 4) = 256*253+254;
   P(57, 5) = 256*254+251;
   P(57, 6) = 256*251+56;
   P(57, 7) = 256*56+58;
   P(57, 8) = 256*58+57;
   P(57, 9) = 256*57+8;
   P(58, 0) = 256*9+11;
   P(58, 1) = 256*11+72;
   P(58, 2) = 256*72+74;
   P(58, 3) = 256*74+73;
   P(58, 4) = 256*73+88;
   P(58, 5) = 256*88+27;
   P(58, 6) = 256*27+25;
   P(58, 7) = 256*25+26;
   P(58, 8) = 256*26+24;
   P(58, 9) = 256*24+9;
   P(59, 0) = 256*9+11;
   P(59, 1) = 256*11+72;
   P(59, 2) = 256*72+74;
   P(59, 3) = 256*74+71;
   P(59, 4) = 256*71+69;
   P(59, 5) = 256*69+84;
   P(59, 6) = 256*84+23;
   P(59, 7) = 256*23+26;
   P(59, 8) = 256*26+24;
   P(59, 9) = 256*24+9;
   P(60, 0) = 256*9+11;
   P(60, 1) = 256*11+14;
   P(60, 2) = 256*14+13;
   P(60, 3) = 256*13+28;
   P(60, 4) = 256*28+30;
   P(60, 5) = 256*30+27;
   P(60, 6) = 256*27+25;
   P(60, 7) = 256*25+26;
   P(60, 8) = 256*26+24;
   P(60, 9) = 256*24+9;
   P(61, 0) = 256*9+11;
   P(61, 1) = 256*11+14;
   P(61, 2) = 256*14+13;
   P(61, 3) = 256*13+28;
   P(61, 4) = 256*28+223;
   P(61, 5) = 256*223+221;
   P(61, 6) = 256*221+222;
   P(61, 7) = 256*222+219;
   P(61, 8) = 256*219+24;
   P(61, 9) = 256*24+9;
   P(62, 0) = 256*9+11;
   P(62, 1) = 256*11+14;
   P(62, 2) = 256*14+12;
   P(62, 3) = 256*12+207;
   P(62, 4) = 256*207+205;
   P(62, 5) = 256*205+220;
   P(62, 6) = 256*220+222;
   P(62, 7) = 256*222+219;
   P(62, 8) = 256*219+24;
   P(62, 9) = 256*24+9;
   P(63, 0) = 256*11+72;
   P(63, 1) = 256*72+74;
   P(63, 2) = 256*74+73;
   P(63, 3) = 256*73+75;
   P(63, 4) = 256*75+78;
   P(63, 5) = 256*78+76;
   P(63, 6) = 256*76+15;
   P(63, 7) = 256*15+13;
   P(63, 8) = 256*13+14;
   P(63, 9) = 256*14+11;
   P(64, 0) = 256*11+72;
   P(64, 1) = 256*72+74;
   P(64, 2) = 256*74+73;
   P(64, 3) = 256*73+88;
   P(64, 4) = 256*88+27;
   P(64, 5) = 256*27+30;
   P(64, 6) = 256*30+28;
   P(64, 7) = 256*28+13;
   P(64, 8) = 256*13+14;
   P(64, 9) = 256*14+11;
   P(65, 0) = 256*11+72;
   P(65, 1) = 256*72+121;
   P(65, 2) = 256*121+123;
   P(65, 3) = 256*123+126;
   P(65, 4) = 256*126+125;
   P(65, 5) = 256*125+76;
   P(65, 6) = 256*76+15;
   P(65, 7) = 256*15+13;
   P(65, 8) = 256*13+14;
   P(65, 9) = 256*14+11;
   P(66, 0) = 256*11+72;
   P(66, 1) = 256*72+121;
   P(66, 2) = 256*121+123;
   P(66, 3) = 256*123+126;
   P(66, 4) = 256*126+124;
   P(66, 5) = 256*124+63;
   P(66, 6) = 256*63+61;
   P(66, 7) = 256*61+12;
   P(66, 8) = 256*12+14;
   P(66, 9) = 256*14+11;
   P(67, 0) = 256*11+72;
   P(67, 1) = 256*72+121;
   P(67, 2) = 256*121+122;
   P(67, 3) = 256*122+120;
   P(67, 4) = 256*120+59;
   P(67, 5) = 256*59+62;
   P(67, 6) = 256*62+61;
   P(67, 7) = 256*61+12;
   P(67, 8) = 256*12+14;
   P(67, 9) = 256*14+11;
   P(68, 0) = 256*12+14;
   P(68, 1) = 256*14+13;
   P(68, 2) = 256*13+15;
   P(68, 3) = 256*15+76;
   P(68, 4) = 256*76+125;
   P(68, 5) = 256*125+126;
   P(68, 6) = 256*126+124;
   P(68, 7) = 256*124+63;
   P(68, 8) = 256*63+61;
   P(68, 9) = 256*61+12;
   P(69, 0) = 256*12+14;
   P(69, 1) = 256*14+13;
   P(69, 2) = 256*13+28;
   P(69, 3) = 256*28+223;
   P(69, 4) = 256*223+221;
   P(69, 5) = 256*221+222;
   P(69, 6) = 256*222+220;
   P(69, 7) = 256*220+205;
   P(69, 8) = 256*205+207;
   P(69, 9) = 256*207+12;
   P(70, 0) = 256*12+14;
   P(70, 1) = 256*14+13;
   P(70, 2) = 256*13+28;
   P(70, 3) = 256*28+223;
   P(70, 4) = 256*223+210;
   P(70, 5) = 256*210+208;
   P(70, 6) = 256*208+193;
   P(70, 7) = 256*193+194;
   P(70, 8) = 256*194+207;
   P(70, 9) = 256*207+12;
   P(71, 0) = 256*12+207;
   P(71, 1) = 256*207+205;
   P(71, 2) = 256*205+206;
   P(71, 3) = 256*206+204;
   P(71, 4) = 256*204+253;
   P(71, 5) = 256*253+255;
   P(71, 6) = 256*255+60;
   P(71, 7) = 256*60+62;
   P(71, 8) = 256*62+61;
   P(71, 9) = 256*61+12;
   P(72, 0) = 256*12+207;
   P(72, 1) = 256*207+194;
   P(72, 2) = 256*194+192;
   P(72, 3) = 256*192+241;
   P(72, 4) = 256*241+243;
   P(72, 5) = 256*243+48;
   P(72, 6) = 256*48+50;
   P(72, 7) = 256*50+63;
   P(72, 8) = 256*63+61;
   P(72, 9) = 256*61+12;
   P(73, 0) = 256*12+207;
   P(73, 1) = 256*207+194;
   P(73, 2) = 256*194+192;
   P(73, 3) = 256*192+241;
   P(73, 4) = 256*241+242;
   P(73, 5) = 256*242+255;
   P(73, 6) = 256*255+60;
   P(73, 7) = 256*60+62;
   P(73, 8) = 256*62+61;
   P(73, 9) = 256*61+12;
   P(74, 0) = 256*13+15;
   P(74, 1) = 256*15+76;
   P(74, 2) = 256*76+78;
   P(74, 3) = 256*78+77;
   P(74, 4) = 256*77+92;
   P(74, 5) = 256*92+31;
   P(74, 6) = 256*31+29;
   P(74, 7) = 256*29+30;
   P(74, 8) = 256*30+28;
   P(74, 9) = 256*28+13;
   P(75, 0) = 256*13+15;
   P(75, 1) = 256*15+76;
   P(75, 2) = 256*76+78;
   P(75, 3) = 256*78+75;
   P(75, 4) = 256*75+73;
   P(75, 5) = 256*73+88;
   P(75, 6) = 256*88+27;
   P(75, 7) = 256*27+30;
   P(75, 8) = 256*30+28;
   P(75, 9) = 256*28+13;
   P(76, 0) = 256*16+18;
   P(76, 1) = 256*18+17;
   P(76, 2) = 256*17+19;
   P(76, 3) = 256*19+22;
   P(76, 4) = 256*22+20;
   P(76, 5) = 256*20+215;
   P(76, 6) = 256*215+213;
   P(76, 7) = 256*213+214;
   P(76, 8) = 256*214+211;
   P(76, 9) = 256*211+16;
   P(77, 0) = 256*16+18;
   P(77, 1) = 256*18+17;
   P(77, 2) = 256*17+32;
   P(77, 3) = 256*32+227;
   P(77, 4) = 256*227+225;
   P(77, 5) = 256*225+226;
   P(77, 6) = 256*226+224;
   P(77, 7) = 256*224+209;
   P(77, 8) = 256*209+211;
   P(77, 9) = 256*211+16;
   P(78, 0) = 256*16+18;
   P(78, 1) = 256*18+17;
   P(78, 2) = 256*17+32;
   P(78, 3) = 256*32+227;
   P(78, 4) = 256*227+230;
   P(78, 5) = 256*230+228;
   P(78, 6) = 256*228+213;
   P(78, 7) = 256*213+214;
   P(78, 8) = 256*214+211;
   P(78, 9) = 256*211+16;
   P(79, 0) = 256*16+18;
   P(79, 1) = 256*18+31;
   P(79, 2) = 256*31+29;
   P(79, 3) = 256*29+30;
   P(79, 4) = 256*30+28;
   P(79, 5) = 256*28+223;
   P(79, 6) = 256*223+210;
   P(79, 7) = 256*210+209;
   P(79, 8) = 256*209+211;
   P(79, 9) = 256*211+16;
   P(80, 0) = 256*16+18;
   P(80, 1) = 256*18+31;
   P(80, 2) = 256*31+29;
   P(80, 3) = 256*29+44;
   P(80, 4) = 256*44+239;
   P(80, 5) = 256*239+226;
   P(80, 6) = 256*226+224;
   P(80, 7) = 256*224+209;
   P(80, 8) = 256*209+211;
   P(80, 9) = 256*211+16;
   P(81, 0) = 256*17+19;
   P(81, 1) = 256*19+80;
   P(81, 2) = 256*80+82;
   P(81, 3) = 256*82+81;
   P(81, 4) = 256*81+96;
   P(81, 5) = 256*96+35;
   P(81, 6) = 256*35+33;
   P(81, 7) = 256*33+34;
   P(81, 8) = 256*34+32;
   P(81, 9) = 256*32+17;
   P(82, 0) = 256*17+19;
   P(82, 1) = 256*19+80;
   P(82, 2) = 256*80+82;
   P(82, 3) = 256*82+95;
   P(82, 4) = 256*95+93;
   P(82, 5) = 256*93+94;
   P(82, 6) = 256*94+92;
   P(82, 7) = 256*92+31;
   P(82, 8) = 256*31+18;
   P(82, 9) = 256*18+17;
   P(83, 0) = 256*17+19;
   P(83, 1) = 256*19+80;
   P(83, 2) = 256*80+82;
   P(83, 3) = 256*82+95;
   P(83, 4) = 256*95+93;
   P(83, 5) = 256*93+108;
   P(83, 6) = 256*108+47;
   P(83, 7) = 256*47+34;
   P(83, 8) = 256*34+32;
   P(83, 9) = 256*32+17;
   P(84, 0) = 256*17+19;
   P(84, 1) = 256*19+80;
   P(84, 2) = 256*80+65;
   P(84, 3) = 256*65+66;
   P(84, 4) = 256*66+79;
   P(84, 5) = 256*79+77;
   P(84, 6) = 256*77+92;
   P(84, 7) = 256*92+31;
   P(84, 8) = 256*31+18;
   P(84, 9) = 256*18+17;
   P(85, 0) = 256*17+19;
   P(85, 1) = 256*19+22;
   P(85, 2) = 256*22+21;
   P(85, 3) = 256*21+36;
   P(85, 4) = 256*36+38;
   P(85, 5) = 256*38+35;
   P(85, 6) = 256*35+33;
   P(85, 7) = 256*33+34;
   P(85, 8) = 256*34+32;
   P(85, 9) = 256*32+17;
   P(86, 0) = 256*17+19;
   P(86, 1) = 256*19+22;
   P(86, 2) = 256*22+21;
   P(86, 3) = 256*21+36;
   P(86, 4) = 256*36+231;
   P(86, 5) = 256*231+229;
   P(86, 6) = 256*229+230;
   P(86, 7) = 256*230+227;
   P(86, 8) = 256*227+32;
   P(86, 9) = 256*32+17;
   P(87, 0) = 256*17+19;
   P(87, 1) = 256*19+22;
   P(87, 2) = 256*22+20;
   P(87, 3) = 256*20+215;
   P(87, 4) = 256*215+213;
   P(87, 5) = 256*213+228;
   P(87, 6) = 256*228+230;
   P(87, 7) = 256*230+227;
   P(87, 8) = 256*227+32;
   P(87, 9) = 256*32+17;
   P(88, 0) = 256*17+18;
   P(88, 1) = 256*18+31;
   P(88, 2) = 256*31+29;
   P(88, 3) = 256*29+44;
   P(88, 4) = 256*44+46;
   P(88, 5) = 256*46+45;
   P(88, 6) = 256*45+47;
   P(88, 7) = 256*47+34;
   P(88, 8) = 256*34+32;
   P(88, 9) = 256*32+17;
   P(89, 0) = 256*17+18;
   P(89, 1) = 256*18+31;
   P(89, 2) = 256*31+29;
   P(89, 3) = 256*29+44;
   P(89, 4) = 256*44+239;
   P(89, 5) = 256*239+226;
   P(89, 6) = 256*226+225;
   P(89, 7) = 256*225+227;
   P(89, 8) = 256*227+32;
   P(89, 9) = 256*32+17;
   P(90, 0) = 256*17+18;
   P(90, 1) = 256*18+31;
   P(90, 2) = 256*31+92;
   P(90, 3) = 256*92+94;
   P(90, 4) = 256*94+93;
   P(90, 5) = 256*93+108;
   P(90, 6) = 256*108+47;
   P(90, 7) = 256*47+34;
   P(90, 8) = 256*34+32;
   P(90, 9) = 256*32+17;
   P(91, 0) = 256*19+80;
   P(91, 1) = 256*80+82;
   P(91, 2) = 256*82+81;
   P(91, 3) = 256*81+83;
   P(91, 4) = 256*83+86;
   P(91, 5) = 256*86+84;
   P(91, 6) = 256*84+23;
   P(91, 7) = 256*23+21;
   P(91, 8) = 256*21+22;
   P(91, 9) = 256*22+19;
   P(92, 0) = 256*19+80;
   P(92, 1) = 256*80+82;
   P(92, 2) = 256*82+81;
   P(92, 3) = 256*81+96;
   P(92, 4) = 256*96+35;
   P(92, 5) = 256*35+38;
   P(92, 6) = 256*38+36;
   P(92, 7) = 256*36+21;
   P(92, 8) = 256*21+22;
   P(92, 9) = 256*22+19;
   P(93, 0) = 256*19+80;
   P(93, 1) = 256*80+65;
   P(93, 2) = 256*65+67;
   P(93, 3) = 256*67+70;
   P(93, 4) = 256*70+69;
   P(93, 5) = 256*69+84;
   P(93, 6) = 256*84+23;
   P(93, 7) = 256*23+21;
   P(93, 8) = 256*21+22;
   P(93, 9) = 256*22+19;
   P(94, 0) = 256*20+22;
   P(94, 1) = 256*22+21;
   P(94, 2) = 256*21+23;
   P(94, 3) = 256*23+26;
   P(94, 4) = 256*26+24;
   P(94, 5) = 256*24+219;
   P(94, 6) = 256*219+217;
   P(94, 7) = 256*217+218;
   P(94, 8) = 256*218+215;
   P(94, 9) = 256*215+20;
   P(95, 0) = 256*20+22;
   P(95, 1) = 256*22+21;
   P(95, 2) = 256*21+36;
   P(95, 3) = 256*36+231;
   P(95, 4) = 256*231+229;
   P(95, 5) = 256*229+230;
   P(95, 6) = 256*230+228;
   P(95, 7) = 256*228+213;
   P(95, 8) = 256*213+215;
   P(95, 9) = 256*215+20;
   P(96, 0) = 256*20+22;
   P(96, 1) = 256*22+21;
   P(96, 2) = 256*21+36;
   P(96, 3) = 256*36+231;
   P(96, 4) = 256*231+234;
   P(96, 5) = 256*234+232;
   P(96, 6) = 256*232+217;
   P(96, 7) = 256*217+218;
   P(96, 8) = 256*218+215;
   P(96, 9) = 256*215+20;
   P(97, 0) = 256*21+23;
   P(97, 1) = 256*23+84;
   P(97, 2) = 256*84+86;
   P(97, 3) = 256*86+85;
   P(97, 4) = 256*85+100;
   P(97, 5) = 256*100+39;
   P(97, 6) = 256*39+37;
   P(97, 7) = 256*37+38;
   P(97, 8) = 256*38+36;
   P(97, 9) = 256*36+21;
   P(98, 0) = 256*21+23;
   P(98, 1) = 256*23+84;
   P(98, 2) = 256*84+86;
   P(98, 3) = 256*86+83;
   P(98, 4) = 256*83+81;
   P(98, 5) = 256*81+96;
   P(98, 6) = 256*96+35;
   P(98, 7) = 256*35+38;
   P(98, 8) = 256*38+36;
   P(98, 9) = 256*36+21;
   P(99, 0) = 256*21+23;
   P(99, 1) = 256*23+26;
   P(99, 2) = 256*26+25;
   P(99, 3) = 256*25+40;
   P(99, 4) = 256*40+42;
   P(99, 5) = 256*42+39;
   P(99, 6) = 256*39+37;
   P(99, 7) = 256*37+38;
   P(99, 8) = 256*38+36;
   P(99, 9) = 256*36+21;
   P(100, 0) = 256*21+23;
   P(100, 1) = 256*23+26;
   P(100, 2) = 256*26+25;
   P(100, 3) = 256*25+40;
   P(100, 4) = 256*40+235;
   P(100, 5) = 256*235+233;
   P(100, 6) = 256*233+234;
   P(100, 7) = 256*234+231;
   P(100, 8) = 256*231+36;
   P(100, 9) = 256*36+21;
   P(101, 0) = 256*21+23;
   P(101, 1) = 256*23+26;
   P(101, 2) = 256*26+24;
   P(101, 3) = 256*24+219;
   P(101, 4) = 256*219+217;
   P(101, 5) = 256*217+232;
   P(101, 6) = 256*232+234;
   P(101, 7) = 256*234+231;
   P(101, 8) = 256*231+36;
   P(101, 9) = 256*36+21;
   P(102, 0) = 256*23+84;
   P(102, 1) = 256*84+86;
   P(102, 2) = 256*86+85;
   P(102, 3) = 256*85+87;
   P(102, 4) = 256*87+90;
   P(102, 5) = 256*90+88;
   P(102, 6) = 256*88+27;
   P(102, 7) = 256*27+25;
   P(102, 8) = 256*25+26;
   P(102, 9) = 256*26+23;
   P(103, 0) = 256*23+84;
   P(103, 1) = 256*84+86;
   P(103, 2) = 256*86+85;
   P(103, 3) = 256*85+100;
   P(103, 4) = 256*100+39;
   P(103, 5) = 256*39+42;
   P(103, 6) = 256*42+40;
   P(103, 7) = 256*40+25;
   P(103, 8) = 256*25+26;
   P(103, 9) = 256*26+23;
   P(104, 0) = 256*23+84;
   P(104, 1) = 256*84+69;
   P(104, 2) = 256*69+71;
   P(104, 3) = 256*71+74;
   P(104, 4) = 256*74+73;
   P(104, 5) = 256*73+88;
   P(104, 6) = 256*88+27;
   P(104, 7) = 256*27+25;
   P(104, 8) = 256*25+26;
   P(104, 9) = 256*26+23;
   P(105, 0) = 256*24+26;
   P(105, 1) = 256*26+25;
   P(105, 2) = 256*25+27;
   P(105, 3) = 256*27+30;
   P(105, 4) = 256*30+28;
   P(105, 5) = 256*28+223;
   P(105, 6) = 256*223+221;
   P(105, 7) = 256*221+222;
   P(105, 8) = 256*222+219;
   P(105, 9) = 256*219+24;
   P(106, 0) = 256*24+26;
   P(106, 1) = 256*26+25;
   P(106, 2) = 256*25+40;
   P(106, 3) = 256*40+235;
   P(106, 4) = 256*235+233;
   P(106, 5) = 256*233+234;
   P(106, 6) = 256*234+232;
   P(106, 7) = 256*232+217;
   P(106, 8) = 256*217+219;
   P(106, 9) = 256*219+24;
   P(107, 0) = 256*24+26;
   P(107, 1) = 256*26+25;
   P(107, 2) = 256*25+40;
   P(107, 3) = 256*40+235;
   P(107, 4) = 256*235+238;
   P(107, 5) = 256*238+236;
   P(107, 6) = 256*236+221;
   P(107, 7) = 256*221+222;
   P(107, 8) = 256*222+219;
   P(107, 9) = 256*219+24;
   P(108, 0) = 256*25+27;
   P(108, 1) = 256*27+88;
   P(108, 2) = 256*88+90;
   P(108, 3) = 256*90+89;
   P(108, 4) = 256*89+104;
   P(108, 5) = 256*104+43;
   P(108, 6) = 256*43+41;
   P(108, 7) = 256*41+42;
   P(108, 8) = 256*42+40;
   P(108, 9) = 256*40+25;
   P(109, 0) = 256*25+27;
   P(109, 1) = 256*27+88;
   P(109, 2) = 256*88+90;
   P(109, 3) = 256*90+87;
   P(109, 4) = 256*87+85;
   P(109, 5) = 256*85+100;
   P(109, 6) = 256*100+39;
   P(109, 7) = 256*39+42;
   P(109, 8) = 256*42+40;
   P(109, 9) = 256*40+25;
   P(110, 0) = 256*25+27;
   P(110, 1) = 256*27+30;
   P(110, 2) = 256*30+29;
   P(110, 3) = 256*29+44;
   P(110, 4) = 256*44+46;
   P(110, 5) = 256*46+43;
   P(110, 6) = 256*43+41;
   P(110, 7) = 256*41+42;
   P(110, 8) = 256*42+40;
   P(110, 9) = 256*40+25;
   P(111, 0) = 256*25+27;
   P(111, 1) = 256*27+30;
   P(111, 2) = 256*30+29;
   P(111, 3) = 256*29+44;
   P(111, 4) = 256*44+239;
   P(111, 5) = 256*239+237;
   P(111, 6) = 256*237+238;
   P(111, 7) = 256*238+235;
   P(111, 8) = 256*235+40;
   P(111, 9) = 256*40+25;
   P(112, 0) = 256*25+27;
   P(112, 1) = 256*27+30;
   P(112, 2) = 256*30+28;
   P(112, 3) = 256*28+223;
   P(112, 4) = 256*223+221;
   P(112, 5) = 256*221+236;
   P(112, 6) = 256*236+238;
   P(112, 7) = 256*238+235;
   P(112, 8) = 256*235+40;
   P(112, 9) = 256*40+25;
   P(113, 0) = 256*27+88;
   P(113, 1) = 256*88+90;
   P(113, 2) = 256*90+89;
   P(113, 3) = 256*89+91;
   P(113, 4) = 256*91+94;
   P(113, 5) = 256*94+92;
   P(113, 6) = 256*92+31;
   P(113, 7) = 256*31+29;
   P(113, 8) = 256*29+30;
   P(113, 9) = 256*30+27;
   P(114, 0) = 256*27+88;
   P(114, 1) = 256*88+90;
   P(114, 2) = 256*90+89;
   P(114, 3) = 256*89+104;
   P(114, 4) = 256*104+43;
   P(114, 5) = 256*43+46;
   P(114, 6) = 256*46+44;
   P(114, 7) = 256*44+29;
   P(114, 8) = 256*29+30;
   P(114, 9) = 256*30+27;
   P(115, 0) = 256*27+88;
   P(115, 1) = 256*88+73;
   P(115, 2) = 256*73+75;
   P(115, 3) = 256*75+78;
   P(115, 4) = 256*78+77;
   P(115, 5) = 256*77+92;
   P(115, 6) = 256*92+31;
   P(115, 7) = 256*31+29;
   P(115, 8) = 256*29+30;
   P(115, 9) = 256*30+27;
   P(116, 0) = 256*28+30;
   P(116, 1) = 256*30+29;
   P(116, 2) = 256*29+44;
   P(116, 3) = 256*44+239;
   P(116, 4) = 256*239+237;
   P(116, 5) = 256*237+238;
   P(116, 6) = 256*238+236;
   P(116, 7) = 256*236+221;
   P(116, 8) = 256*221+223;
   P(116, 9) = 256*223+28;
   P(117, 0) = 256*28+30;
   P(117, 1) = 256*30+29;
   P(117, 2) = 256*29+44;
   P(117, 3) = 256*44+239;
   P(117, 4) = 256*239+226;
   P(117, 5) = 256*226+224;
   P(117, 6) = 256*224+209;
   P(117, 7) = 256*209+210;
   P(117, 8) = 256*210+223;
   P(117, 9) = 256*223+28;
   P(118, 0) = 256*29+31;
   P(118, 1) = 256*31+92;
   P(118, 2) = 256*92+94;
   P(118, 3) = 256*94+93;
   P(118, 4) = 256*93+108;
   P(118, 5) = 256*108+47;
   P(118, 6) = 256*47+45;
   P(118, 7) = 256*45+46;
   P(118, 8) = 256*46+44;
   P(118, 9) = 256*44+29;
   P(119, 0) = 256*29+31;
   P(119, 1) = 256*31+92;
   P(119, 2) = 256*92+94;
   P(119, 3) = 256*94+91;
   P(119, 4) = 256*91+89;
   P(119, 5) = 256*89+104;
   P(119, 6) = 256*104+43;
   P(119, 7) = 256*43+46;
   P(119, 8) = 256*46+44;
   P(119, 9) = 256*44+29;
   P(120, 0) = 256*32+34;
   P(120, 1) = 256*34+33;
   P(120, 2) = 256*33+35;
   P(120, 3) = 256*35+38;
   P(120, 4) = 256*38+36;
   P(120, 5) = 256*36+231;
   P(120, 6) = 256*231+229;
   P(120, 7) = 256*229+230;
   P(120, 8) = 256*230+227;
   P(120, 9) = 256*227+32;
   P(121, 0) = 256*32+34;
   P(121, 1) = 256*34+33;
   P(121, 2) = 256*33+48;
   P(121, 3) = 256*48+243;
   P(121, 4) = 256*243+241;
   P(121, 5) = 256*241+242;
   P(121, 6) = 256*242+240;
   P(121, 7) = 256*240+225;
   P(121, 8) = 256*225+227;
   P(121, 9) = 256*227+32;
   P(122, 0) = 256*32+34;
   P(122, 1) = 256*34+33;
   P(122, 2) = 256*33+48;
   P(122, 3) = 256*48+243;
   P(122, 4) = 256*243+246;
   P(122, 5) = 256*246+244;
   P(122, 6) = 256*244+229;
   P(122, 7) = 256*229+230;
   P(122, 8) = 256*230+227;
   P(122, 9) = 256*227+32;
   P(123, 0) = 256*32+34;
   P(123, 1) = 256*34+47;
   P(123, 2) = 256*47+45;
   P(123, 3) = 256*45+46;
   P(123, 4) = 256*46+44;
   P(123, 5) = 256*44+239;
   P(123, 6) = 256*239+226;
   P(123, 7) = 256*226+225;
   P(123, 8) = 256*225+227;
   P(123, 9) = 256*227+32;
   P(124, 0) = 256*32+34;
   P(124, 1) = 256*34+47;
   P(124, 2) = 256*47+45;
   P(124, 3) = 256*45+60;
   P(124, 4) = 256*60+255;
   P(124, 5) = 256*255+242;
   P(124, 6) = 256*242+240;
   P(124, 7) = 256*240+225;
   P(124, 8) = 256*225+227;
   P(124, 9) = 256*227+32;
   P(125, 0) = 256*33+35;
   P(125, 1) = 256*35+96;
   P(125, 2) = 256*96+98;
   P(125, 3) = 256*98+97;
   P(125, 4) = 256*97+112;
   P(125, 5) = 256*112+51;
   P(125, 6) = 256*51+49;
   P(125, 7) = 256*49+50;
   P(125, 8) = 256*50+48;
   P(125, 9) = 256*48+33;
   P(126, 0) = 256*33+35;
   P(126, 1) = 256*35+96;
   P(126, 2) = 256*96+98;
   P(126, 3) = 256*98+111;
   P(126, 4) = 256*111+109;
   P(126, 5) = 256*109+110;
   P(126, 6) = 256*110+108;
   P(126, 7) = 256*108+47;
   P(126, 8) = 256*47+34;
   P(126, 9) = 256*34+33;
   P(127, 0) = 256*33+35;
   P(127, 1) = 256*35+96;
   P(127, 2) = 256*96+98;
   P(127, 3) = 256*98+111;
   P(127, 4) = 256*111+109;
   P(127, 5) = 256*109+124;
   P(127, 6) = 256*124+63;
   P(127, 7) = 256*63+50;
   P(127, 8) = 256*50+48;
   P(127, 9) = 256*48+33;
   P(128, 0) = 256*33+35;
   P(128, 1) = 256*35+96;
   P(128, 2) = 256*96+81;
   P(128, 3) = 256*81+82;
   P(128, 4) = 256*82+95;
   P(128, 5) = 256*95+93;
   P(128, 6) = 256*93+108;
   P(128, 7) = 256*108+47;
   P(128, 8) = 256*47+34;
   P(128, 9) = 256*34+33;
   P(129, 0) = 256*33+35;
   P(129, 1) = 256*35+38;
   P(129, 2) = 256*38+37;
   P(129, 3) = 256*37+52;
   P(129, 4) = 256*52+54;
   P(129, 5) = 256*54+51;
   P(129, 6) = 256*51+49;
   P(129, 7) = 256*49+50;
   P(129, 8) = 256*50+48;
   P(129, 9) = 256*48+33;
   P(130, 0) = 256*33+35;
   P(130, 1) = 256*35+38;
   P(130, 2) = 256*38+37;
   P(130, 3) = 256*37+52;
   P(130, 4) = 256*52+247;
   P(130, 5) = 256*247+245;
   P(130, 6) = 256*245+246;
   P(130, 7) = 256*246+243;
   P(130, 8) = 256*243+48;
   P(130, 9) = 256*48+33;
   P(131, 0) = 256*33+35;
   P(131, 1) = 256*35+38;
   P(131, 2) = 256*38+36;
   P(131, 3) = 256*36+231;
   P(131, 4) = 256*231+229;
   P(131, 5) = 256*229+244;
   P(131, 6) = 256*244+246;
   P(131, 7) = 256*246+243;
   P(131, 8) = 256*243+48;
   P(131, 9) = 256*48+33;
   P(132, 0) = 256*33+34;
   P(132, 1) = 256*34+47;
   P(132, 2) = 256*47+45;
   P(132, 3) = 256*45+60;
   P(132, 4) = 256*60+62;
   P(132, 5) = 256*62+61;
   P(132, 6) = 256*61+63;
   P(132, 7) = 256*63+50;
   P(132, 8) = 256*50+48;
   P(132, 9) = 256*48+33;
   P(133, 0) = 256*33+34;
   P(133, 1) = 256*34+47;
   P(133, 2) = 256*47+45;
   P(133, 3) = 256*45+60;
   P(133, 4) = 256*60+255;
   P(133, 5) = 256*255+242;
   P(133, 6) = 256*242+241;
   P(133, 7) = 256*241+243;
   P(133, 8) = 256*243+48;
   P(133, 9) = 256*48+33;
   P(134, 0) = 256*33+34;
   P(134, 1) = 256*34+47;
   P(134, 2) = 256*47+108;
   P(134, 3) = 256*108+110;
   P(134, 4) = 256*110+109;
   P(134, 5) = 256*109+124;
   P(134, 6) = 256*124+63;
   P(134, 7) = 256*63+50;
   P(134, 8) = 256*50+48;
   P(134, 9) = 256*48+33;
   P(135, 0) = 256*35+96;
   P(135, 1) = 256*96+98;
   P(135, 2) = 256*98+97;
   P(135, 3) = 256*97+99;
   P(135, 4) = 256*99+102;
   P(135, 5) = 256*102+100;
   P(135, 6) = 256*100+39;
   P(135, 7) = 256*39+37;
   P(135, 8) = 256*37+38;
   P(135, 9) = 256*38+35;
   P(136, 0) = 256*35+96;
   P(136, 1) = 256*96+98;
   P(136, 2) = 256*98+97;
   P(136, 3) = 256*97+112;
   P(136, 4) = 256*112+51;
   P(136, 5) = 256*51+54;
   P(136, 6) = 256*54+52;
   P(136, 7) = 256*52+37;
   P(136, 8) = 256*37+38;
   P(136, 9) = 256*38+35;
   P(137, 0) = 256*35+96;
   P(137, 1) = 256*96+81;
   P(137, 2) = 256*81+83;
   P(137, 3) = 256*83+86;
   P(137, 4) = 256*86+85;
   P(137, 5) = 256*85+100;
   P(137, 6) = 256*100+39;
   P(137, 7) = 256*39+37;
   P(137, 8) = 256*37+38;
   P(137, 9) = 256*38+35;
   P(138, 0) = 256*36+38;
   P(138, 1) = 256*38+37;
   P(138, 2) = 256*37+39;
   P(138, 3) = 256*39+42;
   P(138, 4) = 256*42+40;
   P(138, 5) = 256*40+235;
   P(138, 6) = 256*235+233;
   P(138, 7) = 256*233+234;
   P(138, 8) = 256*234+231;
   P(138, 9) = 256*231+36;
   P(139, 0) = 256*36+38;
   P(139, 1) = 256*38+37;
   P(139, 2) = 256*37+52;
   P(139, 3) = 256*52+247;
   P(139, 4) = 256*247+245;
   P(139, 5) = 256*245+246;
   P(139, 6) = 256*246+244;
   P(139, 7) = 256*244+229;
   P(139, 8) = 256*229+231;
   P(139, 9) = 256*231+36;
   P(140, 0) = 256*36+38;
   P(140, 1) = 256*38+37;
   P(140, 2) = 256*37+52;
   P(140, 3) = 256*52+247;
   P(140, 4) = 256*247+250;
   P(140, 5) = 256*250+248;
   P(140, 6) = 256*248+233;
   P(140, 7) = 256*233+234;
   P(140, 8) = 256*234+231;
   P(140, 9) = 256*231+36;
   P(141, 0) = 256*37+39;
   P(141, 1) = 256*39+100;
   P(141, 2) = 256*100+102;
   P(141, 3) = 256*102+101;
   P(141, 4) = 256*101+116;
   P(141, 5) = 256*116+55;
   P(141, 6) = 256*55+53;
   P(141, 7) = 256*53+54;
   P(141, 8) = 256*54+52;
   P(141, 9) = 256*52+37;
   P(142, 0) = 256*37+39;
   P(142, 1) = 256*39+100;
   P(142, 2) = 256*100+102;
   P(142, 3) = 256*102+99;
   P(142, 4) = 256*99+97;
   P(142, 5) = 256*97+112;
   P(142, 6) = 256*112+51;
   P(142, 7) = 256*51+54;
   P(142, 8) = 256*54+52;
   P(142, 9) = 256*52+37;
   P(143, 0) = 256*37+39;
   P(143, 1) = 256*39+42;
   P(143, 2) = 256*42+41;
   P(143, 3) = 256*41+56;
   P(143, 4) = 256*56+58;
   P(143, 5) = 256*58+55;
   P(143, 6) = 256*55+53;
   P(143, 7) = 256*53+54;
   P(143, 8) = 256*54+52;
   P(143, 9) = 256*52+37;
   P(144, 0) = 256*37+39;
   P(144, 1) = 256*39+42;
   P(144, 2) = 256*42+41;
   P(144, 3) = 256*41+56;
   P(144, 4) = 256*56+251;
   P(144, 5) = 256*251+249;
   P(144, 6) = 256*249+250;
   P(144, 7) = 256*250+247;
   P(144, 8) = 256*247+52;
   P(144, 9) = 256*52+37;
   P(145, 0) = 256*37+39;
   P(145, 1) = 256*39+42;
   P(145, 2) = 256*42+40;
   P(145, 3) = 256*40+235;
   P(145, 4) = 256*235+233;
   P(145, 5) = 256*233+248;
   P(145, 6) = 256*248+250;
   P(145, 7) = 256*250+247;
   P(145, 8) = 256*247+52;
   P(145, 9) = 256*52+37;
   P(146, 0) = 256*39+100;
   P(146, 1) = 256*100+102;
   P(146, 2) = 256*102+101;
   P(146, 3) = 256*101+103;
   P(146, 4) = 256*103+106;
   P(146, 5) = 256*106+104;
   P(146, 6) = 256*104+43;
   P(146, 7) = 256*43+41;
   P(146, 8) = 256*41+42;
   P(146, 9) = 256*42+39;
   P(147, 0) = 256*39+100;
   P(147, 1) = 256*100+102;
   P(147, 2) = 256*102+101;
   P(147, 3) = 256*101+116;
   P(147, 4) = 256*116+55;
   P(147, 5) = 256*55+58;
   P(147, 6) = 256*58+56;
   P(147, 7) = 256*56+41;
   P(147, 8) = 256*41+42;
   P(147, 9) = 256*42+39;
   P(148, 0) = 256*39+100;
   P(148, 1) = 256*100+85;
   P(148, 2) = 256*85+87;
   P(148, 3) = 256*87+90;
   P(148, 4) = 256*90+89;
   P(148, 5) = 256*89+104;
   P(148, 6) = 256*104+43;
   P(148, 7) = 256*43+41;
   P(148, 8) = 256*41+42;
   P(148, 9) = 256*42+39;
   P(149, 0) = 256*40+42;
   P(149, 1) = 256*42+41;
   P(149, 2) = 256*41+43;
   P(149, 3) = 256*43+46;
   P(149, 4) = 256*46+44;
   P(149, 5) = 256*44+239;
   P(149, 6) = 256*239+237;
   P(149, 7) = 256*237+238;
   P(149, 8) = 256*238+235;
   P(149, 9) = 256*235+40;
   P(150, 0) = 256*40+42;
   P(150, 1) = 256*42+41;
   P(150, 2) = 256*41+56;
   P(150, 3) = 256*56+251;
   P(150, 4) = 256*251+249;
   P(150, 5) = 256*249+250;
   P(150, 6) = 256*250+248;
   P(150, 7) = 256*248+233;
   P(150, 8) = 256*233+235;
   P(150, 9) = 256*235+40;
   P(151, 0) = 256*40+42;
   P(151, 1) = 256*42+41;
   P(151, 2) = 256*41+56;
   P(151, 3) = 256*56+251;
   P(151, 4) = 256*251+254;
   P(151, 5) = 256*254+252;
   P(151, 6) = 256*252+237;
   P(151, 7) = 256*237+238;
   P(151, 8) = 256*238+235;
   P(151, 9) = 256*235+40;
   P(152, 0) = 256*41+43;
   P(152, 1) = 256*43+104;
   P(152, 2) = 256*104+106;
   P(152, 3) = 256*106+105;
   P(152, 4) = 256*105+120;
   P(152, 5) = 256*120+59;
   P(152, 6) = 256*59+57;
   P(152, 7) = 256*57+58;
   P(152, 8) = 256*58+56;
   P(152, 9) = 256*56+41;
   P(153, 0) = 256*41+43;
   P(153, 1) = 256*43+104;
   P(153, 2) = 256*104+106;
   P(153, 3) = 256*106+103;
   P(153, 4) = 256*103+101;
   P(153, 5) = 256*101+116;
   P(153, 6) = 256*116+55;
   P(153, 7) = 256*55+58;
   P(153, 8) = 256*58+56;
   P(153, 9) = 256*56+41;
   P(154, 0) = 256*41+43;
   P(154, 1) = 256*43+46;
   P(154, 2) = 256*46+45;
   P(154, 3) = 256*45+60;
   P(154, 4) = 256*60+62;
   P(154, 5) = 256*62+59;
   P(154, 6) = 256*59+57;
   P(154, 7) = 256*57+58;
   P(154, 8) = 256*58+56;
   P(154, 9) = 256*56+41;
   P(155, 0) = 256*41+43;
   P(155, 1) = 256*43+46;
   P(155, 2) = 256*46+45;
   P(155, 3) = 256*45+60;
   P(155, 4) = 256*60+255;
   P(155, 5) = 256*255+253;
   P(155, 6) = 256*253+254;
   P(155, 7) = 256*254+251;
   P(155, 8) = 256*251+56;
   P(155, 9) = 256*56+41;
   P(156, 0) = 256*41+43;
   P(156, 1) = 256*43+46;
   P(156, 2) = 256*46+44;
   P(156, 3) = 256*44+239;
   P(156, 4) = 256*239+237;
   P(156, 5) = 256*237+252;
   P(156, 6) = 256*252+254;
   P(156, 7) = 256*254+251;
   P(156, 8) = 256*251+56;
   P(156, 9) = 256*56+41;
   P(157, 0) = 256*43+104;
   P(157, 1) = 256*104+106;
   P(157, 2) = 256*106+105;
   P(157, 3) = 256*105+107;
   P(157, 4) = 256*107+110;
   P(157, 5) = 256*110+108;
   P(157, 6) = 256*108+47;
   P(157, 7) = 256*47+45;
   P(157, 8) = 256*45+46;
   P(157, 9) = 256*46+43;
   P(158, 0) = 256*43+104;
   P(158, 1) = 256*104+106;
   P(158, 2) = 256*106+105;
   P(158, 3) = 256*105+120;
   P(158, 4) = 256*120+59;
   P(158, 5) = 256*59+62;
   P(158, 6) = 256*62+60;
   P(158, 7) = 256*60+45;
   P(158, 8) = 256*45+46;
   P(158, 9) = 256*46+43;
   P(159, 0) = 256*43+104;
   P(159, 1) = 256*104+89;
   P(159, 2) = 256*89+91;
   P(159, 3) = 256*91+94;
   P(159, 4) = 256*94+93;
   P(159, 5) = 256*93+108;
   P(159, 6) = 256*108+47;
   P(159, 7) = 256*47+45;
   P(159, 8) = 256*45+46;
   P(159, 9) = 256*46+43;
   P(160, 0) = 256*44+46;
   P(160, 1) = 256*46+45;
   P(160, 2) = 256*45+60;
   P(160, 3) = 256*60+255;
   P(160, 4) = 256*255+253;
   P(160, 5) = 256*253+254;
   P(160, 6) = 256*254+252;
   P(160, 7) = 256*252+237;
   P(160, 8) = 256*237+239;
   P(160, 9) = 256*239+44;
   P(161, 0) = 256*44+46;
   P(161, 1) = 256*46+45;
   P(161, 2) = 256*45+60;
   P(161, 3) = 256*60+255;
   P(161, 4) = 256*255+242;
   P(161, 5) = 256*242+240;
   P(161, 6) = 256*240+225;
   P(161, 7) = 256*225+226;
   P(161, 8) = 256*226+239;
   P(161, 9) = 256*239+44;
   P(162, 0) = 256*45+47;
   P(162, 1) = 256*47+108;
   P(162, 2) = 256*108+110;
   P(162, 3) = 256*110+109;
   P(162, 4) = 256*109+124;
   P(162, 5) = 256*124+63;
   P(162, 6) = 256*63+61;
   P(162, 7) = 256*61+62;
   P(162, 8) = 256*62+60;
   P(162, 9) = 256*60+45;
   P(163, 0) = 256*45+47;
   P(163, 1) = 256*47+108;
   P(163, 2) = 256*108+110;
   P(163, 3) = 256*110+107;
   P(163, 4) = 256*107+105;
   P(163, 5) = 256*105+120;
   P(163, 6) = 256*120+59;
   P(163, 7) = 256*59+62;
   P(163, 8) = 256*62+60;
   P(163, 9) = 256*60+45;
   P(164, 0) = 256*48+50;
   P(164, 1) = 256*50+49;
   P(164, 2) = 256*49+51;
   P(164, 3) = 256*51+54;
   P(164, 4) = 256*54+52;
   P(164, 5) = 256*52+247;
   P(164, 6) = 256*247+245;
   P(164, 7) = 256*245+246;
   P(164, 8) = 256*246+243;
   P(164, 9) = 256*243+48;
   P(165, 0) = 256*48+50;
   P(165, 1) = 256*50+63;
   P(165, 2) = 256*63+61;
   P(165, 3) = 256*61+62;
   P(165, 4) = 256*62+60;
   P(165, 5) = 256*60+255;
   P(165, 6) = 256*255+242;
   P(165, 7) = 256*242+241;
   P(165, 8) = 256*241+243;
   P(165, 9) = 256*243+48;
   P(166, 0) = 256*49+51;
   P(166, 1) = 256*51+112;
   P(166, 2) = 256*112+114;
   P(166, 3) = 256*114+127;
   P(166, 4) = 256*127+125;
   P(166, 5) = 256*125+126;
   P(166, 6) = 256*126+124;
   P(166, 7) = 256*124+63;
   P(166, 8) = 256*63+50;
   P(166, 9) = 256*50+49;
   P(167, 0) = 256*49+51;
   P(167, 1) = 256*51+112;
   P(167, 2) = 256*112+97;
   P(167, 3) = 256*97+98;
   P(167, 4) = 256*98+111;
   P(167, 5) = 256*111+109;
   P(167, 6) = 256*109+124;
   P(167, 7) = 256*124+63;
   P(167, 8) = 256*63+50;
   P(167, 9) = 256*50+49;
   P(168, 0) = 256*51+112;
   P(168, 1) = 256*112+114;
   P(168, 2) = 256*114+113;
   P(168, 3) = 256*113+115;
   P(168, 4) = 256*115+118;
   P(168, 5) = 256*118+116;
   P(168, 6) = 256*116+55;
   P(168, 7) = 256*55+53;
   P(168, 8) = 256*53+54;
   P(168, 9) = 256*54+51;
   P(169, 0) = 256*51+112;
   P(169, 1) = 256*112+97;
   P(169, 2) = 256*97+99;
   P(169, 3) = 256*99+102;
   P(169, 4) = 256*102+101;
   P(169, 5) = 256*101+116;
   P(169, 6) = 256*116+55;
   P(169, 7) = 256*55+53;
   P(169, 8) = 256*53+54;
   P(169, 9) = 256*54+51;
   P(170, 0) = 256*52+54;
   P(170, 1) = 256*54+53;
   P(170, 2) = 256*53+55;
   P(170, 3) = 256*55+58;
   P(170, 4) = 256*58+56;
   P(170, 5) = 256*56+251;
   P(170, 6) = 256*251+249;
   P(170, 7) = 256*249+250;
   P(170, 8) = 256*250+247;
   P(170, 9) = 256*247+52;
   P(171, 0) = 256*55+116;
   P(171, 1) = 256*116+118;
   P(171, 2) = 256*118+117;
   P(171, 3) = 256*117+119;
   P(171, 4) = 256*119+122;
   P(171, 5) = 256*122+120;
   P(171, 6) = 256*120+59;
   P(171, 7) = 256*59+57;
   P(171, 8) = 256*57+58;
   P(171, 9) = 256*58+55;
   P(172, 0) = 256*55+116;
   P(172, 1) = 256*116+101;
   P(172, 2) = 256*101+103;
   P(172, 3) = 256*103+106;
   P(172, 4) = 256*106+105;
   P(172, 5) = 256*105+120;
   P(172, 6) = 256*120+59;
   P(172, 7) = 256*59+57;
   P(172, 8) = 256*57+58;
   P(172, 9) = 256*58+55;
   P(173, 0) = 256*56+58;
   P(173, 1) = 256*58+57;
   P(173, 2) = 256*57+59;
   P(173, 3) = 256*59+62;
   P(173, 4) = 256*62+60;
   P(173, 5) = 256*60+255;
   P(173, 6) = 256*255+253;
   P(173, 7) = 256*253+254;
   P(173, 8) = 256*254+251;
   P(173, 9) = 256*251+56;
   P(174, 0) = 256*59+120;
   P(174, 1) = 256*120+122;
   P(174, 2) = 256*122+121;
   P(174, 3) = 256*121+123;
   P(174, 4) = 256*123+126;
   P(174, 5) = 256*126+124;
   P(174, 6) = 256*124+63;
   P(174, 7) = 256*63+61;
   P(174, 8) = 256*61+62;
   P(174, 9) = 256*62+59;
   P(175, 0) = 256*59+120;
   P(175, 1) = 256*120+105;
   P(175, 2) = 256*105+107;
   P(175, 3) = 256*107+110;
   P(175, 4) = 256*110+109;
   P(175, 5) = 256*109+124;
   P(175, 6) = 256*124+63;
   P(175, 7) = 256*63+61;
   P(175, 8) = 256*61+62;
   P(175, 9) = 256*62+59;
   P(176, 0) = 256*64+66;
   P(176, 1) = 256*66+65;
   P(176, 2) = 256*65+67;
   P(176, 3) = 256*67+128;
   P(176, 4) = 256*128+177;
   P(176, 5) = 256*177+178;
   P(176, 6) = 256*178+176;
   P(176, 7) = 256*176+115;
   P(176, 8) = 256*115+113;
   P(176, 9) = 256*113+64;
   P(177, 0) = 256*64+66;
   P(177, 1) = 256*66+65;
   P(177, 2) = 256*65+67;
   P(177, 3) = 256*67+70;
   P(177, 4) = 256*70+68;
   P(177, 5) = 256*68+117;
   P(177, 6) = 256*117+118;
   P(177, 7) = 256*118+115;
   P(177, 8) = 256*115+113;
   P(177, 9) = 256*113+64;
   P(178, 0) = 256*64+66;
   P(178, 1) = 256*66+79;
   P(178, 2) = 256*79+77;
   P(178, 3) = 256*77+78;
   P(178, 4) = 256*78+76;
   P(178, 5) = 256*76+125;
   P(178, 6) = 256*125+127;
   P(178, 7) = 256*127+114;
   P(178, 8) = 256*114+113;
   P(178, 9) = 256*113+64;
   P(179, 0) = 256*64+66;
   P(179, 1) = 256*66+79;
   P(179, 2) = 256*79+140;
   P(179, 3) = 256*140+189;
   P(179, 4) = 256*189+191;
   P(179, 5) = 256*191+178;
   P(179, 6) = 256*178+176;
   P(179, 7) = 256*176+115;
   P(179, 8) = 256*115+113;
   P(179, 9) = 256*113+64;
   P(180, 0) = 256*64+66;
   P(180, 1) = 256*66+79;
   P(180, 2) = 256*79+140;
   P(180, 3) = 256*140+189;
   P(180, 4) = 256*189+190;
   P(180, 5) = 256*190+188;
   P(180, 6) = 256*188+127;
   P(180, 7) = 256*127+114;
   P(180, 8) = 256*114+113;
   P(180, 9) = 256*113+64;
   P(181, 0) = 256*65+67;
   P(181, 1) = 256*67+128;
   P(181, 2) = 256*128+130;
   P(181, 3) = 256*130+129;
   P(181, 4) = 256*129+144;
   P(181, 5) = 256*144+83;
   P(181, 6) = 256*83+81;
   P(181, 7) = 256*81+82;
   P(181, 8) = 256*82+80;
   P(181, 9) = 256*80+65;
   P(182, 0) = 256*65+67;
   P(182, 1) = 256*67+128;
   P(182, 2) = 256*128+130;
   P(182, 3) = 256*130+143;
   P(182, 4) = 256*143+141;
   P(182, 5) = 256*141+142;
   P(182, 6) = 256*142+140;
   P(182, 7) = 256*140+79;
   P(182, 8) = 256*79+66;
   P(182, 9) = 256*66+65;
   P(183, 0) = 256*65+67;
   P(183, 1) = 256*67+128;
   P(183, 2) = 256*128+130;
   P(183, 3) = 256*130+143;
   P(183, 4) = 256*143+141;
   P(183, 5) = 256*141+156;
   P(183, 6) = 256*156+95;
   P(183, 7) = 256*95+82;
   P(183, 8) = 256*82+80;
   P(183, 9) = 256*80+65;
   P(184, 0) = 256*65+67;
   P(184, 1) = 256*67+128;
   P(184, 2) = 256*128+177;
   P(184, 3) = 256*177+178;
   P(184, 4) = 256*178+191;
   P(184, 5) = 256*191+189;
   P(184, 6) = 256*189+140;
   P(184, 7) = 256*140+79;
   P(184, 8) = 256*79+66;
   P(184, 9) = 256*66+65;
   P(185, 0) = 256*65+67;
   P(185, 1) = 256*67+70;
   P(185, 2) = 256*70+69;
   P(185, 3) = 256*69+84;
   P(185, 4) = 256*84+86;
   P(185, 5) = 256*86+83;
   P(185, 6) = 256*83+81;
   P(185, 7) = 256*81+82;
   P(185, 8) = 256*82+80;
   P(185, 9) = 256*80+65;
   P(186, 0) = 256*65+66;
   P(186, 1) = 256*66+79;
   P(186, 2) = 256*79+77;
   P(186, 3) = 256*77+92;
   P(186, 4) = 256*92+94;
   P(186, 5) = 256*94+93;
   P(186, 6) = 256*93+95;
   P(186, 7) = 256*95+82;
   P(186, 8) = 256*82+80;
   P(186, 9) = 256*80+65;
   P(187, 0) = 256*65+66;
   P(187, 1) = 256*66+79;
   P(187, 2) = 256*79+140;
   P(187, 3) = 256*140+142;
   P(187, 4) = 256*142+141;
   P(187, 5) = 256*141+156;
   P(187, 6) = 256*156+95;
   P(187, 7) = 256*95+82;
   P(187, 8) = 256*82+80;
   P(187, 9) = 256*80+65;
   P(188, 0) = 256*67+128;
   P(188, 1) = 256*128+130;
   P(188, 2) = 256*130+129;
   P(188, 3) = 256*129+131;
   P(188, 4) = 256*131+134;
   P(188, 5) = 256*134+132;
   P(188, 6) = 256*132+71;
   P(188, 7) = 256*71+69;
   P(188, 8) = 256*69+70;
   P(188, 9) = 256*70+67;
   P(189, 0) = 256*67+128;
   P(189, 1) = 256*128+130;
   P(189, 2) = 256*130+129;
   P(189, 3) = 256*129+144;
   P(189, 4) = 256*144+83;
   P(189, 5) = 256*83+86;
   P(189, 6) = 256*86+84;
   P(189, 7) = 256*84+69;
   P(189, 8) = 256*69+70;
   P(189, 9) = 256*70+67;
   P(190, 0) = 256*67+128;
   P(190, 1) = 256*128+177;
   P(190, 2) = 256*177+179;
   P(190, 3) = 256*179+182;
   P(190, 4) = 256*182+181;
   P(190, 5) = 256*181+132;
   P(190, 6) = 256*132+71;
   P(190, 7) = 256*71+69;
   P(190, 8) = 256*69+70;
   P(190, 9) = 256*70+67;
   P(191, 0) = 256*67+128;
   P(191, 1) = 256*128+177;
   P(191, 2) = 256*177+179;
   P(191, 3) = 256*179+182;
   P(191, 4) = 256*182+180;
   P(191, 5) = 256*180+119;
   P(191, 6) = 256*119+117;
   P(191, 7) = 256*117+68;
   P(191, 8) = 256*68+70;
   P(191, 9) = 256*70+67;
   P(192, 0) = 256*67+128;
   P(192, 1) = 256*128+177;
   P(192, 2) = 256*177+178;
   P(192, 3) = 256*178+176;
   P(192, 4) = 256*176+115;
   P(192, 5) = 256*115+118;
   P(192, 6) = 256*118+117;
   P(192, 7) = 256*117+68;
   P(192, 8) = 256*68+70;
   P(192, 9) = 256*70+67;
   P(193, 0) = 256*68+70;
   P(193, 1) = 256*70+69;
   P(193, 2) = 256*69+71;
   P(193, 3) = 256*71+132;
   P(193, 4) = 256*132+181;
   P(193, 5) = 256*181+182;
   P(193, 6) = 256*182+180;
   P(193, 7) = 256*180+119;
   P(193, 8) = 256*119+117;
   P(193, 9) = 256*117+68;
   P(194, 0) = 256*68+70;
   P(194, 1) = 256*70+69;
   P(194, 2) = 256*69+71;
   P(194, 3) = 256*71+74;
   P(194, 4) = 256*74+72;
   P(194, 5) = 256*72+121;
   P(194, 6) = 256*121+122;
   P(194, 7) = 256*122+119;
   P(194, 8) = 256*119+117;
   P(194, 9) = 256*117+68;
   P(195, 0) = 256*69+71;
   P(195, 1) = 256*71+132;
   P(195, 2) = 256*132+134;
   P(195, 3) = 256*134+133;
   P(195, 4) = 256*133+148;
   P(195, 5) = 256*148+87;
   P(195, 6) = 256*87+85;
   P(195, 7) = 256*85+86;
   P(195, 8) = 256*86+84;
   P(195, 9) = 256*84+69;
   P(196, 0) = 256*69+71;
   P(196, 1) = 256*71+132;
   P(196, 2) = 256*132+134;
   P(196, 3) = 256*134+131;
   P(196, 4) = 256*131+129;
   P(196, 5) = 256*129+144;
   P(196, 6) = 256*144+83;
   P(196, 7) = 256*83+86;
   P(196, 8) = 256*86+84;
   P(196, 9) = 256*84+69;
   P(197, 0) = 256*69+71;
   P(197, 1) = 256*71+74;
   P(197, 2) = 256*74+73;
   P(197, 3) = 256*73+88;
   P(197, 4) = 256*88+90;
   P(197, 5) = 256*90+87;
   P(197, 6) = 256*87+85;
   P(197, 7) = 256*85+86;
   P(197, 8) = 256*86+84;
   P(197, 9) = 256*84+69;
   P(198, 0) = 256*71+132;
   P(198, 1) = 256*132+134;
   P(198, 2) = 256*134+133;
   P(198, 3) = 256*133+135;
   P(198, 4) = 256*135+138;
   P(198, 5) = 256*138+136;
   P(198, 6) = 256*136+75;
   P(198, 7) = 256*75+73;
   P(198, 8) = 256*73+74;
   P(198, 9) = 256*74+71;
   P(199, 0) = 256*71+132;
   P(199, 1) = 256*132+134;
   P(199, 2) = 256*134+133;
   P(199, 3) = 256*133+148;
   P(199, 4) = 256*148+87;
   P(199, 5) = 256*87+90;
   P(199, 6) = 256*90+88;
   P(199, 7) = 256*88+73;
   P(199, 8) = 256*73+74;
   P(199, 9) = 256*74+71;
   P(200, 0) = 256*71+132;
   P(200, 1) = 256*132+181;
   P(200, 2) = 256*181+183;
   P(200, 3) = 256*183+186;
   P(200, 4) = 256*186+185;
   P(200, 5) = 256*185+136;
   P(200, 6) = 256*136+75;
   P(200, 7) = 256*75+73;
   P(200, 8) = 256*73+74;
   P(200, 9) = 256*74+71;
   P(201, 0) = 256*71+132;
   P(201, 1) = 256*132+181;
   P(201, 2) = 256*181+183;
   P(201, 3) = 256*183+186;
   P(201, 4) = 256*186+184;
   P(201, 5) = 256*184+123;
   P(201, 6) = 256*123+121;
   P(201, 7) = 256*121+72;
   P(201, 8) = 256*72+74;
   P(201, 9) = 256*74+71;
   P(202, 0) = 256*71+132;
   P(202, 1) = 256*132+181;
   P(202, 2) = 256*181+182;
   P(202, 3) = 256*182+180;
   P(202, 4) = 256*180+119;
   P(202, 5) = 256*119+122;
   P(202, 6) = 256*122+121;
   P(202, 7) = 256*121+72;
   P(202, 8) = 256*72+74;
   P(202, 9) = 256*74+71;
   P(203, 0) = 256*72+74;
   P(203, 1) = 256*74+73;
   P(203, 2) = 256*73+75;
   P(203, 3) = 256*75+136;
   P(203, 4) = 256*136+185;
   P(203, 5) = 256*185+186;
   P(203, 6) = 256*186+184;
   P(203, 7) = 256*184+123;
   P(203, 8) = 256*123+121;
   P(203, 9) = 256*121+72;
   P(204, 0) = 256*72+74;
   P(204, 1) = 256*74+73;
   P(204, 2) = 256*73+75;
   P(204, 3) = 256*75+78;
   P(204, 4) = 256*78+76;
   P(204, 5) = 256*76+125;
   P(204, 6) = 256*125+126;
   P(204, 7) = 256*126+123;
   P(204, 8) = 256*123+121;
   P(204, 9) = 256*121+72;
   P(205, 0) = 256*73+75;
   P(205, 1) = 256*75+136;
   P(205, 2) = 256*136+138;
   P(205, 3) = 256*138+137;
   P(205, 4) = 256*137+152;
   P(205, 5) = 256*152+91;
   P(205, 6) = 256*91+89;
   P(205, 7) = 256*89+90;
   P(205, 8) = 256*90+88;
   P(205, 9) = 256*88+73;
   P(206, 0) = 256*73+75;
   P(206, 1) = 256*75+136;
   P(206, 2) = 256*136+138;
   P(206, 3) = 256*138+135;
   P(206, 4) = 256*135+133;
   P(206, 5) = 256*133+148;
   P(206, 6) = 256*148+87;
   P(206, 7) = 256*87+90;
   P(206, 8) = 256*90+88;
   P(206, 9) = 256*88+73;
   P(207, 0) = 256*73+75;
   P(207, 1) = 256*75+78;
   P(207, 2) = 256*78+77;
   P(207, 3) = 256*77+92;
   P(207, 4) = 256*92+94;
   P(207, 5) = 256*94+91;
   P(207, 6) = 256*91+89;
   P(207, 7) = 256*89+90;
   P(207, 8) = 256*90+88;
   P(207, 9) = 256*88+73;
   P(208, 0) = 256*75+136;
   P(208, 1) = 256*136+138;
   P(208, 2) = 256*138+137;
   P(208, 3) = 256*137+139;
   P(208, 4) = 256*139+142;
   P(208, 5) = 256*142+140;
   P(208, 6) = 256*140+79;
   P(208, 7) = 256*79+77;
   P(208, 8) = 256*77+78;
   P(208, 9) = 256*78+75;
   P(209, 0) = 256*75+136;
   P(209, 1) = 256*136+138;
   P(209, 2) = 256*138+137;
   P(209, 3) = 256*137+152;
   P(209, 4) = 256*152+91;
   P(209, 5) = 256*91+94;
   P(209, 6) = 256*94+92;
   P(209, 7) = 256*92+77;
   P(209, 8) = 256*77+78;
   P(209, 9) = 256*78+75;
   P(210, 0) = 256*75+136;
   P(210, 1) = 256*136+185;
   P(210, 2) = 256*185+187;
   P(210, 3) = 256*187+190;
   P(210, 4) = 256*190+189;
   P(210, 5) = 256*189+140;
   P(210, 6) = 256*140+79;
   P(210, 7) = 256*79+77;
   P(210, 8) = 256*77+78;
   P(210, 9) = 256*78+75;
   P(211, 0) = 256*75+136;
   P(211, 1) = 256*136+185;
   P(211, 2) = 256*185+187;
   P(211, 3) = 256*187+190;
   P(211, 4) = 256*190+188;
   P(211, 5) = 256*188+127;
   P(211, 6) = 256*127+125;
   P(211, 7) = 256*125+76;
   P(211, 8) = 256*76+78;
   P(211, 9) = 256*78+75;
   P(212, 0) = 256*75+136;
   P(212, 1) = 256*136+185;
   P(212, 2) = 256*185+186;
   P(212, 3) = 256*186+184;
   P(212, 4) = 256*184+123;
   P(212, 5) = 256*123+126;
   P(212, 6) = 256*126+125;
   P(212, 7) = 256*125+76;
   P(212, 8) = 256*76+78;
   P(212, 9) = 256*78+75;
   P(213, 0) = 256*76+78;
   P(213, 1) = 256*78+77;
   P(213, 2) = 256*77+79;
   P(213, 3) = 256*79+140;
   P(213, 4) = 256*140+189;
   P(213, 5) = 256*189+190;
   P(213, 6) = 256*190+188;
   P(213, 7) = 256*188+127;
   P(213, 8) = 256*127+125;
   P(213, 9) = 256*125+76;
   P(214, 0) = 256*77+79;
   P(214, 1) = 256*79+140;
   P(214, 2) = 256*140+142;
   P(214, 3) = 256*142+141;
   P(214, 4) = 256*141+156;
   P(214, 5) = 256*156+95;
   P(214, 6) = 256*95+93;
   P(214, 7) = 256*93+94;
   P(214, 8) = 256*94+92;
   P(214, 9) = 256*92+77;
   P(215, 0) = 256*77+79;
   P(215, 1) = 256*79+140;
   P(215, 2) = 256*140+142;
   P(215, 3) = 256*142+139;
   P(215, 4) = 256*139+137;
   P(215, 5) = 256*137+152;
   P(215, 6) = 256*152+91;
   P(215, 7) = 256*91+94;
   P(215, 8) = 256*94+92;
   P(215, 9) = 256*92+77;
   P(216, 0) = 256*81+83;
   P(216, 1) = 256*83+144;
   P(216, 2) = 256*144+146;
   P(216, 3) = 256*146+145;
   P(216, 4) = 256*145+160;
   P(216, 5) = 256*160+99;
   P(216, 6) = 256*99+97;
   P(216, 7) = 256*97+98;
   P(216, 8) = 256*98+96;
   P(216, 9) = 256*96+81;
   P(217, 0) = 256*81+83;
   P(217, 1) = 256*83+144;
   P(217, 2) = 256*144+146;
   P(217, 3) = 256*146+159;
   P(217, 4) = 256*159+157;
   P(217, 5) = 256*157+158;
   P(217, 6) = 256*158+156;
   P(217, 7) = 256*156+95;
   P(217, 8) = 256*95+82;
   P(217, 9) = 256*82+81;
   P(218, 0) = 256*81+83;
   P(218, 1) = 256*83+144;
   P(218, 2) = 256*144+146;
   P(218, 3) = 256*146+159;
   P(218, 4) = 256*159+157;
   P(218, 5) = 256*157+172;
   P(218, 6) = 256*172+111;
   P(218, 7) = 256*111+98;
   P(218, 8) = 256*98+96;
   P(218, 9) = 256*96+81;
   P(219, 0) = 256*81+83;
   P(219, 1) = 256*83+144;
   P(219, 2) = 256*144+129;
   P(219, 3) = 256*129+130;
   P(219, 4) = 256*130+143;
   P(219, 5) = 256*143+141;
   P(219, 6) = 256*141+156;
   P(219, 7) = 256*156+95;
   P(219, 8) = 256*95+82;
   P(219, 9) = 256*82+81;
   P(220, 0) = 256*81+83;
   P(220, 1) = 256*83+86;
   P(220, 2) = 256*86+85;
   P(220, 3) = 256*85+100;
   P(220, 4) = 256*100+102;
   P(220, 5) = 256*102+99;
   P(220, 6) = 256*99+97;
   P(220, 7) = 256*97+98;
   P(220, 8) = 256*98+96;
   P(220, 9) = 256*96+81;
   P(221, 0) = 256*81+82;
   P(221, 1) = 256*82+95;
   P(221, 2) = 256*95+93;
   P(221, 3) = 256*93+108;
   P(221, 4) = 256*108+110;
   P(221, 5) = 256*110+109;
   P(221, 6) = 256*109+111;
   P(221, 7) = 256*111+98;
   P(221, 8) = 256*98+96;
   P(221, 9) = 256*96+81;
   P(222, 0) = 256*81+82;
   P(222, 1) = 256*82+95;
   P(222, 2) = 256*95+156;
   P(222, 3) = 256*156+158;
   P(222, 4) = 256*158+157;
   P(222, 5) = 256*157+172;
   P(222, 6) = 256*172+111;
   P(222, 7) = 256*111+98;
   P(222, 8) = 256*98+96;
   P(222, 9) = 256*96+81;
   P(223, 0) = 256*83+144;
   P(223, 1) = 256*144+146;
   P(223, 2) = 256*146+145;
   P(223, 3) = 256*145+147;
   P(223, 4) = 256*147+150;
   P(223, 5) = 256*150+148;
   P(223, 6) = 256*148+87;
   P(223, 7) = 256*87+85;
   P(223, 8) = 256*85+86;
   P(223, 9) = 256*86+83;
   P(224, 0) = 256*83+144;
   P(224, 1) = 256*144+146;
   P(224, 2) = 256*146+145;
   P(224, 3) = 256*145+160;
   P(224, 4) = 256*160+99;
   P(224, 5) = 256*99+102;
   P(224, 6) = 256*102+100;
   P(224, 7) = 256*100+85;
   P(224, 8) = 256*85+86;
   P(224, 9) = 256*86+83;
   P(225, 0) = 256*83+144;
   P(225, 1) = 256*144+129;
   P(225, 2) = 256*129+131;
   P(225, 3) = 256*131+134;
   P(225, 4) = 256*134+133;
   P(225, 5) = 256*133+148;
   P(225, 6) = 256*148+87;
   P(225, 7) = 256*87+85;
   P(225, 8) = 256*85+86;
   P(225, 9) = 256*86+83;
   P(226, 0) = 256*85+87;
   P(226, 1) = 256*87+148;
   P(226, 2) = 256*148+150;
   P(226, 3) = 256*150+149;
   P(226, 4) = 256*149+164;
   P(226, 5) = 256*164+103;
   P(226, 6) = 256*103+101;
   P(226, 7) = 256*101+102;
   P(226, 8) = 256*102+100;
   P(226, 9) = 256*100+85;
   P(227, 0) = 256*85+87;
   P(227, 1) = 256*87+148;
   P(227, 2) = 256*148+150;
   P(227, 3) = 256*150+147;
   P(227, 4) = 256*147+145;
   P(227, 5) = 256*145+160;
   P(227, 6) = 256*160+99;
   P(227, 7) = 256*99+102;
   P(227, 8) = 256*102+100;
   P(227, 9) = 256*100+85;
   P(228, 0) = 256*85+87;
   P(228, 1) = 256*87+90;
   P(228, 2) = 256*90+89;
   P(228, 3) = 256*89+104;
   P(228, 4) = 256*104+106;
   P(228, 5) = 256*106+103;
   P(228, 6) = 256*103+101;
   P(228, 7) = 256*101+102;
   P(228, 8) = 256*102+100;
   P(228, 9) = 256*100+85;
   P(229, 0) = 256*87+148;
   P(229, 1) = 256*148+150;
   P(229, 2) = 256*150+149;
   P(229, 3) = 256*149+151;
   P(229, 4) = 256*151+154;
   P(229, 5) = 256*154+152;
   P(229, 6) = 256*152+91;
   P(229, 7) = 256*91+89;
   P(229, 8) = 256*89+90;
   P(229, 9) = 256*90+87;
   P(230, 0) = 256*87+148;
   P(230, 1) = 256*148+150;
   P(230, 2) = 256*150+149;
   P(230, 3) = 256*149+164;
   P(230, 4) = 256*164+103;
   P(230, 5) = 256*103+106;
   P(230, 6) = 256*106+104;
   P(230, 7) = 256*104+89;
   P(230, 8) = 256*89+90;
   P(230, 9) = 256*90+87;
   P(231, 0) = 256*87+148;
   P(231, 1) = 256*148+133;
   P(231, 2) = 256*133+135;
   P(231, 3) = 256*135+138;
   P(231, 4) = 256*138+137;
   P(231, 5) = 256*137+152;
   P(231, 6) = 256*152+91;
   P(231, 7) = 256*91+89;
   P(231, 8) = 256*89+90;
   P(231, 9) = 256*90+87;
   P(232, 0) = 256*89+91;
   P(232, 1) = 256*91+152;
   P(232, 2) = 256*152+154;
   P(232, 3) = 256*154+153;
   P(232, 4) = 256*153+168;
   P(232, 5) = 256*168+107;
   P(232, 6) = 256*107+105;
   P(232, 7) = 256*105+106;
   P(232, 8) = 256*106+104;
   P(232, 9) = 256*104+89;
   P(233, 0) = 256*89+91;
   P(233, 1) = 256*91+152;
   P(233, 2) = 256*152+154;
   P(233, 3) = 256*154+151;
   P(233, 4) = 256*151+149;
   P(233, 5) = 256*149+164;
   P(233, 6) = 256*164+103;
   P(233, 7) = 256*103+106;
   P(233, 8) = 256*106+104;
   P(233, 9) = 256*104+89;
   P(234, 0) = 256*89+91;
   P(234, 1) = 256*91+94;
   P(234, 2) = 256*94+93;
   P(234, 3) = 256*93+108;
   P(234, 4) = 256*108+110;
   P(234, 5) = 256*110+107;
   P(234, 6) = 256*107+105;
   P(234, 7) = 256*105+106;
   P(234, 8) = 256*106+104;
   P(234, 9) = 256*104+89;
   P(235, 0) = 256*91+152;
   P(235, 1) = 256*152+154;
   P(235, 2) = 256*154+153;
   P(235, 3) = 256*153+155;
   P(235, 4) = 256*155+158;
   P(235, 5) = 256*158+156;
   P(235, 6) = 256*156+95;
   P(235, 7) = 256*95+93;
   P(235, 8) = 256*93+94;
   P(235, 9) = 256*94+91;
   P(236, 0) = 256*91+152;
   P(236, 1) = 256*152+154;
   P(236, 2) = 256*154+153;
   P(236, 3) = 256*153+168;
   P(236, 4) = 256*168+107;
   P(236, 5) = 256*107+110;
   P(236, 6) = 256*110+108;
   P(236, 7) = 256*108+93;
   P(236, 8) = 256*93+94;
   P(236, 9) = 256*94+91;
   P(237, 0) = 256*91+152;
   P(237, 1) = 256*152+137;
   P(237, 2) = 256*137+139;
   P(237, 3) = 256*139+142;
   P(237, 4) = 256*142+141;
   P(237, 5) = 256*141+156;
   P(237, 6) = 256*156+95;
   P(237, 7) = 256*95+93;
   P(237, 8) = 256*93+94;
   P(237, 9) = 256*94+91;
   P(238, 0) = 256*93+95;
   P(238, 1) = 256*95+156;
   P(238, 2) = 256*156+158;
   P(238, 3) = 256*158+157;
   P(238, 4) = 256*157+172;
   P(238, 5) = 256*172+111;
   P(238, 6) = 256*111+109;
   P(238, 7) = 256*109+110;
   P(238, 8) = 256*110+108;
   P(238, 9) = 256*108+93;
   P(239, 0) = 256*93+95;
   P(239, 1) = 256*95+156;
   P(239, 2) = 256*156+158;
   P(239, 3) = 256*158+155;
   P(239, 4) = 256*155+153;
   P(239, 5) = 256*153+168;
   P(239, 6) = 256*168+107;
   P(239, 7) = 256*107+110;
   P(239, 8) = 256*110+108;
   P(239, 9) = 256*108+93;
   P(240, 0) = 256*97+99;
   P(240, 1) = 256*99+160;
   P(240, 2) = 256*160+162;
   P(240, 3) = 256*162+161;
   P(240, 4) = 256*161+176;
   P(240, 5) = 256*176+115;
   P(240, 6) = 256*115+113;
   P(240, 7) = 256*113+114;
   P(240, 8) = 256*114+112;
   P(240, 9) = 256*112+97;
   P(241, 0) = 256*97+99;
   P(241, 1) = 256*99+160;
   P(241, 2) = 256*160+162;
   P(241, 3) = 256*162+175;
   P(241, 4) = 256*175+173;
   P(241, 5) = 256*173+174;
   P(241, 6) = 256*174+172;
   P(241, 7) = 256*172+111;
   P(241, 8) = 256*111+98;
   P(241, 9) = 256*98+97;
   P(242, 0) = 256*97+99;
   P(242, 1) = 256*99+160;
   P(242, 2) = 256*160+162;
   P(242, 3) = 256*162+175;
   P(242, 4) = 256*175+173;
   P(242, 5) = 256*173+188;
   P(242, 6) = 256*188+127;
   P(242, 7) = 256*127+114;
   P(242, 8) = 256*114+112;
   P(242, 9) = 256*112+97;
   P(243, 0) = 256*97+99;
   P(243, 1) = 256*99+160;
   P(243, 2) = 256*160+145;
   P(243, 3) = 256*145+146;
   P(243, 4) = 256*146+159;
   P(243, 5) = 256*159+157;
   P(243, 6) = 256*157+172;
   P(243, 7) = 256*172+111;
   P(243, 8) = 256*111+98;
   P(243, 9) = 256*98+97;
   P(244, 0) = 256*97+99;
   P(244, 1) = 256*99+102;
   P(244, 2) = 256*102+101;
   P(244, 3) = 256*101+116;
   P(244, 4) = 256*116+118;
   P(244, 5) = 256*118+115;
   P(244, 6) = 256*115+113;
   P(244, 7) = 256*113+114;
   P(244, 8) = 256*114+112;
   P(244, 9) = 256*112+97;
   P(245, 0) = 256*97+98;
   P(245, 1) = 256*98+111;
   P(245, 2) = 256*111+109;
   P(245, 3) = 256*109+124;
   P(245, 4) = 256*124+126;
   P(245, 5) = 256*126+125;
   P(245, 6) = 256*125+127;
   P(245, 7) = 256*127+114;
   P(245, 8) = 256*114+112;
   P(245, 9) = 256*112+97;
   P(246, 0) = 256*97+98;
   P(246, 1) = 256*98+111;
   P(246, 2) = 256*111+172;
   P(246, 3) = 256*172+174;
   P(246, 4) = 256*174+173;
   P(246, 5) = 256*173+188;
   P(246, 6) = 256*188+127;
   P(246, 7) = 256*127+114;
   P(246, 8) = 256*114+112;
   P(246, 9) = 256*112+97;
   P(247, 0) = 256*99+160;
   P(247, 1) = 256*160+162;
   P(247, 2) = 256*162+161;
   P(247, 3) = 256*161+163;
   P(247, 4) = 256*163+166;
   P(247, 5) = 256*166+164;
   P(247, 6) = 256*164+103;
   P(247, 7) = 256*103+101;
   P(247, 8) = 256*101+102;
   P(247, 9) = 256*102+99;
   P(248, 0) = 256*99+160;
   P(248, 1) = 256*160+162;
   P(248, 2) = 256*162+161;
   P(248, 3) = 256*161+176;
   P(248, 4) = 256*176+115;
   P(248, 5) = 256*115+118;
   P(248, 6) = 256*118+116;
   P(248, 7) = 256*116+101;
   P(248, 8) = 256*101+102;
   P(248, 9) = 256*102+99;
   P(249, 0) = 256*99+160;
   P(249, 1) = 256*160+145;
   P(249, 2) = 256*145+147;
   P(249, 3) = 256*147+150;
   P(249, 4) = 256*150+149;
   P(249, 5) = 256*149+164;
   P(249, 6) = 256*164+103;
   P(249, 7) = 256*103+101;
   P(249, 8) = 256*101+102;
   P(249, 9) = 256*102+99;
   P(250, 0) = 256*101+103;
   P(250, 1) = 256*103+164;
   P(250, 2) = 256*164+166;
   P(250, 3) = 256*166+165;
   P(250, 4) = 256*165+180;
   P(250, 5) = 256*180+119;
   P(250, 6) = 256*119+117;
   P(250, 7) = 256*117+118;
   P(250, 8) = 256*118+116;
   P(250, 9) = 256*116+101;
   P(251, 0) = 256*101+103;
   P(251, 1) = 256*103+164;
   P(251, 2) = 256*164+166;
   P(251, 3) = 256*166+163;
   P(251, 4) = 256*163+161;
   P(251, 5) = 256*161+176;
   P(251, 6) = 256*176+115;
   P(251, 7) = 256*115+118;
   P(251, 8) = 256*118+116;
   P(251, 9) = 256*116+101;
   P(252, 0) = 256*101+103;
   P(252, 1) = 256*103+106;
   P(252, 2) = 256*106+105;
   P(252, 3) = 256*105+120;
   P(252, 4) = 256*120+122;
   P(252, 5) = 256*122+119;
   P(252, 6) = 256*119+117;
   P(252, 7) = 256*117+118;
   P(252, 8) = 256*118+116;
   P(252, 9) = 256*116+101;
   P(253, 0) = 256*103+164;
   P(253, 1) = 256*164+166;
   P(253, 2) = 256*166+165;
   P(253, 3) = 256*165+167;
   P(253, 4) = 256*167+170;
   P(253, 5) = 256*170+168;
   P(253, 6) = 256*168+107;
   P(253, 7) = 256*107+105;
   P(253, 8) = 256*105+106;
   P(253, 9) = 256*106+103;
   P(254, 0) = 256*103+164;
   P(254, 1) = 256*164+166;
   P(254, 2) = 256*166+165;
   P(254, 3) = 256*165+180;
   P(254, 4) = 256*180+119;
   P(254, 5) = 256*119+122;
   P(254, 6) = 256*122+120;
   P(254, 7) = 256*120+105;
   P(254, 8) = 256*105+106;
   P(254, 9) = 256*106+103;
   P(255, 0) = 256*103+164;
   P(255, 1) = 256*164+149;
   P(255, 2) = 256*149+151;
   P(255, 3) = 256*151+154;
   P(255, 4) = 256*154+153;
   P(255, 5) = 256*153+168;
   P(255, 6) = 256*168+107;
   P(255, 7) = 256*107+105;
   P(255, 8) = 256*105+106;
   P(255, 9) = 256*106+103;
   P(256, 0) = 256*105+107;
   P(256, 1) = 256*107+168;
   P(256, 2) = 256*168+170;
   P(256, 3) = 256*170+169;
   P(256, 4) = 256*169+184;
   P(256, 5) = 256*184+123;
   P(256, 6) = 256*123+121;
   P(256, 7) = 256*121+122;
   P(256, 8) = 256*122+120;
   P(256, 9) = 256*120+105;
   P(257, 0) = 256*105+107;
   P(257, 1) = 256*107+168;
   P(257, 2) = 256*168+170;
   P(257, 3) = 256*170+167;
   P(257, 4) = 256*167+165;
   P(257, 5) = 256*165+180;
   P(257, 6) = 256*180+119;
   P(257, 7) = 256*119+122;
   P(257, 8) = 256*122+120;
   P(257, 9) = 256*120+105;
   P(258, 0) = 256*105+107;
   P(258, 1) = 256*107+110;
   P(258, 2) = 256*110+109;
   P(258, 3) = 256*109+124;
   P(258, 4) = 256*124+126;
   P(258, 5) = 256*126+123;
   P(258, 6) = 256*123+121;
   P(258, 7) = 256*121+122;
   P(258, 8) = 256*122+120;
   P(258, 9) = 256*120+105;
   P(259, 0) = 256*107+168;
   P(259, 1) = 256*168+170;
   P(259, 2) = 256*170+169;
   P(259, 3) = 256*169+171;
   P(259, 4) = 256*171+174;
   P(259, 5) = 256*174+172;
   P(259, 6) = 256*172+111;
   P(259, 7) = 256*111+109;
   P(259, 8) = 256*109+110;
   P(259, 9) = 256*110+107;
   P(260, 0) = 256*107+168;
   P(260, 1) = 256*168+170;
   P(260, 2) = 256*170+169;
   P(260, 3) = 256*169+184;
   P(260, 4) = 256*184+123;
   P(260, 5) = 256*123+126;
   P(260, 6) = 256*126+124;
   P(260, 7) = 256*124+109;
   P(260, 8) = 256*109+110;
   P(260, 9) = 256*110+107;
   P(261, 0) = 256*107+168;
   P(261, 1) = 256*168+153;
   P(261, 2) = 256*153+155;
   P(261, 3) = 256*155+158;
   P(261, 4) = 256*158+157;
   P(261, 5) = 256*157+172;
   P(261, 6) = 256*172+111;
   P(261, 7) = 256*111+109;
   P(261, 8) = 256*109+110;
   P(261, 9) = 256*110+107;
   P(262, 0) = 256*109+111;
   P(262, 1) = 256*111+172;
   P(262, 2) = 256*172+174;
   P(262, 3) = 256*174+173;
   P(262, 4) = 256*173+188;
   P(262, 5) = 256*188+127;
   P(262, 6) = 256*127+125;
   P(262, 7) = 256*125+126;
   P(262, 8) = 256*126+124;
   P(262, 9) = 256*124+109;
   P(263, 0) = 256*109+111;
   P(263, 1) = 256*111+172;
   P(263, 2) = 256*172+174;
   P(263, 3) = 256*174+171;
   P(263, 4) = 256*171+169;
   P(263, 5) = 256*169+184;
   P(263, 6) = 256*184+123;
   P(263, 7) = 256*123+126;
   P(263, 8) = 256*126+124;
   P(263, 9) = 256*124+109;
   P(264, 0) = 256*113+115;
   P(264, 1) = 256*115+176;
   P(264, 2) = 256*176+178;
   P(264, 3) = 256*178+191;
   P(264, 4) = 256*191+189;
   P(264, 5) = 256*189+190;
   P(264, 6) = 256*190+188;
   P(264, 7) = 256*188+127;
   P(264, 8) = 256*127+114;
   P(264, 9) = 256*114+113;
   P(265, 0) = 256*113+115;
   P(265, 1) = 256*115+176;
   P(265, 2) = 256*176+161;
   P(265, 3) = 256*161+162;
   P(265, 4) = 256*162+175;
   P(265, 5) = 256*175+173;
   P(265, 6) = 256*173+188;
   P(265, 7) = 256*188+127;
   P(265, 8) = 256*127+114;
   P(265, 9) = 256*114+113;
   P(266, 0) = 256*115+176;
   P(266, 1) = 256*176+178;
   P(266, 2) = 256*178+177;
   P(266, 3) = 256*177+179;
   P(266, 4) = 256*179+182;
   P(266, 5) = 256*182+180;
   P(266, 6) = 256*180+119;
   P(266, 7) = 256*119+117;
   P(266, 8) = 256*117+118;
   P(266, 9) = 256*118+115;
   P(267, 0) = 256*115+176;
   P(267, 1) = 256*176+161;
   P(267, 2) = 256*161+163;
   P(267, 3) = 256*163+166;
   P(267, 4) = 256*166+165;
   P(267, 5) = 256*165+180;
   P(267, 6) = 256*180+119;
   P(267, 7) = 256*119+117;
   P(267, 8) = 256*117+118;
   P(267, 9) = 256*118+115;
   P(268, 0) = 256*119+180;
   P(268, 1) = 256*180+182;
   P(268, 2) = 256*182+181;
   P(268, 3) = 256*181+183;
   P(268, 4) = 256*183+186;
   P(268, 5) = 256*186+184;
   P(268, 6) = 256*184+123;
   P(268, 7) = 256*123+121;
   P(268, 8) = 256*121+122;
   P(268, 9) = 256*122+119;
   P(269, 0) = 256*119+180;
   P(269, 1) = 256*180+165;
   P(269, 2) = 256*165+167;
   P(269, 3) = 256*167+170;
   P(269, 4) = 256*170+169;
   P(269, 5) = 256*169+184;
   P(269, 6) = 256*184+123;
   P(269, 7) = 256*123+121;
   P(269, 8) = 256*121+122;
   P(269, 9) = 256*122+119;
   P(270, 0) = 256*123+184;
   P(270, 1) = 256*184+186;
   P(270, 2) = 256*186+185;
   P(270, 3) = 256*185+187;
   P(270, 4) = 256*187+190;
   P(270, 5) = 256*190+188;
   P(270, 6) = 256*188+127;
   P(270, 7) = 256*127+125;
   P(270, 8) = 256*125+126;
   P(270, 9) = 256*126+123;
   P(271, 0) = 256*123+184;
   P(271, 1) = 256*184+169;
   P(271, 2) = 256*169+171;
   P(271, 3) = 256*171+174;
   P(271, 4) = 256*174+173;
   P(271, 5) = 256*173+188;
   P(271, 6) = 256*188+127;
   P(271, 7) = 256*127+125;
   P(271, 8) = 256*125+126;
   P(271, 9) = 256*126+123;
   P(272, 0) = 256*128+130;
   P(272, 1) = 256*130+129;
   P(272, 2) = 256*129+131;
   P(272, 3) = 256*131+192;
   P(272, 4) = 256*192+241;
   P(272, 5) = 256*241+242;
   P(272, 6) = 256*242+240;
   P(272, 7) = 256*240+179;
   P(272, 8) = 256*179+177;
   P(272, 9) = 256*177+128;
   P(273, 0) = 256*128+130;
   P(273, 1) = 256*130+129;
   P(273, 2) = 256*129+131;
   P(273, 3) = 256*131+134;
   P(273, 4) = 256*134+132;
   P(273, 5) = 256*132+181;
   P(273, 6) = 256*181+182;
   P(273, 7) = 256*182+179;
   P(273, 8) = 256*179+177;
   P(273, 9) = 256*177+128;
   P(274, 0) = 256*128+130;
   P(274, 1) = 256*130+143;
   P(274, 2) = 256*143+141;
   P(274, 3) = 256*141+142;
   P(274, 4) = 256*142+140;
   P(274, 5) = 256*140+189;
   P(274, 6) = 256*189+191;
   P(274, 7) = 256*191+178;
   P(274, 8) = 256*178+177;
   P(274, 9) = 256*177+128;
   P(275, 0) = 256*128+130;
   P(275, 1) = 256*130+143;
   P(275, 2) = 256*143+204;
   P(275, 3) = 256*204+253;
   P(275, 4) = 256*253+255;
   P(275, 5) = 256*255+242;
   P(275, 6) = 256*242+240;
   P(275, 7) = 256*240+179;
   P(275, 8) = 256*179+177;
   P(275, 9) = 256*177+128;
   P(276, 0) = 256*128+130;
   P(276, 1) = 256*130+143;
   P(276, 2) = 256*143+204;
   P(276, 3) = 256*204+253;
   P(276, 4) = 256*253+254;
   P(276, 5) = 256*254+252;
   P(276, 6) = 256*252+191;
   P(276, 7) = 256*191+178;
   P(276, 8) = 256*178+177;
   P(276, 9) = 256*177+128;
   P(277, 0) = 256*129+131;
   P(277, 1) = 256*131+192;
   P(277, 2) = 256*192+194;
   P(277, 3) = 256*194+193;
   P(277, 4) = 256*193+208;
   P(277, 5) = 256*208+147;
   P(277, 6) = 256*147+145;
   P(277, 7) = 256*145+146;
   P(277, 8) = 256*146+144;
   P(277, 9) = 256*144+129;
   P(278, 0) = 256*129+131;
   P(278, 1) = 256*131+192;
   P(278, 2) = 256*192+194;
   P(278, 3) = 256*194+207;
   P(278, 4) = 256*207+205;
   P(278, 5) = 256*205+206;
   P(278, 6) = 256*206+204;
   P(278, 7) = 256*204+143;
   P(278, 8) = 256*143+130;
   P(278, 9) = 256*130+129;
   P(279, 0) = 256*129+131;
   P(279, 1) = 256*131+192;
   P(279, 2) = 256*192+194;
   P(279, 3) = 256*194+207;
   P(279, 4) = 256*207+205;
   P(279, 5) = 256*205+220;
   P(279, 6) = 256*220+159;
   P(279, 7) = 256*159+146;
   P(279, 8) = 256*146+144;
   P(279, 9) = 256*144+129;
   P(280, 0) = 256*129+131;
   P(280, 1) = 256*131+192;
   P(280, 2) = 256*192+241;
   P(280, 3) = 256*241+242;
   P(280, 4) = 256*242+255;
   P(280, 5) = 256*255+253;
   P(280, 6) = 256*253+204;
   P(280, 7) = 256*204+143;
   P(280, 8) = 256*143+130;
   P(280, 9) = 256*130+129;
   P(281, 0) = 256*129+131;
   P(281, 1) = 256*131+134;
   P(281, 2) = 256*134+133;
   P(281, 3) = 256*133+148;
   P(281, 4) = 256*148+150;
   P(281, 5) = 256*150+147;
   P(281, 6) = 256*147+145;
   P(281, 7) = 256*145+146;
   P(281, 8) = 256*146+144;
   P(281, 9) = 256*144+129;
   P(282, 0) = 256*129+130;
   P(282, 1) = 256*130+143;
   P(282, 2) = 256*143+141;
   P(282, 3) = 256*141+156;
   P(282, 4) = 256*156+158;
   P(282, 5) = 256*158+157;
   P(282, 6) = 256*157+159;
   P(282, 7) = 256*159+146;
   P(282, 8) = 256*146+144;
   P(282, 9) = 256*144+129;
   P(283, 0) = 256*129+130;
   P(283, 1) = 256*130+143;
   P(283, 2) = 256*143+204;
   P(283, 3) = 256*204+206;
   P(283, 4) = 256*206+205;
   P(283, 5) = 256*205+220;
   P(283, 6) = 256*220+159;
   P(283, 7) = 256*159+146;
   P(283, 8) = 256*146+144;
   P(283, 9) = 256*144+129;
   P(284, 0) = 256*131+192;
   P(284, 1) = 256*192+194;
   P(284, 2) = 256*194+193;
   P(284, 3) = 256*193+195;
   P(284, 4) = 256*195+198;
   P(284, 5) = 256*198+196;
   P(284, 6) = 256*196+135;
   P(284, 7) = 256*135+133;
   P(284, 8) = 256*133+134;
   P(284, 9) = 256*134+131;
   P(285, 0) = 256*131+192;
   P(285, 1) = 256*192+194;
   P(285, 2) = 256*194+193;
   P(285, 3) = 256*193+208;
   P(285, 4) = 256*208+147;
   P(285, 5) = 256*147+150;
   P(285, 6) = 256*150+148;
   P(285, 7) = 256*148+133;
   P(285, 8) = 256*133+134;
   P(285, 9) = 256*134+131;
   P(286, 0) = 256*131+192;
   P(286, 1) = 256*192+241;
   P(286, 2) = 256*241+243;
   P(286, 3) = 256*243+246;
   P(286, 4) = 256*246+245;
   P(286, 5) = 256*245+196;
   P(286, 6) = 256*196+135;
   P(286, 7) = 256*135+133;
   P(286, 8) = 256*133+134;
   P(286, 9) = 256*134+131;
   P(287, 0) = 256*131+192;
   P(287, 1) = 256*192+241;
   P(287, 2) = 256*241+243;
   P(287, 3) = 256*243+246;
   P(287, 4) = 256*246+244;
   P(287, 5) = 256*244+183;
   P(287, 6) = 256*183+181;
   P(287, 7) = 256*181+132;
   P(287, 8) = 256*132+134;
   P(287, 9) = 256*134+131;
   P(288, 0) = 256*131+192;
   P(288, 1) = 256*192+241;
   P(288, 2) = 256*241+242;
   P(288, 3) = 256*242+240;
   P(288, 4) = 256*240+179;
   P(288, 5) = 256*179+182;
   P(288, 6) = 256*182+181;
   P(288, 7) = 256*181+132;
   P(288, 8) = 256*132+134;
   P(288, 9) = 256*134+131;
   P(289, 0) = 256*132+134;
   P(289, 1) = 256*134+133;
   P(289, 2) = 256*133+135;
   P(289, 3) = 256*135+196;
   P(289, 4) = 256*196+245;
   P(289, 5) = 256*245+246;
   P(289, 6) = 256*246+244;
   P(289, 7) = 256*244+183;
   P(289, 8) = 256*183+181;
   P(289, 9) = 256*181+132;
   P(290, 0) = 256*132+134;
   P(290, 1) = 256*134+133;
   P(290, 2) = 256*133+135;
   P(290, 3) = 256*135+138;
   P(290, 4) = 256*138+136;
   P(290, 5) = 256*136+185;
   P(290, 6) = 256*185+186;
   P(290, 7) = 256*186+183;
   P(290, 8) = 256*183+181;
   P(290, 9) = 256*181+132;
   P(291, 0) = 256*133+135;
   P(291, 1) = 256*135+196;
   P(291, 2) = 256*196+198;
   P(291, 3) = 256*198+197;
   P(291, 4) = 256*197+212;
   P(291, 5) = 256*212+151;
   P(291, 6) = 256*151+149;
   P(291, 7) = 256*149+150;
   P(291, 8) = 256*150+148;
   P(291, 9) = 256*148+133;
   P(292, 0) = 256*133+135;
   P(292, 1) = 256*135+196;
   P(292, 2) = 256*196+198;
   P(292, 3) = 256*198+195;
   P(292, 4) = 256*195+193;
   P(292, 5) = 256*193+208;
   P(292, 6) = 256*208+147;
   P(292, 7) = 256*147+150;
   P(292, 8) = 256*150+148;
   P(292, 9) = 256*148+133;
   P(293, 0) = 256*133+135;
   P(293, 1) = 256*135+138;
   P(293, 2) = 256*138+137;
   P(293, 3) = 256*137+152;
   P(293, 4) = 256*152+154;
   P(293, 5) = 256*154+151;
   P(293, 6) = 256*151+149;
   P(293, 7) = 256*149+150;
   P(293, 8) = 256*150+148;
   P(293, 9) = 256*148+133;
   P(294, 0) = 256*135+196;
   P(294, 1) = 256*196+198;
   P(294, 2) = 256*198+197;
   P(294, 3) = 256*197+199;
   P(294, 4) = 256*199+202;
   P(294, 5) = 256*202+200;
   P(294, 6) = 256*200+139;
   P(294, 7) = 256*139+137;
   P(294, 8) = 256*137+138;
   P(294, 9) = 256*138+135;
   P(295, 0) = 256*135+196;
   P(295, 1) = 256*196+198;
   P(295, 2) = 256*198+197;
   P(295, 3) = 256*197+212;
   P(295, 4) = 256*212+151;
   P(295, 5) = 256*151+154;
   P(295, 6) = 256*154+152;
   P(295, 7) = 256*152+137;
   P(295, 8) = 256*137+138;
   P(295, 9) = 256*138+135;
   P(296, 0) = 256*135+196;
   P(296, 1) = 256*196+245;
   P(296, 2) = 256*245+247;
   P(296, 3) = 256*247+250;
   P(296, 4) = 256*250+249;
   P(296, 5) = 256*249+200;
   P(296, 6) = 256*200+139;
   P(296, 7) = 256*139+137;
   P(296, 8) = 256*137+138;
   P(296, 9) = 256*138+135;
   P(297, 0) = 256*135+196;
   P(297, 1) = 256*196+245;
   P(297, 2) = 256*245+247;
   P(297, 3) = 256*247+250;
   P(297, 4) = 256*250+248;
   P(297, 5) = 256*248+187;
   P(297, 6) = 256*187+185;
   P(297, 7) = 256*185+136;
   P(297, 8) = 256*136+138;
   P(297, 9) = 256*138+135;
   P(298, 0) = 256*135+196;
   P(298, 1) = 256*196+245;
   P(298, 2) = 256*245+246;
   P(298, 3) = 256*246+244;
   P(298, 4) = 256*244+183;
   P(298, 5) = 256*183+186;
   P(298, 6) = 256*186+185;
   P(298, 7) = 256*185+136;
   P(298, 8) = 256*136+138;
   P(298, 9) = 256*138+135;
   P(299, 0) = 256*136+138;
   P(299, 1) = 256*138+137;
   P(299, 2) = 256*137+139;
   P(299, 3) = 256*139+200;
   P(299, 4) = 256*200+249;
   P(299, 5) = 256*249+250;
   P(299, 6) = 256*250+248;
   P(299, 7) = 256*248+187;
   P(299, 8) = 256*187+185;
   P(299, 9) = 256*185+136;
   P(300, 0) = 256*136+138;
   P(300, 1) = 256*138+137;
   P(300, 2) = 256*137+139;
   P(300, 3) = 256*139+142;
   P(300, 4) = 256*142+140;
   P(300, 5) = 256*140+189;
   P(300, 6) = 256*189+190;
   P(300, 7) = 256*190+187;
   P(300, 8) = 256*187+185;
   P(300, 9) = 256*185+136;
   P(301, 0) = 256*137+139;
   P(301, 1) = 256*139+200;
   P(301, 2) = 256*200+202;
   P(301, 3) = 256*202+201;
   P(301, 4) = 256*201+216;
   P(301, 5) = 256*216+155;
   P(301, 6) = 256*155+153;
   P(301, 7) = 256*153+154;
   P(301, 8) = 256*154+152;
   P(301, 9) = 256*152+137;
   P(302, 0) = 256*137+139;
   P(302, 1) = 256*139+200;
   P(302, 2) = 256*200+202;
   P(302, 3) = 256*202+199;
   P(302, 4) = 256*199+197;
   P(302, 5) = 256*197+212;
   P(302, 6) = 256*212+151;
   P(302, 7) = 256*151+154;
   P(302, 8) = 256*154+152;
   P(302, 9) = 256*152+137;
   P(303, 0) = 256*137+139;
   P(303, 1) = 256*139+142;
   P(303, 2) = 256*142+141;
   P(303, 3) = 256*141+156;
   P(303, 4) = 256*156+158;
   P(303, 5) = 256*158+155;
   P(303, 6) = 256*155+153;
   P(303, 7) = 256*153+154;
   P(303, 8) = 256*154+152;
   P(303, 9) = 256*152+137;
   P(304, 0) = 256*139+200;
   P(304, 1) = 256*200+202;
   P(304, 2) = 256*202+201;
   P(304, 3) = 256*201+203;
   P(304, 4) = 256*203+206;
   P(304, 5) = 256*206+204;
   P(304, 6) = 256*204+143;
   P(304, 7) = 256*143+141;
   P(304, 8) = 256*141+142;
   P(304, 9) = 256*142+139;
   P(305, 0) = 256*139+200;
   P(305, 1) = 256*200+202;
   P(305, 2) = 256*202+201;
   P(305, 3) = 256*201+216;
   P(305, 4) = 256*216+155;
   P(305, 5) = 256*155+158;
   P(305, 6) = 256*158+156;
   P(305, 7) = 256*156+141;
   P(305, 8) = 256*141+142;
   P(305, 9) = 256*142+139;
   P(306, 0) = 256*139+200;
   P(306, 1) = 256*200+249;
   P(306, 2) = 256*249+251;
   P(306, 3) = 256*251+254;
   P(306, 4) = 256*254+253;
   P(306, 5) = 256*253+204;
   P(306, 6) = 256*204+143;
   P(306, 7) = 256*143+141;
   P(306, 8) = 256*141+142;
   P(306, 9) = 256*142+139;
   P(307, 0) = 256*139+200;
   P(307, 1) = 256*200+249;
   P(307, 2) = 256*249+251;
   P(307, 3) = 256*251+254;
   P(307, 4) = 256*254+252;
   P(307, 5) = 256*252+191;
   P(307, 6) = 256*191+189;
   P(307, 7) = 256*189+140;
   P(307, 8) = 256*140+142;
   P(307, 9) = 256*142+139;
   P(308, 0) = 256*139+200;
   P(308, 1) = 256*200+249;
   P(308, 2) = 256*249+250;
   P(308, 3) = 256*250+248;
   P(308, 4) = 256*248+187;
   P(308, 5) = 256*187+190;
   P(308, 6) = 256*190+189;
   P(308, 7) = 256*189+140;
   P(308, 8) = 256*140+142;
   P(308, 9) = 256*142+139;
   P(309, 0) = 256*140+142;
   P(309, 1) = 256*142+141;
   P(309, 2) = 256*141+143;
   P(309, 3) = 256*143+204;
   P(309, 4) = 256*204+253;
   P(309, 5) = 256*253+254;
   P(309, 6) = 256*254+252;
   P(309, 7) = 256*252+191;
   P(309, 8) = 256*191+189;
   P(309, 9) = 256*189+140;
   P(310, 0) = 256*141+143;
   P(310, 1) = 256*143+204;
   P(310, 2) = 256*204+206;
   P(310, 3) = 256*206+205;
   P(310, 4) = 256*205+220;
   P(310, 5) = 256*220+159;
   P(310, 6) = 256*159+157;
   P(310, 7) = 256*157+158;
   P(310, 8) = 256*158+156;
   P(310, 9) = 256*156+141;
   P(311, 0) = 256*141+143;
   P(311, 1) = 256*143+204;
   P(311, 2) = 256*204+206;
   P(311, 3) = 256*206+203;
   P(311, 4) = 256*203+201;
   P(311, 5) = 256*201+216;
   P(311, 6) = 256*216+155;
   P(311, 7) = 256*155+158;
   P(311, 8) = 256*158+156;
   P(311, 9) = 256*156+141;
   P(312, 0) = 256*145+147;
   P(312, 1) = 256*147+208;
   P(312, 2) = 256*208+210;
   P(312, 3) = 256*210+209;
   P(312, 4) = 256*209+224;
   P(312, 5) = 256*224+163;
   P(312, 6) = 256*163+161;
   P(312, 7) = 256*161+162;
   P(312, 8) = 256*162+160;
   P(312, 9) = 256*160+145;
   P(313, 0) = 256*145+147;
   P(313, 1) = 256*147+208;
   P(313, 2) = 256*208+210;
   P(313, 3) = 256*210+223;
   P(313, 4) = 256*223+221;
   P(313, 5) = 256*221+222;
   P(313, 6) = 256*222+220;
   P(313, 7) = 256*220+159;
   P(313, 8) = 256*159+146;
   P(313, 9) = 256*146+145;
   P(314, 0) = 256*145+147;
   P(314, 1) = 256*147+208;
   P(314, 2) = 256*208+210;
   P(314, 3) = 256*210+223;
   P(314, 4) = 256*223+221;
   P(314, 5) = 256*221+236;
   P(314, 6) = 256*236+175;
   P(314, 7) = 256*175+162;
   P(314, 8) = 256*162+160;
   P(314, 9) = 256*160+145;
   P(315, 0) = 256*145+147;
   P(315, 1) = 256*147+208;
   P(315, 2) = 256*208+193;
   P(315, 3) = 256*193+194;
   P(315, 4) = 256*194+207;
   P(315, 5) = 256*207+205;
   P(315, 6) = 256*205+220;
   P(315, 7) = 256*220+159;
   P(315, 8) = 256*159+146;
   P(315, 9) = 256*146+145;
   P(316, 0) = 256*145+147;
   P(316, 1) = 256*147+150;
   P(316, 2) = 256*150+149;
   P(316, 3) = 256*149+164;
   P(316, 4) = 256*164+166;
   P(316, 5) = 256*166+163;
   P(316, 6) = 256*163+161;
   P(316, 7) = 256*161+162;
   P(316, 8) = 256*162+160;
   P(316, 9) = 256*160+145;
   P(317, 0) = 256*145+146;
   P(317, 1) = 256*146+159;
   P(317, 2) = 256*159+157;
   P(317, 3) = 256*157+172;
   P(317, 4) = 256*172+174;
   P(317, 5) = 256*174+173;
   P(317, 6) = 256*173+175;
   P(317, 7) = 256*175+162;
   P(317, 8) = 256*162+160;
   P(317, 9) = 256*160+145;
   P(318, 0) = 256*145+146;
   P(318, 1) = 256*146+159;
   P(318, 2) = 256*159+220;
   P(318, 3) = 256*220+222;
   P(318, 4) = 256*222+221;
   P(318, 5) = 256*221+236;
   P(318, 6) = 256*236+175;
   P(318, 7) = 256*175+162;
   P(318, 8) = 256*162+160;
   P(318, 9) = 256*160+145;
   P(319, 0) = 256*147+208;
   P(319, 1) = 256*208+210;
   P(319, 2) = 256*210+209;
   P(319, 3) = 256*209+211;
   P(319, 4) = 256*211+214;
   P(319, 5) = 256*214+212;
   P(319, 6) = 256*212+151;
   P(319, 7) = 256*151+149;
   P(319, 8) = 256*149+150;
   P(319, 9) = 256*150+147;
   P(320, 0) = 256*147+208;
   P(320, 1) = 256*208+210;
   P(320, 2) = 256*210+209;
   P(320, 3) = 256*209+224;
   P(320, 4) = 256*224+163;
   P(320, 5) = 256*163+166;
   P(320, 6) = 256*166+164;
   P(320, 7) = 256*164+149;
   P(320, 8) = 256*149+150;
   P(320, 9) = 256*150+147;
   P(321, 0) = 256*147+208;
   P(321, 1) = 256*208+193;
   P(321, 2) = 256*193+195;
   P(321, 3) = 256*195+198;
   P(321, 4) = 256*198+197;
   P(321, 5) = 256*197+212;
   P(321, 6) = 256*212+151;
   P(321, 7) = 256*151+149;
   P(321, 8) = 256*149+150;
   P(321, 9) = 256*150+147;
   P(322, 0) = 256*149+151;
   P(322, 1) = 256*151+212;
   P(322, 2) = 256*212+214;
   P(322, 3) = 256*214+213;
   P(322, 4) = 256*213+228;
   P(322, 5) = 256*228+167;
   P(322, 6) = 256*167+165;
   P(322, 7) = 256*165+166;
   P(322, 8) = 256*166+164;
   P(322, 9) = 256*164+149;
   P(323, 0) = 256*149+151;
   P(323, 1) = 256*151+212;
   P(323, 2) = 256*212+214;
   P(323, 3) = 256*214+211;
   P(323, 4) = 256*211+209;
   P(323, 5) = 256*209+224;
   P(323, 6) = 256*224+163;
   P(323, 7) = 256*163+166;
   P(323, 8) = 256*166+164;
   P(323, 9) = 256*164+149;
   P(324, 0) = 256*149+151;
   P(324, 1) = 256*151+154;
   P(324, 2) = 256*154+153;
   P(324, 3) = 256*153+168;
   P(324, 4) = 256*168+170;
   P(324, 5) = 256*170+167;
   P(324, 6) = 256*167+165;
   P(324, 7) = 256*165+166;
   P(324, 8) = 256*166+164;
   P(324, 9) = 256*164+149;
   P(325, 0) = 256*151+212;
   P(325, 1) = 256*212+214;
   P(325, 2) = 256*214+213;
   P(325, 3) = 256*213+215;
   P(325, 4) = 256*215+218;
   P(325, 5) = 256*218+216;
   P(325, 6) = 256*216+155;
   P(325, 7) = 256*155+153;
   P(325, 8) = 256*153+154;
   P(325, 9) = 256*154+151;
   P(326, 0) = 256*151+212;
   P(326, 1) = 256*212+214;
   P(326, 2) = 256*214+213;
   P(326, 3) = 256*213+228;
   P(326, 4) = 256*228+167;
   P(326, 5) = 256*167+170;
   P(326, 6) = 256*170+168;
   P(326, 7) = 256*168+153;
   P(326, 8) = 256*153+154;
   P(326, 9) = 256*154+151;
   P(327, 0) = 256*151+212;
   P(327, 1) = 256*212+197;
   P(327, 2) = 256*197+199;
   P(327, 3) = 256*199+202;
   P(327, 4) = 256*202+201;
   P(327, 5) = 256*201+216;
   P(327, 6) = 256*216+155;
   P(327, 7) = 256*155+153;
   P(327, 8) = 256*153+154;
   P(327, 9) = 256*154+151;
   P(328, 0) = 256*153+155;
   P(328, 1) = 256*155+216;
   P(328, 2) = 256*216+218;
   P(328, 3) = 256*218+217;
   P(328, 4) = 256*217+232;
   P(328, 5) = 256*232+171;
   P(328, 6) = 256*171+169;
   P(328, 7) = 256*169+170;
   P(328, 8) = 256*170+168;
   P(328, 9) = 256*168+153;
   P(329, 0) = 256*153+155;
   P(329, 1) = 256*155+216;
   P(329, 2) = 256*216+218;
   P(329, 3) = 256*218+215;
   P(329, 4) = 256*215+213;
   P(329, 5) = 256*213+228;
   P(329, 6) = 256*228+167;
   P(329, 7) = 256*167+170;
   P(329, 8) = 256*170+168;
   P(329, 9) = 256*168+153;
   P(330, 0) = 256*153+155;
   P(330, 1) = 256*155+158;
   P(330, 2) = 256*158+157;
   P(330, 3) = 256*157+172;
   P(330, 4) = 256*172+174;
   P(330, 5) = 256*174+171;
   P(330, 6) = 256*171+169;
   P(330, 7) = 256*169+170;
   P(330, 8) = 256*170+168;
   P(330, 9) = 256*168+153;
   P(331, 0) = 256*155+216;
   P(331, 1) = 256*216+218;
   P(331, 2) = 256*218+217;
   P(331, 3) = 256*217+219;
   P(331, 4) = 256*219+222;
   P(331, 5) = 256*222+220;
   P(331, 6) = 256*220+159;
   P(331, 7) = 256*159+157;
   P(331, 8) = 256*157+158;
   P(331, 9) = 256*158+155;
   P(332, 0) = 256*155+216;
   P(332, 1) = 256*216+218;
   P(332, 2) = 256*218+217;
   P(332, 3) = 256*217+232;
   P(332, 4) = 256*232+171;
   P(332, 5) = 256*171+174;
   P(332, 6) = 256*174+172;
   P(332, 7) = 256*172+157;
   P(332, 8) = 256*157+158;
   P(332, 9) = 256*158+155;
   P(333, 0) = 256*155+216;
   P(333, 1) = 256*216+201;
   P(333, 2) = 256*201+203;
   P(333, 3) = 256*203+206;
   P(333, 4) = 256*206+205;
   P(333, 5) = 256*205+220;
   P(333, 6) = 256*220+159;
   P(333, 7) = 256*159+157;
   P(333, 8) = 256*157+158;
   P(333, 9) = 256*158+155;
   P(334, 0) = 256*157+159;
   P(334, 1) = 256*159+220;
   P(334, 2) = 256*220+222;
   P(334, 3) = 256*222+221;
   P(334, 4) = 256*221+236;
   P(334, 5) = 256*236+175;
   P(334, 6) = 256*175+173;
   P(334, 7) = 256*173+174;
   P(334, 8) = 256*174+172;
   P(334, 9) = 256*172+157;
   P(335, 0) = 256*157+159;
   P(335, 1) = 256*159+220;
   P(335, 2) = 256*220+222;
   P(335, 3) = 256*222+219;
   P(335, 4) = 256*219+217;
   P(335, 5) = 256*217+232;
   P(335, 6) = 256*232+171;
   P(335, 7) = 256*171+174;
   P(335, 8) = 256*174+172;
   P(335, 9) = 256*172+157;
   P(336, 0) = 256*161+163;
   P(336, 1) = 256*163+224;
   P(336, 2) = 256*224+226;
   P(336, 3) = 256*226+225;
   P(336, 4) = 256*225+240;
   P(336, 5) = 256*240+179;
   P(336, 6) = 256*179+177;
   P(336, 7) = 256*177+178;
   P(336, 8) = 256*178+176;
   P(336, 9) = 256*176+161;
   P(337, 0) = 256*161+163;
   P(337, 1) = 256*163+224;
   P(337, 2) = 256*224+226;
   P(337, 3) = 256*226+239;
   P(337, 4) = 256*239+237;
   P(337, 5) = 256*237+238;
   P(337, 6) = 256*238+236;
   P(337, 7) = 256*236+175;
   P(337, 8) = 256*175+162;
   P(337, 9) = 256*162+161;
   P(338, 0) = 256*161+163;
   P(338, 1) = 256*163+224;
   P(338, 2) = 256*224+226;
   P(338, 3) = 256*226+239;
   P(338, 4) = 256*239+237;
   P(338, 5) = 256*237+252;
   P(338, 6) = 256*252+191;
   P(338, 7) = 256*191+178;
   P(338, 8) = 256*178+176;
   P(338, 9) = 256*176+161;
   P(339, 0) = 256*161+163;
   P(339, 1) = 256*163+224;
   P(339, 2) = 256*224+209;
   P(339, 3) = 256*209+210;
   P(339, 4) = 256*210+223;
   P(339, 5) = 256*223+221;
   P(339, 6) = 256*221+236;
   P(339, 7) = 256*236+175;
   P(339, 8) = 256*175+162;
   P(339, 9) = 256*162+161;
   P(340, 0) = 256*161+163;
   P(340, 1) = 256*163+166;
   P(340, 2) = 256*166+165;
   P(340, 3) = 256*165+180;
   P(340, 4) = 256*180+182;
   P(340, 5) = 256*182+179;
   P(340, 6) = 256*179+177;
   P(340, 7) = 256*177+178;
   P(340, 8) = 256*178+176;
   P(340, 9) = 256*176+161;
   P(341, 0) = 256*161+162;
   P(341, 1) = 256*162+175;
   P(341, 2) = 256*175+173;
   P(341, 3) = 256*173+188;
   P(341, 4) = 256*188+190;
   P(341, 5) = 256*190+189;
   P(341, 6) = 256*189+191;
   P(341, 7) = 256*191+178;
   P(341, 8) = 256*178+176;
   P(341, 9) = 256*176+161;
   P(342, 0) = 256*161+162;
   P(342, 1) = 256*162+175;
   P(342, 2) = 256*175+236;
   P(342, 3) = 256*236+238;
   P(342, 4) = 256*238+237;
   P(342, 5) = 256*237+252;
   P(342, 6) = 256*252+191;
   P(342, 7) = 256*191+178;
   P(342, 8) = 256*178+176;
   P(342, 9) = 256*176+161;
   P(343, 0) = 256*163+224;
   P(343, 1) = 256*224+226;
   P(343, 2) = 256*226+225;
   P(343, 3) = 256*225+227;
   P(343, 4) = 256*227+230;
   P(343, 5) = 256*230+228;
   P(343, 6) = 256*228+167;
   P(343, 7) = 256*167+165;
   P(343, 8) = 256*165+166;
   P(343, 9) = 256*166+163;
   P(344, 0) = 256*163+224;
   P(344, 1) = 256*224+226;
   P(344, 2) = 256*226+225;
   P(344, 3) = 256*225+240;
   P(344, 4) = 256*240+179;
   P(344, 5) = 256*179+182;
   P(344, 6) = 256*182+180;
   P(344, 7) = 256*180+165;
   P(344, 8) = 256*165+166;
   P(344, 9) = 256*166+163;
   P(345, 0) = 256*163+224;
   P(345, 1) = 256*224+209;
   P(345, 2) = 256*209+211;
   P(345, 3) = 256*211+214;
   P(345, 4) = 256*214+213;
   P(345, 5) = 256*213+228;
   P(345, 6) = 256*228+167;
   P(345, 7) = 256*167+165;
   P(345, 8) = 256*165+166;
   P(345, 9) = 256*166+163;
   P(346, 0) = 256*165+167;
   P(346, 1) = 256*167+228;
   P(346, 2) = 256*228+230;
   P(346, 3) = 256*230+229;
   P(346, 4) = 256*229+244;
   P(346, 5) = 256*244+183;
   P(346, 6) = 256*183+181;
   P(346, 7) = 256*181+182;
   P(346, 8) = 256*182+180;
   P(346, 9) = 256*180+165;
   P(347, 0) = 256*165+167;
   P(347, 1) = 256*167+228;
   P(347, 2) = 256*228+230;
   P(347, 3) = 256*230+227;
   P(347, 4) = 256*227+225;
   P(347, 5) = 256*225+240;
   P(347, 6) = 256*240+179;
   P(347, 7) = 256*179+182;
   P(347, 8) = 256*182+180;
   P(347, 9) = 256*180+165;
   P(348, 0) = 256*165+167;
   P(348, 1) = 256*167+170;
   P(348, 2) = 256*170+169;
   P(348, 3) = 256*169+184;
   P(348, 4) = 256*184+186;
   P(348, 5) = 256*186+183;
   P(348, 6) = 256*183+181;
   P(348, 7) = 256*181+182;
   P(348, 8) = 256*182+180;
   P(348, 9) = 256*180+165;
   P(349, 0) = 256*167+228;
   P(349, 1) = 256*228+230;
   P(349, 2) = 256*230+229;
   P(349, 3) = 256*229+231;
   P(349, 4) = 256*231+234;
   P(349, 5) = 256*234+232;
   P(349, 6) = 256*232+171;
   P(349, 7) = 256*171+169;
   P(349, 8) = 256*169+170;
   P(349, 9) = 256*170+167;
   P(350, 0) = 256*167+228;
   P(350, 1) = 256*228+230;
   P(350, 2) = 256*230+229;
   P(350, 3) = 256*229+244;
   P(350, 4) = 256*244+183;
   P(350, 5) = 256*183+186;
   P(350, 6) = 256*186+184;
   P(350, 7) = 256*184+169;
   P(350, 8) = 256*169+170;
   P(350, 9) = 256*170+167;
   P(351, 0) = 256*167+228;
   P(351, 1) = 256*228+213;
   P(351, 2) = 256*213+215;
   P(351, 3) = 256*215+218;
   P(351, 4) = 256*218+217;
   P(351, 5) = 256*217+232;
   P(351, 6) = 256*232+171;
   P(351, 7) = 256*171+169;
   P(351, 8) = 256*169+170;
   P(351, 9) = 256*170+167;
   P(352, 0) = 256*169+171;
   P(352, 1) = 256*171+232;
   P(352, 2) = 256*232+234;
   P(352, 3) = 256*234+233;
   P(352, 4) = 256*233+248;
   P(352, 5) = 256*248+187;
   P(352, 6) = 256*187+185;
   P(352, 7) = 256*185+186;
   P(352, 8) = 256*186+184;
   P(352, 9) = 256*184+169;
   P(353, 0) = 256*169+171;
   P(353, 1) = 256*171+232;
   P(353, 2) = 256*232+234;
   P(353, 3) = 256*234+231;
   P(353, 4) = 256*231+229;
   P(353, 5) = 256*229+244;
   P(353, 6) = 256*244+183;
   P(353, 7) = 256*183+186;
   P(353, 8) = 256*186+184;
   P(353, 9) = 256*184+169;
   P(354, 0) = 256*169+171;
   P(354, 1) = 256*171+174;
   P(354, 2) = 256*174+173;
   P(354, 3) = 256*173+188;
   P(354, 4) = 256*188+190;
   P(354, 5) = 256*190+187;
   P(354, 6) = 256*187+185;
   P(354, 7) = 256*185+186;
   P(354, 8) = 256*186+184;
   P(354, 9) = 256*184+169;
   P(355, 0) = 256*171+232;
   P(355, 1) = 256*232+234;
   P(355, 2) = 256*234+233;
   P(355, 3) = 256*233+235;
   P(355, 4) = 256*235+238;
   P(355, 5) = 256*238+236;
   P(355, 6) = 256*236+175;
   P(355, 7) = 256*175+173;
   P(355, 8) = 256*173+174;
   P(355, 9) = 256*174+171;
   P(356, 0) = 256*171+232;
   P(356, 1) = 256*232+234;
   P(356, 2) = 256*234+233;
   P(356, 3) = 256*233+248;
   P(356, 4) = 256*248+187;
   P(356, 5) = 256*187+190;
   P(356, 6) = 256*190+188;
   P(356, 7) = 256*188+173;
   P(356, 8) = 256*173+174;
   P(356, 9) = 256*174+171;
   P(357, 0) = 256*171+232;
   P(357, 1) = 256*232+217;
   P(357, 2) = 256*217+219;
   P(357, 3) = 256*219+222;
   P(357, 4) = 256*222+221;
   P(357, 5) = 256*221+236;
   P(357, 6) = 256*236+175;
   P(357, 7) = 256*175+173;
   P(357, 8) = 256*173+174;
   P(357, 9) = 256*174+171;
   P(358, 0) = 256*173+175;
   P(358, 1) = 256*175+236;
   P(358, 2) = 256*236+238;
   P(358, 3) = 256*238+237;
   P(358, 4) = 256*237+252;
   P(358, 5) = 256*252+191;
   P(358, 6) = 256*191+189;
   P(358, 7) = 256*189+190;
   P(358, 8) = 256*190+188;
   P(358, 9) = 256*188+173;
   P(359, 0) = 256*173+175;
   P(359, 1) = 256*175+236;
   P(359, 2) = 256*236+238;
   P(359, 3) = 256*238+235;
   P(359, 4) = 256*235+233;
   P(359, 5) = 256*233+248;
   P(359, 6) = 256*248+187;
   P(359, 7) = 256*187+190;
   P(359, 8) = 256*190+188;
   P(359, 9) = 256*188+173;
   P(360, 0) = 256*177+179;
   P(360, 1) = 256*179+240;
   P(360, 2) = 256*240+242;
   P(360, 3) = 256*242+255;
   P(360, 4) = 256*255+253;
   P(360, 5) = 256*253+254;
   P(360, 6) = 256*254+252;
   P(360, 7) = 256*252+191;
   P(360, 8) = 256*191+178;
   P(360, 9) = 256*178+177;
   P(361, 0) = 256*177+179;
   P(361, 1) = 256*179+240;
   P(361, 2) = 256*240+225;
   P(361, 3) = 256*225+226;
   P(361, 4) = 256*226+239;
   P(361, 5) = 256*239+237;
   P(361, 6) = 256*237+252;
   P(361, 7) = 256*252+191;
   P(361, 8) = 256*191+178;
   P(361, 9) = 256*178+177;
   P(362, 0) = 256*179+240;
   P(362, 1) = 256*240+242;
   P(362, 2) = 256*242+241;
   P(362, 3) = 256*241+243;
   P(362, 4) = 256*243+246;
   P(362, 5) = 256*246+244;
   P(362, 6) = 256*244+183;
   P(362, 7) = 256*183+181;
   P(362, 8) = 256*181+182;
   P(362, 9) = 256*182+179;
   P(363, 0) = 256*179+240;
   P(363, 1) = 256*240+225;
   P(363, 2) = 256*225+227;
   P(363, 3) = 256*227+230;
   P(363, 4) = 256*230+229;
   P(363, 5) = 256*229+244;
   P(363, 6) = 256*244+183;
   P(363, 7) = 256*183+181;
   P(363, 8) = 256*181+182;
   P(363, 9) = 256*182+179;
   P(364, 0) = 256*183+244;
   P(364, 1) = 256*244+246;
   P(364, 2) = 256*246+245;
   P(364, 3) = 256*245+247;
   P(364, 4) = 256*247+250;
   P(364, 5) = 256*250+248;
   P(364, 6) = 256*248+187;
   P(364, 7) = 256*187+185;
   P(364, 8) = 256*185+186;
   P(364, 9) = 256*186+183;
   P(365, 0) = 256*183+244;
   P(365, 1) = 256*244+229;
   P(365, 2) = 256*229+231;
   P(365, 3) = 256*231+234;
   P(365, 4) = 256*234+233;
   P(365, 5) = 256*233+248;
   P(365, 6) = 256*248+187;
   P(365, 7) = 256*187+185;
   P(365, 8) = 256*185+186;
   P(365, 9) = 256*186+183;
   P(366, 0) = 256*187+248;
   P(366, 1) = 256*248+250;
   P(366, 2) = 256*250+249;
   P(366, 3) = 256*249+251;
   P(366, 4) = 256*251+254;
   P(366, 5) = 256*254+252;
   P(366, 6) = 256*252+191;
   P(366, 7) = 256*191+189;
   P(366, 8) = 256*189+190;
   P(366, 9) = 256*190+187;
   P(367, 0) = 256*187+248;
   P(367, 1) = 256*248+233;
   P(367, 2) = 256*233+235;
   P(367, 3) = 256*235+238;
   P(367, 4) = 256*238+237;
   P(367, 5) = 256*237+252;
   P(367, 6) = 256*252+191;
   P(367, 7) = 256*191+189;
   P(367, 8) = 256*189+190;
   P(367, 9) = 256*190+187;
   P(368, 0) = 256*192+194;
   P(368, 1) = 256*194+193;
   P(368, 2) = 256*193+195;
   P(368, 3) = 256*195+198;
   P(368, 4) = 256*198+196;
   P(368, 5) = 256*196+245;
   P(368, 6) = 256*245+246;
   P(368, 7) = 256*246+243;
   P(368, 8) = 256*243+241;
   P(368, 9) = 256*241+192;
   P(369, 0) = 256*192+194;
   P(369, 1) = 256*194+207;
   P(369, 2) = 256*207+205;
   P(369, 3) = 256*205+206;
   P(369, 4) = 256*206+204;
   P(369, 5) = 256*204+253;
   P(369, 6) = 256*253+255;
   P(369, 7) = 256*255+242;
   P(369, 8) = 256*242+241;
   P(369, 9) = 256*241+192;
   P(370, 0) = 256*193+195;
   P(370, 1) = 256*195+198;
   P(370, 2) = 256*198+197;
   P(370, 3) = 256*197+212;
   P(370, 4) = 256*212+214;
   P(370, 5) = 256*214+211;
   P(370, 6) = 256*211+209;
   P(370, 7) = 256*209+210;
   P(370, 8) = 256*210+208;
   P(370, 9) = 256*208+193;
   P(371, 0) = 256*193+194;
   P(371, 1) = 256*194+207;
   P(371, 2) = 256*207+205;
   P(371, 3) = 256*205+220;
   P(371, 4) = 256*220+222;
   P(371, 5) = 256*222+221;
   P(371, 6) = 256*221+223;
   P(371, 7) = 256*223+210;
   P(371, 8) = 256*210+208;
   P(371, 9) = 256*208+193;
   P(372, 0) = 256*196+198;
   P(372, 1) = 256*198+197;
   P(372, 2) = 256*197+199;
   P(372, 3) = 256*199+202;
   P(372, 4) = 256*202+200;
   P(372, 5) = 256*200+249;
   P(372, 6) = 256*249+250;
   P(372, 7) = 256*250+247;
   P(372, 8) = 256*247+245;
   P(372, 9) = 256*245+196;
   P(373, 0) = 256*197+199;
   P(373, 1) = 256*199+202;
   P(373, 2) = 256*202+201;
   P(373, 3) = 256*201+216;
   P(373, 4) = 256*216+218;
   P(373, 5) = 256*218+215;
   P(373, 6) = 256*215+213;
   P(373, 7) = 256*213+214;
   P(373, 8) = 256*214+212;
   P(373, 9) = 256*212+197;
   P(374, 0) = 256*200+202;
   P(374, 1) = 256*202+201;
   P(374, 2) = 256*201+203;
   P(374, 3) = 256*203+206;
   P(374, 4) = 256*206+204;
   P(374, 5) = 256*204+253;
   P(374, 6) = 256*253+254;
   P(374, 7) = 256*254+251;
   P(374, 8) = 256*251+249;
   P(374, 9) = 256*249+200;
   P(375, 0) = 256*201+203;
   P(375, 1) = 256*203+206;
   P(375, 2) = 256*206+205;
   P(375, 3) = 256*205+220;
   P(375, 4) = 256*220+222;
   P(375, 5) = 256*222+219;
   P(375, 6) = 256*219+217;
   P(375, 7) = 256*217+218;
   P(375, 8) = 256*218+216;
   P(375, 9) = 256*216+201;
   P(376, 0) = 256*209+211;
   P(376, 1) = 256*211+214;
   P(376, 2) = 256*214+213;
   P(376, 3) = 256*213+228;
   P(376, 4) = 256*228+230;
   P(376, 5) = 256*230+227;
   P(376, 6) = 256*227+225;
   P(376, 7) = 256*225+226;
   P(376, 8) = 256*226+224;
   P(376, 9) = 256*224+209;
   P(377, 0) = 256*209+210;
   P(377, 1) = 256*210+223;
   P(377, 2) = 256*223+221;
   P(377, 3) = 256*221+236;
   P(377, 4) = 256*236+238;
   P(377, 5) = 256*238+237;
   P(377, 6) = 256*237+239;
   P(377, 7) = 256*239+226;
   P(377, 8) = 256*226+224;
   P(377, 9) = 256*224+209;
   P(378, 0) = 256*213+215;
   P(378, 1) = 256*215+218;
   P(378, 2) = 256*218+217;
   P(378, 3) = 256*217+232;
   P(378, 4) = 256*232+234;
   P(378, 5) = 256*234+231;
   P(378, 6) = 256*231+229;
   P(378, 7) = 256*229+230;
   P(378, 8) = 256*230+228;
   P(378, 9) = 256*228+213;
   P(379, 0) = 256*217+219;
   P(379, 1) = 256*219+222;
   P(379, 2) = 256*222+221;
   P(379, 3) = 256*221+236;
   P(379, 4) = 256*236+238;
   P(379, 5) = 256*238+235;
   P(379, 6) = 256*235+233;
   P(379, 7) = 256*233+234;
   P(379, 8) = 256*234+232;
   P(379, 9) = 256*232+217;
   P(380, 0) = 256*225+227;
   P(380, 1) = 256*227+230;
   P(380, 2) = 256*230+229;
   P(380, 3) = 256*229+244;
   P(380, 4) = 256*244+246;
   P(380, 5) = 256*246+243;
   P(380, 6) = 256*243+241;
   P(380, 7) = 256*241+242;
   P(380, 8) = 256*242+240;
   P(380, 9) = 256*240+225;
   P(381, 0) = 256*225+226;
   P(381, 1) = 256*226+239;
   P(381, 2) = 256*239+237;
   P(381, 3) = 256*237+252;
   P(381, 4) = 256*252+254;
   P(381, 5) = 256*254+253;
   P(381, 6) = 256*253+255;
   P(381, 7) = 256*255+242;
   P(381, 8) = 256*242+240;
   P(381, 9) = 256*240+225;
   P(382, 0) = 256*229+231;
   P(382, 1) = 256*231+234;
   P(382, 2) = 256*234+233;
   P(382, 3) = 256*233+248;
   P(382, 4) = 256*248+250;
   P(382, 5) = 256*250+247;
   P(382, 6) = 256*247+245;
   P(382, 7) = 256*245+246;
   P(382, 8) = 256*246+244;
   P(382, 9) = 256*244+229;
   P(383, 0) = 256*233+235;
   P(383, 1) = 256*235+238;
   P(383, 2) = 256*238+237;
   P(383, 3) = 256*237+252;
   P(383, 4) = 256*252+254;
   P(383, 5) = 256*254+251;
   P(383, 6) = 256*251+249;
   P(383, 7) = 256*249+250;
   P(383, 8) = 256*250+248;
   P(383, 9) = 256*248+233;
	 return P;
  }
  
