#include <armadillo>
#include <complex>

using namespace arma;

sp_cx_mat def_matrix()
{
   sp_cx_mat A(1296,1296);
   A(0, 3) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(3, 0) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(0, 31) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(31, 0) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(0, 184) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(184, 0) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1, 3) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(3, 1) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1, 6) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(6, 1) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1, 221) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(221, 1) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(2, 3) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(3, 2) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(2, 4) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(4, 2) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(2, 5) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(5, 2) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(4, 35) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(35, 4) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(4, 36) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(36, 4) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(5, 10) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(10, 5) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(5, 1081) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1081, 5) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(6, 9) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(9, 6) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(6, 190) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(190, 6) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(7, 9) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(9, 7) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(7, 12) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(12, 7) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(7, 227) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(227, 7) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(8, 9) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(9, 8) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(8, 10) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(10, 8) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(8, 11) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(11, 8) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(10, 42) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(42, 10) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(11, 16) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(16, 11) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(11, 1087) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1087, 11) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(12, 15) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(15, 12) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(12, 196) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(196, 12) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(13, 15) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(15, 13) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(13, 18) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(18, 13) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(13, 233) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(233, 13) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(14, 15) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(15, 14) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(14, 16) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(16, 14) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(14, 17) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(17, 14) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(16, 48) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(48, 16) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(17, 22) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(22, 17) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(17, 1093) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1093, 17) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(18, 21) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(21, 18) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(18, 202) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(202, 18) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(19, 21) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(21, 19) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(19, 24) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(24, 19) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(19, 239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(239, 19) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(20, 21) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(21, 20) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(20, 22) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(22, 20) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(20, 23) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(23, 20) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(22, 54) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(54, 22) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(23, 28) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(28, 23) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(23, 1099) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1099, 23) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(24, 27) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(27, 24) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(24, 208) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(208, 24) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(25, 27) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(27, 25) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(25, 30) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(30, 25) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(25, 245) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(245, 25) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(26, 27) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(27, 26) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(26, 28) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(28, 26) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(26, 29) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(29, 26) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(28, 60) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(60, 28) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(29, 34) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(34, 29) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(29, 1105) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1105, 29) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(30, 33) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(33, 30) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(30, 214) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(214, 30) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(31, 33) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(33, 31) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(31, 251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(251, 31) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(32, 33) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(33, 32) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(32, 34) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(34, 32) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(32, 35) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(35, 32) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(34, 66) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(66, 34) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(35, 1111) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1111, 35) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(36, 39) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(39, 36) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(36, 67) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(67, 36) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(37, 39) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(39, 37) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(37, 42) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(42, 37) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(37, 257) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(257, 37) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(38, 39) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(39, 38) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(38, 40) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(40, 38) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(38, 41) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(41, 38) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(40, 71) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(71, 40) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(40, 72) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(72, 40) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(41, 46) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(46, 41) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(41, 1117) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1117, 41) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(42, 45) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(45, 42) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(43, 45) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(45, 43) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(43, 48) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(48, 43) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(43, 263) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(263, 43) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(44, 45) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(45, 44) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(44, 46) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(46, 44) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(44, 47) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(47, 44) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(46, 78) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(78, 46) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(47, 52) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(52, 47) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(47, 1123) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1123, 47) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(48, 51) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(51, 48) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(49, 51) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(51, 49) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(49, 54) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(54, 49) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(49, 269) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(269, 49) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(50, 51) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(51, 50) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(50, 52) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(52, 50) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(50, 53) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(53, 50) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(52, 84) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(84, 52) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(53, 58) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(58, 53) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(53, 1129) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1129, 53) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(54, 57) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(57, 54) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(55, 57) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(57, 55) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(55, 60) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(60, 55) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(55, 275) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(275, 55) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(56, 57) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(57, 56) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(56, 58) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(58, 56) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(56, 59) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(59, 56) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(58, 90) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(90, 58) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(59, 64) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(64, 59) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(59, 1135) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1135, 59) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(60, 63) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(63, 60) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(61, 63) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(63, 61) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(61, 66) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(66, 61) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(61, 281) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(281, 61) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(62, 63) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(63, 62) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(62, 64) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(64, 62) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(62, 65) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(65, 62) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(64, 96) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(96, 64) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(65, 70) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(70, 65) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(65, 1141) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1141, 65) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(66, 69) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(69, 66) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(67, 69) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(69, 67) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(67, 287) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(287, 67) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(68, 69) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(69, 68) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(68, 70) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(70, 68) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(68, 71) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(71, 68) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(70, 102) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(102, 70) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(71, 1147) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1147, 71) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(72, 75) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(75, 72) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(72, 103) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(103, 72) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(73, 75) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(75, 73) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(73, 78) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(78, 73) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(73, 293) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(293, 73) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(74, 75) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(75, 74) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(74, 76) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(76, 74) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(74, 77) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(77, 74) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(76, 107) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(107, 76) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(76, 108) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(108, 76) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(77, 82) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(82, 77) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(77, 1153) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1153, 77) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(78, 81) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(81, 78) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(79, 81) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(81, 79) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(79, 84) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(84, 79) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(79, 299) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(299, 79) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(80, 81) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(81, 80) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(80, 82) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(82, 80) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(80, 83) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(83, 80) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(82, 114) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(114, 82) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(83, 88) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(88, 83) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(83, 1159) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1159, 83) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(84, 87) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(87, 84) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(85, 87) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(87, 85) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(85, 90) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(90, 85) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(85, 305) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(305, 85) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(86, 87) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(87, 86) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(86, 88) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(88, 86) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(86, 89) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(89, 86) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(88, 120) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(120, 88) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(89, 94) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(94, 89) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(89, 1165) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1165, 89) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(90, 93) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(93, 90) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(91, 93) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(93, 91) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(91, 96) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(96, 91) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(91, 311) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(311, 91) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(92, 93) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(93, 92) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(92, 94) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(94, 92) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(92, 95) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(95, 92) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(94, 126) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(126, 94) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(95, 100) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(100, 95) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(95, 1171) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1171, 95) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(96, 99) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(99, 96) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(97, 99) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(99, 97) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(97, 102) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(102, 97) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(97, 317) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(317, 97) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(98, 99) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(99, 98) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(98, 100) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(100, 98) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(98, 101) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(101, 98) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(100, 132) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(132, 100) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(101, 106) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(106, 101) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(101, 1177) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1177, 101) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(102, 105) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(105, 102) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(103, 105) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(105, 103) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(103, 323) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(323, 103) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(104, 105) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(105, 104) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(104, 106) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(106, 104) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(104, 107) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(107, 104) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(106, 138) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(138, 106) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(107, 1183) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1183, 107) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(108, 111) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(111, 108) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(108, 139) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(139, 108) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(109, 111) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(111, 109) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(109, 114) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(114, 109) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(109, 329) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(329, 109) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(110, 111) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(111, 110) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(110, 112) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(112, 110) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(110, 113) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(113, 110) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(112, 143) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(143, 112) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(112, 144) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(144, 112) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(113, 118) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(118, 113) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(113, 1189) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1189, 113) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(114, 117) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(117, 114) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(115, 117) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(117, 115) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(115, 120) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(120, 115) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(115, 335) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(335, 115) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(116, 117) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(117, 116) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(116, 118) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(118, 116) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(116, 119) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(119, 116) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(118, 150) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(150, 118) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(119, 124) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(124, 119) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(119, 1195) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1195, 119) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(120, 123) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(123, 120) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(121, 123) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(123, 121) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(121, 126) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(126, 121) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(121, 341) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(341, 121) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(122, 123) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(123, 122) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(122, 124) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(124, 122) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(122, 125) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(125, 122) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(124, 156) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(156, 124) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(125, 130) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(130, 125) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(125, 1201) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1201, 125) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(126, 129) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(129, 126) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(127, 129) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(129, 127) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(127, 132) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(132, 127) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(127, 347) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(347, 127) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(128, 129) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(129, 128) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(128, 130) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(130, 128) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(128, 131) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(131, 128) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(130, 162) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(162, 130) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(131, 136) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(136, 131) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(131, 1207) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1207, 131) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(132, 135) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(135, 132) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(133, 135) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(135, 133) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(133, 138) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(138, 133) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(133, 353) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(353, 133) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(134, 135) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(135, 134) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(134, 136) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(136, 134) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(134, 137) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(137, 134) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(136, 168) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(168, 136) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(137, 142) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(142, 137) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(137, 1213) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1213, 137) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(138, 141) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(141, 138) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(139, 141) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(141, 139) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(139, 359) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(359, 139) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(140, 141) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(141, 140) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(140, 142) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(142, 140) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(140, 143) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(143, 140) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(142, 174) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(174, 142) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(143, 1219) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1219, 143) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(144, 147) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(147, 144) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(144, 175) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(175, 144) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(145, 147) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(147, 145) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(145, 150) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(150, 145) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(145, 365) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(365, 145) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(146, 147) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(147, 146) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(146, 148) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(148, 146) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(146, 149) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(149, 146) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(148, 179) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(179, 148) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(148, 180) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(180, 148) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(149, 154) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(154, 149) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(149, 1225) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1225, 149) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(150, 153) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(153, 150) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(151, 153) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(153, 151) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(151, 156) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(156, 151) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(151, 371) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(371, 151) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(152, 153) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(153, 152) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(152, 154) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(154, 152) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(152, 155) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(155, 152) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(154, 186) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(186, 154) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(155, 160) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(160, 155) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(155, 1231) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1231, 155) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(156, 159) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(159, 156) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(157, 159) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(159, 157) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(157, 162) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(162, 157) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(157, 377) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(377, 157) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(158, 159) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(159, 158) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(158, 160) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(160, 158) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(158, 161) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(161, 158) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(160, 192) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(192, 160) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(161, 166) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(166, 161) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(161, 1237) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1237, 161) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(162, 165) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(165, 162) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(163, 165) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(165, 163) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(163, 168) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(168, 163) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(163, 383) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(383, 163) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(164, 165) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(165, 164) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(164, 166) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(166, 164) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(164, 167) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(167, 164) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(166, 198) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(198, 166) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(167, 172) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(172, 167) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(167, 1243) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1243, 167) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(168, 171) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(171, 168) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(169, 171) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(171, 169) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(169, 174) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(174, 169) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(169, 389) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(389, 169) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(170, 171) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(171, 170) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(170, 172) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(172, 170) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(170, 173) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(173, 170) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(172, 204) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(204, 172) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(173, 178) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(178, 173) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(173, 1249) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1249, 173) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(174, 177) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(177, 174) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(175, 177) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(177, 175) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(175, 395) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(395, 175) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(176, 177) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(177, 176) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(176, 178) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(178, 176) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(176, 179) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(179, 176) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(178, 210) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(210, 178) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(179, 1255) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1255, 179) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(180, 183) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(183, 180) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(180, 211) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(211, 180) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(181, 183) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(183, 181) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(181, 186) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(186, 181) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(181, 401) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(401, 181) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(182, 183) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(183, 182) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(182, 184) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(184, 182) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(182, 185) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(185, 182) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(184, 215) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(215, 184) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(185, 190) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(190, 185) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(185, 1261) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1261, 185) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(186, 189) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(189, 186) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(187, 189) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(189, 187) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(187, 192) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(192, 187) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(187, 407) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(407, 187) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(188, 189) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(189, 188) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(188, 190) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(190, 188) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(188, 191) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(191, 188) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(191, 196) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(196, 191) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(191, 1267) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1267, 191) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(192, 195) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(195, 192) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(193, 195) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(195, 193) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(193, 198) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(198, 193) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(193, 413) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(413, 193) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(194, 195) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(195, 194) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(194, 196) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(196, 194) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(194, 197) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(197, 194) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(197, 202) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(202, 197) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(197, 1273) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1273, 197) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(198, 201) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(201, 198) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(199, 201) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(201, 199) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(199, 204) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(204, 199) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(199, 419) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(419, 199) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(200, 201) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(201, 200) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(200, 202) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(202, 200) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(200, 203) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(203, 200) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(203, 208) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(208, 203) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(203, 1279) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1279, 203) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(204, 207) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(207, 204) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(205, 207) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(207, 205) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(205, 210) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(210, 205) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(205, 425) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(425, 205) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(206, 207) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(207, 206) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(206, 208) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(208, 206) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(206, 209) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(209, 206) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(209, 214) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(214, 209) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(209, 1285) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1285, 209) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(210, 213) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(213, 210) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(211, 213) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(213, 211) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(211, 431) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(431, 211) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(212, 213) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(213, 212) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(212, 214) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(214, 212) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(212, 215) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(215, 212) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(215, 1291) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1291, 215) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(216, 219) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(219, 216) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(216, 247) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(247, 216) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(216, 400) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(400, 216) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(217, 219) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(219, 217) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(217, 222) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(222, 217) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(217, 437) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(437, 217) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(218, 219) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(219, 218) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(218, 220) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(220, 218) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(218, 221) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(221, 218) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(220, 251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(251, 220) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(220, 252) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(252, 220) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(221, 226) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(226, 221) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(222, 225) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(225, 222) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(222, 406) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(406, 222) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(223, 225) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(225, 223) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(223, 228) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(228, 223) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(223, 443) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(443, 223) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(224, 225) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(225, 224) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(224, 226) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(226, 224) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(224, 227) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(227, 224) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(226, 258) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(258, 226) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(227, 232) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(232, 227) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(228, 231) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(231, 228) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(228, 412) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(412, 228) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(229, 231) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(231, 229) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(229, 234) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(234, 229) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(229, 449) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(449, 229) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(230, 231) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(231, 230) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(230, 232) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(232, 230) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(230, 233) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(233, 230) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(232, 264) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(264, 232) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(233, 238) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(238, 233) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(234, 237) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(237, 234) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(234, 418) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(418, 234) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(235, 237) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(237, 235) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(235, 240) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(240, 235) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(235, 455) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(455, 235) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(236, 237) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(237, 236) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(236, 238) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(238, 236) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(236, 239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(239, 236) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(238, 270) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(270, 238) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(239, 244) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(244, 239) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(240, 243) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(243, 240) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(240, 424) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(424, 240) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(241, 243) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(243, 241) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(241, 246) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(246, 241) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(241, 461) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(461, 241) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(242, 243) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(243, 242) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(242, 244) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(244, 242) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(242, 245) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(245, 242) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(244, 276) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(276, 244) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(245, 250) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(250, 245) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(246, 249) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(249, 246) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(246, 430) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(430, 246) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(247, 249) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(249, 247) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(247, 467) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(467, 247) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(248, 249) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(249, 248) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(248, 250) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(250, 248) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(248, 251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(251, 248) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(250, 282) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(282, 250) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(252, 255) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(255, 252) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(252, 283) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(283, 252) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(253, 255) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(255, 253) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(253, 258) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(258, 253) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(253, 473) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(473, 253) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(254, 255) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(255, 254) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(254, 256) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(256, 254) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(254, 257) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(257, 254) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(256, 287) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(287, 256) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(256, 288) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(288, 256) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(257, 262) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(262, 257) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(258, 261) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(261, 258) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(259, 261) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(261, 259) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(259, 264) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(264, 259) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(259, 479) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(479, 259) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(260, 261) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(261, 260) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(260, 262) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(262, 260) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(260, 263) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(263, 260) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(262, 294) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(294, 262) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(263, 268) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(268, 263) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(264, 267) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(267, 264) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(265, 267) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(267, 265) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(265, 270) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(270, 265) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(265, 485) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(485, 265) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(266, 267) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(267, 266) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(266, 268) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(268, 266) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(266, 269) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(269, 266) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(268, 300) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(300, 268) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(269, 274) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(274, 269) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(270, 273) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(273, 270) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(271, 273) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(273, 271) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(271, 276) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(276, 271) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(271, 491) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(491, 271) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(272, 273) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(273, 272) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(272, 274) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(274, 272) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(272, 275) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(275, 272) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(274, 306) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(306, 274) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(275, 280) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(280, 275) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(276, 279) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(279, 276) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(277, 279) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(279, 277) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(277, 282) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(282, 277) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(277, 497) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(497, 277) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(278, 279) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(279, 278) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(278, 280) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(280, 278) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(278, 281) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(281, 278) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(280, 312) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(312, 280) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(281, 286) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(286, 281) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(282, 285) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(285, 282) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(283, 285) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(285, 283) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(283, 503) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(503, 283) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(284, 285) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(285, 284) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(284, 286) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(286, 284) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(284, 287) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(287, 284) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(286, 318) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(318, 286) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(288, 291) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(291, 288) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(288, 319) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(319, 288) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(289, 291) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(291, 289) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(289, 294) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(294, 289) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(289, 509) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(509, 289) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(290, 291) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(291, 290) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(290, 292) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(292, 290) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(290, 293) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(293, 290) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(292, 323) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(323, 292) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(292, 324) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(324, 292) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(293, 298) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(298, 293) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(294, 297) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(297, 294) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(295, 297) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(297, 295) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(295, 300) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(300, 295) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(295, 515) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(515, 295) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(296, 297) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(297, 296) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(296, 298) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(298, 296) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(296, 299) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(299, 296) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(298, 330) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(330, 298) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(299, 304) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(304, 299) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(300, 303) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(303, 300) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(301, 303) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(303, 301) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(301, 306) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(306, 301) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(301, 521) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(521, 301) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(302, 303) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(303, 302) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(302, 304) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(304, 302) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(302, 305) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(305, 302) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(304, 336) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(336, 304) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(305, 310) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(310, 305) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(306, 309) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(309, 306) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(307, 309) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(309, 307) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(307, 312) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(312, 307) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(307, 527) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(527, 307) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(308, 309) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(309, 308) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(308, 310) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(310, 308) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(308, 311) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(311, 308) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(310, 342) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(342, 310) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(311, 316) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(316, 311) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(312, 315) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(315, 312) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(313, 315) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(315, 313) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(313, 318) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(318, 313) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(313, 533) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(533, 313) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(314, 315) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(315, 314) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(314, 316) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(316, 314) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(314, 317) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(317, 314) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(316, 348) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(348, 316) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(317, 322) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(322, 317) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(318, 321) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(321, 318) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(319, 321) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(321, 319) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(319, 539) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(539, 319) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(320, 321) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(321, 320) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(320, 322) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(322, 320) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(320, 323) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(323, 320) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(322, 354) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(354, 322) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(324, 327) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(327, 324) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(324, 355) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(355, 324) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(325, 327) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(327, 325) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(325, 330) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(330, 325) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(325, 545) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(545, 325) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(326, 327) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(327, 326) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(326, 328) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(328, 326) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(326, 329) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(329, 326) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(328, 359) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(359, 328) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(328, 360) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(360, 328) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(329, 334) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(334, 329) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(330, 333) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(333, 330) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(331, 333) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(333, 331) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(331, 336) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(336, 331) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(331, 551) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(551, 331) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(332, 333) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(333, 332) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(332, 334) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(334, 332) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(332, 335) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(335, 332) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(334, 366) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(366, 334) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(335, 340) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(340, 335) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(336, 339) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(339, 336) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(337, 339) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(339, 337) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(337, 342) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(342, 337) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(337, 557) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(557, 337) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(338, 339) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(339, 338) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(338, 340) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(340, 338) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(338, 341) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(341, 338) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(340, 372) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(372, 340) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(341, 346) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(346, 341) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(342, 345) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(345, 342) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(343, 345) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(345, 343) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(343, 348) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(348, 343) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(343, 563) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(563, 343) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(344, 345) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(345, 344) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(344, 346) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(346, 344) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(344, 347) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(347, 344) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(346, 378) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(378, 346) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(347, 352) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(352, 347) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(348, 351) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(351, 348) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(349, 351) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(351, 349) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(349, 354) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(354, 349) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(349, 569) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(569, 349) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(350, 351) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(351, 350) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(350, 352) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(352, 350) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(350, 353) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(353, 350) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(352, 384) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(384, 352) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(353, 358) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(358, 353) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(354, 357) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(357, 354) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(355, 357) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(357, 355) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(355, 575) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(575, 355) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(356, 357) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(357, 356) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(356, 358) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(358, 356) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(356, 359) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(359, 356) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(358, 390) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(390, 358) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(360, 363) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(363, 360) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(360, 391) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(391, 360) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(361, 363) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(363, 361) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(361, 366) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(366, 361) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(361, 581) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(581, 361) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(362, 363) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(363, 362) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(362, 364) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(364, 362) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(362, 365) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(365, 362) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(364, 395) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(395, 364) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(364, 396) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(396, 364) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(365, 370) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(370, 365) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(366, 369) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(369, 366) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(367, 369) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(369, 367) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(367, 372) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(372, 367) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(367, 587) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(587, 367) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(368, 369) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(369, 368) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(368, 370) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(370, 368) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(368, 371) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(371, 368) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(370, 402) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(402, 370) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(371, 376) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(376, 371) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(372, 375) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(375, 372) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(373, 375) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(375, 373) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(373, 378) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(378, 373) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(373, 593) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(593, 373) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(374, 375) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(375, 374) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(374, 376) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(376, 374) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(374, 377) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(377, 374) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(376, 408) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(408, 376) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(377, 382) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(382, 377) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(378, 381) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(381, 378) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(379, 381) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(381, 379) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(379, 384) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(384, 379) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(379, 599) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(599, 379) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(380, 381) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(381, 380) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(380, 382) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(382, 380) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(380, 383) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(383, 380) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(382, 414) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(414, 382) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(383, 388) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(388, 383) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(384, 387) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(387, 384) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(385, 387) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(387, 385) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(385, 390) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(390, 385) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(385, 605) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(605, 385) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(386, 387) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(387, 386) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(386, 388) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(388, 386) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(386, 389) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(389, 386) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(388, 420) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(420, 388) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(389, 394) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(394, 389) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(390, 393) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(393, 390) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(391, 393) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(393, 391) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(391, 611) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(611, 391) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(392, 393) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(393, 392) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(392, 394) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(394, 392) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(392, 395) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(395, 392) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(394, 426) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(426, 394) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(396, 399) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(399, 396) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(396, 427) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(427, 396) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(397, 399) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(399, 397) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(397, 402) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(402, 397) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(397, 617) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(617, 397) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(398, 399) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(399, 398) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(398, 400) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(400, 398) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(398, 401) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(401, 398) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(400, 431) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(431, 400) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(401, 406) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(406, 401) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(402, 405) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(405, 402) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(403, 405) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(405, 403) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(403, 408) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(408, 403) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(403, 623) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(623, 403) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(404, 405) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(405, 404) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(404, 406) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(406, 404) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(404, 407) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(407, 404) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(407, 412) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(412, 407) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(408, 411) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(411, 408) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(409, 411) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(411, 409) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(409, 414) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(414, 409) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(409, 629) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(629, 409) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(410, 411) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(411, 410) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(410, 412) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(412, 410) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(410, 413) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(413, 410) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(413, 418) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(418, 413) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(414, 417) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(417, 414) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(415, 417) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(417, 415) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(415, 420) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(420, 415) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(415, 635) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(635, 415) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(416, 417) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(417, 416) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(416, 418) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(418, 416) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(416, 419) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(419, 416) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(419, 424) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(424, 419) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(420, 423) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(423, 420) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(421, 423) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(423, 421) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(421, 426) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(426, 421) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(421, 641) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(641, 421) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(422, 423) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(423, 422) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(422, 424) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(424, 422) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(422, 425) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(425, 422) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(425, 430) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(430, 425) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(426, 429) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(429, 426) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(427, 429) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(429, 427) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(427, 647) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(647, 427) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(428, 429) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(429, 428) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(428, 430) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(430, 428) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(428, 431) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(431, 428) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(432, 435) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(435, 432) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(432, 463) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(463, 432) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(432, 616) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(616, 432) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(433, 435) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(435, 433) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(433, 438) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(438, 433) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(433, 653) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(653, 433) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(434, 435) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(435, 434) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(434, 436) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(436, 434) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(434, 437) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(437, 434) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(436, 467) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(467, 436) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(436, 468) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(468, 436) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(437, 442) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(442, 437) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(438, 441) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(441, 438) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(438, 622) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(622, 438) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(439, 441) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(441, 439) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(439, 444) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(444, 439) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(439, 659) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(659, 439) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(440, 441) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(441, 440) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(440, 442) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(442, 440) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(440, 443) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(443, 440) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(442, 474) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(474, 442) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(443, 448) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(448, 443) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(444, 447) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(447, 444) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(444, 628) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(628, 444) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(445, 447) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(447, 445) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(445, 450) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(450, 445) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(445, 665) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(665, 445) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(446, 447) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(447, 446) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(446, 448) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(448, 446) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(446, 449) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(449, 446) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(448, 480) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(480, 448) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(449, 454) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(454, 449) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(450, 453) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(453, 450) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(450, 634) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(634, 450) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(451, 453) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(453, 451) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(451, 456) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(456, 451) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(451, 671) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(671, 451) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(452, 453) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(453, 452) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(452, 454) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(454, 452) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(452, 455) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(455, 452) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(454, 486) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(486, 454) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(455, 460) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(460, 455) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(456, 459) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(459, 456) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(456, 640) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(640, 456) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(457, 459) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(459, 457) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(457, 462) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(462, 457) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(457, 677) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(677, 457) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(458, 459) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(459, 458) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(458, 460) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(460, 458) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(458, 461) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(461, 458) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(460, 492) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(492, 460) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(461, 466) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(466, 461) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(462, 465) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(465, 462) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(462, 646) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(646, 462) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(463, 465) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(465, 463) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(463, 683) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(683, 463) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(464, 465) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(465, 464) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(464, 466) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(466, 464) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(464, 467) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(467, 464) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(466, 498) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(498, 466) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(468, 471) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(471, 468) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(468, 499) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(499, 468) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(469, 471) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(471, 469) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(469, 474) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(474, 469) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(469, 689) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(689, 469) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(470, 471) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(471, 470) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(470, 472) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(472, 470) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(470, 473) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(473, 470) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(472, 503) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(503, 472) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(472, 504) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(504, 472) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(473, 478) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(478, 473) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(474, 477) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(477, 474) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(475, 477) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(477, 475) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(475, 480) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(480, 475) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(475, 695) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(695, 475) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(476, 477) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(477, 476) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(476, 478) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(478, 476) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(476, 479) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(479, 476) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(478, 510) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(510, 478) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(479, 484) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(484, 479) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(480, 483) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(483, 480) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(481, 483) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(483, 481) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(481, 486) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(486, 481) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(481, 701) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(701, 481) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(482, 483) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(483, 482) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(482, 484) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(484, 482) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(482, 485) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(485, 482) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(484, 516) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(516, 484) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(485, 490) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(490, 485) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(486, 489) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(489, 486) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(487, 489) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(489, 487) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(487, 492) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(492, 487) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(487, 707) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(707, 487) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(488, 489) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(489, 488) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(488, 490) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(490, 488) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(488, 491) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(491, 488) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(490, 522) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(522, 490) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(491, 496) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(496, 491) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(492, 495) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(495, 492) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(493, 495) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(495, 493) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(493, 498) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(498, 493) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(493, 713) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(713, 493) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(494, 495) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(495, 494) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(494, 496) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(496, 494) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(494, 497) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(497, 494) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(496, 528) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(528, 496) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(497, 502) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(502, 497) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(498, 501) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(501, 498) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(499, 501) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(501, 499) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(499, 719) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(719, 499) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(500, 501) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(501, 500) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(500, 502) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(502, 500) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(500, 503) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(503, 500) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(502, 534) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(534, 502) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(504, 507) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(507, 504) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(504, 535) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(535, 504) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(505, 507) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(507, 505) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(505, 510) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(510, 505) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(505, 725) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(725, 505) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(506, 507) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(507, 506) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(506, 508) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(508, 506) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(506, 509) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(509, 506) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(508, 539) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(539, 508) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(508, 540) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(540, 508) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(509, 514) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(514, 509) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(510, 513) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(513, 510) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(511, 513) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(513, 511) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(511, 516) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(516, 511) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(511, 731) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(731, 511) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(512, 513) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(513, 512) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(512, 514) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(514, 512) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(512, 515) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(515, 512) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(514, 546) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(546, 514) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(515, 520) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(520, 515) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(516, 519) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(519, 516) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(517, 519) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(519, 517) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(517, 522) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(522, 517) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(517, 737) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(737, 517) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(518, 519) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(519, 518) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(518, 520) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(520, 518) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(518, 521) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(521, 518) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(520, 552) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(552, 520) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(521, 526) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(526, 521) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(522, 525) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(525, 522) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(523, 525) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(525, 523) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(523, 528) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(528, 523) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(523, 743) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(743, 523) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(524, 525) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(525, 524) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(524, 526) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(526, 524) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(524, 527) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(527, 524) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(526, 558) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(558, 526) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(527, 532) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(532, 527) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(528, 531) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(531, 528) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(529, 531) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(531, 529) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(529, 534) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(534, 529) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(529, 749) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(749, 529) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(530, 531) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(531, 530) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(530, 532) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(532, 530) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(530, 533) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(533, 530) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(532, 564) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(564, 532) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(533, 538) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(538, 533) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(534, 537) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(537, 534) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(535, 537) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(537, 535) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(535, 755) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(755, 535) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(536, 537) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(537, 536) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(536, 538) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(538, 536) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(536, 539) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(539, 536) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(538, 570) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(570, 538) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(540, 543) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(543, 540) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(540, 571) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(571, 540) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(541, 543) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(543, 541) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(541, 546) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(546, 541) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(541, 761) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(761, 541) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(542, 543) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(543, 542) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(542, 544) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(544, 542) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(542, 545) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(545, 542) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(544, 575) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(575, 544) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(544, 576) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(576, 544) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(545, 550) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(550, 545) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(546, 549) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(549, 546) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(547, 549) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(549, 547) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(547, 552) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(552, 547) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(547, 767) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(767, 547) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(548, 549) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(549, 548) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(548, 550) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(550, 548) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(548, 551) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(551, 548) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(550, 582) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(582, 550) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(551, 556) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(556, 551) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(552, 555) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(555, 552) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(553, 555) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(555, 553) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(553, 558) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(558, 553) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(553, 773) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(773, 553) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(554, 555) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(555, 554) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(554, 556) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(556, 554) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(554, 557) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(557, 554) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(556, 588) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(588, 556) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(557, 562) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(562, 557) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(558, 561) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(561, 558) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(559, 561) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(561, 559) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(559, 564) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(564, 559) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(559, 779) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(779, 559) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(560, 561) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(561, 560) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(560, 562) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(562, 560) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(560, 563) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(563, 560) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(562, 594) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(594, 562) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(563, 568) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(568, 563) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(564, 567) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(567, 564) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(565, 567) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(567, 565) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(565, 570) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(570, 565) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(565, 785) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(785, 565) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(566, 567) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(567, 566) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(566, 568) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(568, 566) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(566, 569) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(569, 566) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(568, 600) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(600, 568) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(569, 574) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(574, 569) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(570, 573) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(573, 570) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(571, 573) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(573, 571) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(571, 791) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(791, 571) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(572, 573) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(573, 572) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(572, 574) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(574, 572) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(572, 575) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(575, 572) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(574, 606) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(606, 574) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(576, 579) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(579, 576) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(576, 607) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(607, 576) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(577, 579) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(579, 577) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(577, 582) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(582, 577) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(577, 797) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(797, 577) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(578, 579) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(579, 578) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(578, 580) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(580, 578) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(578, 581) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(581, 578) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(580, 611) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(611, 580) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(580, 612) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(612, 580) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(581, 586) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(586, 581) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(582, 585) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(585, 582) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(583, 585) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(585, 583) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(583, 588) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(588, 583) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(583, 803) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(803, 583) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(584, 585) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(585, 584) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(584, 586) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(586, 584) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(584, 587) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(587, 584) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(586, 618) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(618, 586) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(587, 592) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(592, 587) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(588, 591) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(591, 588) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(589, 591) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(591, 589) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(589, 594) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(594, 589) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(589, 809) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(809, 589) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(590, 591) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(591, 590) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(590, 592) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(592, 590) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(590, 593) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(593, 590) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(592, 624) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(624, 592) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(593, 598) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(598, 593) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(594, 597) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(597, 594) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(595, 597) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(597, 595) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(595, 600) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(600, 595) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(595, 815) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(815, 595) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(596, 597) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(597, 596) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(596, 598) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(598, 596) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(596, 599) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(599, 596) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(598, 630) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(630, 598) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(599, 604) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(604, 599) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(600, 603) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(603, 600) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(601, 603) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(603, 601) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(601, 606) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(606, 601) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(601, 821) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(821, 601) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(602, 603) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(603, 602) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(602, 604) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(604, 602) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(602, 605) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(605, 602) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(604, 636) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(636, 604) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(605, 610) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(610, 605) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(606, 609) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(609, 606) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(607, 609) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(609, 607) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(607, 827) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(827, 607) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(608, 609) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(609, 608) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(608, 610) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(610, 608) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(608, 611) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(611, 608) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(610, 642) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(642, 610) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(612, 615) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(615, 612) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(612, 643) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(643, 612) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(613, 615) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(615, 613) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(613, 618) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(618, 613) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(613, 833) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(833, 613) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(614, 615) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(615, 614) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(614, 616) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(616, 614) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(614, 617) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(617, 614) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(616, 647) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(647, 616) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(617, 622) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(622, 617) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(618, 621) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(621, 618) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(619, 621) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(621, 619) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(619, 624) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(624, 619) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(619, 839) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(839, 619) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(620, 621) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(621, 620) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(620, 622) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(622, 620) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(620, 623) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(623, 620) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(623, 628) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(628, 623) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(624, 627) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(627, 624) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(625, 627) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(627, 625) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(625, 630) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(630, 625) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(625, 845) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(845, 625) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(626, 627) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(627, 626) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(626, 628) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(628, 626) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(626, 629) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(629, 626) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(629, 634) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(634, 629) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(630, 633) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(633, 630) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(631, 633) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(633, 631) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(631, 636) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(636, 631) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(631, 851) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(851, 631) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(632, 633) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(633, 632) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(632, 634) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(634, 632) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(632, 635) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(635, 632) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(635, 640) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(640, 635) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(636, 639) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(639, 636) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(637, 639) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(639, 637) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(637, 642) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(642, 637) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(637, 857) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(857, 637) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(638, 639) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(639, 638) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(638, 640) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(640, 638) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(638, 641) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(641, 638) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(641, 646) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(646, 641) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(642, 645) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(645, 642) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(643, 645) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(645, 643) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(643, 863) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(863, 643) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(644, 645) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(645, 644) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(644, 646) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(646, 644) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(644, 647) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(647, 644) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(648, 651) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(651, 648) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(648, 679) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(679, 648) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(648, 832) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(832, 648) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(649, 651) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(651, 649) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(649, 654) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(654, 649) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(649, 869) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(869, 649) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(650, 651) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(651, 650) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(650, 652) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(652, 650) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(650, 653) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(653, 650) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(652, 683) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(683, 652) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(652, 684) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(684, 652) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(653, 658) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(658, 653) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(654, 657) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(657, 654) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(654, 838) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(838, 654) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(655, 657) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(657, 655) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(655, 660) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(660, 655) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(655, 875) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(875, 655) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(656, 657) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(657, 656) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(656, 658) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(658, 656) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(656, 659) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(659, 656) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(658, 690) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(690, 658) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(659, 664) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(664, 659) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(660, 663) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(663, 660) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(660, 844) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(844, 660) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(661, 663) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(663, 661) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(661, 666) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(666, 661) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(661, 881) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(881, 661) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(662, 663) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(663, 662) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(662, 664) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(664, 662) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(662, 665) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(665, 662) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(664, 696) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(696, 664) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(665, 670) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(670, 665) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(666, 669) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(669, 666) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(666, 850) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(850, 666) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(667, 669) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(669, 667) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(667, 672) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(672, 667) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(667, 887) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(887, 667) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(668, 669) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(669, 668) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(668, 670) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(670, 668) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(668, 671) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(671, 668) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(670, 702) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(702, 670) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(671, 676) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(676, 671) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(672, 675) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(675, 672) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(672, 856) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(856, 672) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(673, 675) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(675, 673) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(673, 678) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(678, 673) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(673, 893) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(893, 673) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(674, 675) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(675, 674) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(674, 676) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(676, 674) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(674, 677) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(677, 674) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(676, 708) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(708, 676) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(677, 682) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(682, 677) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(678, 681) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(681, 678) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(678, 862) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(862, 678) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(679, 681) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(681, 679) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(679, 899) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(899, 679) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(680, 681) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(681, 680) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(680, 682) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(682, 680) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(680, 683) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(683, 680) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(682, 714) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(714, 682) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(684, 687) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(687, 684) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(684, 715) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(715, 684) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(685, 687) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(687, 685) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(685, 690) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(690, 685) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(685, 905) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(905, 685) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(686, 687) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(687, 686) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(686, 688) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(688, 686) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(686, 689) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(689, 686) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(688, 719) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(719, 688) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(688, 720) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(720, 688) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(689, 694) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(694, 689) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(690, 693) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(693, 690) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(691, 693) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(693, 691) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(691, 696) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(696, 691) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(691, 911) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(911, 691) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(692, 693) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(693, 692) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(692, 694) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(694, 692) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(692, 695) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(695, 692) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(694, 726) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(726, 694) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(695, 700) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(700, 695) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(696, 699) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(699, 696) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(697, 699) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(699, 697) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(697, 702) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(702, 697) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(697, 917) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(917, 697) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(698, 699) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(699, 698) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(698, 700) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(700, 698) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(698, 701) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(701, 698) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(700, 732) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(732, 700) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(701, 706) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(706, 701) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(702, 705) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(705, 702) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(703, 705) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(705, 703) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(703, 708) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(708, 703) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(703, 923) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(923, 703) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(704, 705) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(705, 704) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(704, 706) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(706, 704) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(704, 707) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(707, 704) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(706, 738) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(738, 706) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(707, 712) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(712, 707) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(708, 711) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(711, 708) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(709, 711) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(711, 709) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(709, 714) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(714, 709) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(709, 929) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(929, 709) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(710, 711) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(711, 710) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(710, 712) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(712, 710) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(710, 713) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(713, 710) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(712, 744) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(744, 712) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(713, 718) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(718, 713) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(714, 717) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(717, 714) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(715, 717) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(717, 715) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(715, 935) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(935, 715) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(716, 717) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(717, 716) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(716, 718) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(718, 716) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(716, 719) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(719, 716) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(718, 750) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(750, 718) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(720, 723) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(723, 720) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(720, 751) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(751, 720) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(721, 723) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(723, 721) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(721, 726) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(726, 721) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(721, 941) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(941, 721) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(722, 723) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(723, 722) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(722, 724) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(724, 722) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(722, 725) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(725, 722) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(724, 755) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(755, 724) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(724, 756) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(756, 724) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(725, 730) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(730, 725) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(726, 729) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(729, 726) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(727, 729) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(729, 727) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(727, 732) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(732, 727) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(727, 947) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(947, 727) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(728, 729) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(729, 728) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(728, 730) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(730, 728) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(728, 731) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(731, 728) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(730, 762) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(762, 730) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(731, 736) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(736, 731) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(732, 735) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(735, 732) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(733, 735) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(735, 733) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(733, 738) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(738, 733) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(733, 953) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(953, 733) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(734, 735) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(735, 734) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(734, 736) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(736, 734) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(734, 737) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(737, 734) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(736, 768) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(768, 736) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(737, 742) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(742, 737) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(738, 741) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(741, 738) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(739, 741) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(741, 739) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(739, 744) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(744, 739) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(739, 959) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(959, 739) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(740, 741) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(741, 740) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(740, 742) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(742, 740) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(740, 743) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(743, 740) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(742, 774) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(774, 742) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(743, 748) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(748, 743) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(744, 747) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(747, 744) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(745, 747) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(747, 745) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(745, 750) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(750, 745) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(745, 965) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(965, 745) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(746, 747) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(747, 746) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(746, 748) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(748, 746) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(746, 749) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(749, 746) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(748, 780) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(780, 748) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(749, 754) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(754, 749) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(750, 753) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(753, 750) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(751, 753) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(753, 751) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(751, 971) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(971, 751) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(752, 753) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(753, 752) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(752, 754) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(754, 752) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(752, 755) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(755, 752) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(754, 786) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(786, 754) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(756, 759) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(759, 756) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(756, 787) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(787, 756) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(757, 759) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(759, 757) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(757, 762) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(762, 757) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(757, 977) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(977, 757) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(758, 759) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(759, 758) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(758, 760) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(760, 758) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(758, 761) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(761, 758) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(760, 791) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(791, 760) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(760, 792) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(792, 760) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(761, 766) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(766, 761) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(762, 765) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(765, 762) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(763, 765) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(765, 763) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(763, 768) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(768, 763) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(763, 983) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(983, 763) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(764, 765) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(765, 764) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(764, 766) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(766, 764) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(764, 767) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(767, 764) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(766, 798) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(798, 766) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(767, 772) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(772, 767) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(768, 771) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(771, 768) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(769, 771) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(771, 769) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(769, 774) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(774, 769) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(769, 989) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(989, 769) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(770, 771) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(771, 770) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(770, 772) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(772, 770) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(770, 773) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(773, 770) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(772, 804) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(804, 772) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(773, 778) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(778, 773) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(774, 777) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(777, 774) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(775, 777) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(777, 775) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(775, 780) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(780, 775) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(775, 995) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(995, 775) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(776, 777) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(777, 776) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(776, 778) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(778, 776) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(776, 779) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(779, 776) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(778, 810) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(810, 778) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(779, 784) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(784, 779) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(780, 783) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(783, 780) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(781, 783) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(783, 781) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(781, 786) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(786, 781) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(781, 1001) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1001, 781) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(782, 783) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(783, 782) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(782, 784) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(784, 782) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(782, 785) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(785, 782) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(784, 816) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(816, 784) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(785, 790) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(790, 785) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(786, 789) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(789, 786) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(787, 789) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(789, 787) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(787, 1007) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1007, 787) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(788, 789) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(789, 788) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(788, 790) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(790, 788) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(788, 791) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(791, 788) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(790, 822) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(822, 790) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(792, 795) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(795, 792) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(792, 823) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(823, 792) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(793, 795) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(795, 793) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(793, 798) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(798, 793) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(793, 1013) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1013, 793) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(794, 795) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(795, 794) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(794, 796) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(796, 794) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(794, 797) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(797, 794) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(796, 827) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(827, 796) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(796, 828) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(828, 796) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(797, 802) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(802, 797) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(798, 801) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(801, 798) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(799, 801) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(801, 799) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(799, 804) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(804, 799) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(799, 1019) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1019, 799) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(800, 801) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(801, 800) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(800, 802) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(802, 800) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(800, 803) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(803, 800) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(802, 834) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(834, 802) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(803, 808) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(808, 803) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(804, 807) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(807, 804) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(805, 807) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(807, 805) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(805, 810) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(810, 805) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(805, 1025) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1025, 805) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(806, 807) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(807, 806) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(806, 808) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(808, 806) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(806, 809) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(809, 806) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(808, 840) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(840, 808) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(809, 814) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(814, 809) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(810, 813) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(813, 810) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(811, 813) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(813, 811) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(811, 816) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(816, 811) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(811, 1031) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1031, 811) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(812, 813) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(813, 812) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(812, 814) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(814, 812) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(812, 815) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(815, 812) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(814, 846) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(846, 814) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(815, 820) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(820, 815) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(816, 819) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(819, 816) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(817, 819) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(819, 817) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(817, 822) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(822, 817) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(817, 1037) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1037, 817) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(818, 819) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(819, 818) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(818, 820) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(820, 818) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(818, 821) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(821, 818) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(820, 852) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(852, 820) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(821, 826) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(826, 821) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(822, 825) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(825, 822) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(823, 825) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(825, 823) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(823, 1043) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1043, 823) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(824, 825) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(825, 824) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(824, 826) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(826, 824) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(824, 827) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(827, 824) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(826, 858) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(858, 826) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(828, 831) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(831, 828) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(828, 859) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(859, 828) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(829, 831) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(831, 829) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(829, 834) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(834, 829) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(829, 1049) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1049, 829) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(830, 831) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(831, 830) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(830, 832) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(832, 830) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(830, 833) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(833, 830) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(832, 863) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(863, 832) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(833, 838) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(838, 833) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(834, 837) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(837, 834) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(835, 837) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(837, 835) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(835, 840) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(840, 835) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(835, 1055) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1055, 835) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(836, 837) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(837, 836) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(836, 838) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(838, 836) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(836, 839) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(839, 836) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(839, 844) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(844, 839) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(840, 843) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(843, 840) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(841, 843) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(843, 841) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(841, 846) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(846, 841) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(841, 1061) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1061, 841) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(842, 843) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(843, 842) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(842, 844) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(844, 842) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(842, 845) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(845, 842) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(845, 850) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(850, 845) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(846, 849) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(849, 846) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(847, 849) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(849, 847) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(847, 852) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(852, 847) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(847, 1067) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1067, 847) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(848, 849) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(849, 848) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(848, 850) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(850, 848) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(848, 851) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(851, 848) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(851, 856) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(856, 851) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(852, 855) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(855, 852) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(853, 855) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(855, 853) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(853, 858) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(858, 853) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(853, 1073) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1073, 853) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(854, 855) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(855, 854) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(854, 856) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(856, 854) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(854, 857) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(857, 854) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(857, 862) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(862, 857) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(858, 861) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(861, 858) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(859, 861) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(861, 859) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(859, 1079) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1079, 859) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(860, 861) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(861, 860) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(860, 862) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(862, 860) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(860, 863) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(863, 860) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(864, 867) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(867, 864) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(864, 895) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(895, 864) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(864, 1048) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1048, 864) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(865, 867) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(867, 865) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(865, 870) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(870, 865) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(865, 1085) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1085, 865) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(866, 867) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(867, 866) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(866, 868) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(868, 866) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(866, 869) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(869, 866) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(868, 899) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(899, 868) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(868, 900) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(900, 868) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(869, 874) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(874, 869) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(870, 873) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(873, 870) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(870, 1054) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1054, 870) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(871, 873) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(873, 871) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(871, 876) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(876, 871) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(871, 1091) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1091, 871) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(872, 873) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(873, 872) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(872, 874) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(874, 872) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(872, 875) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(875, 872) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(874, 906) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(906, 874) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(875, 880) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(880, 875) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(876, 879) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(879, 876) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(876, 1060) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1060, 876) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(877, 879) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(879, 877) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(877, 882) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(882, 877) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(877, 1097) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1097, 877) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(878, 879) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(879, 878) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(878, 880) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(880, 878) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(878, 881) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(881, 878) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(880, 912) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(912, 880) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(881, 886) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(886, 881) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(882, 885) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(885, 882) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(882, 1066) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1066, 882) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(883, 885) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(885, 883) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(883, 888) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(888, 883) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(883, 1103) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1103, 883) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(884, 885) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(885, 884) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(884, 886) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(886, 884) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(884, 887) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(887, 884) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(886, 918) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(918, 886) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(887, 892) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(892, 887) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(888, 891) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(891, 888) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(888, 1072) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1072, 888) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(889, 891) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(891, 889) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(889, 894) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(894, 889) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(889, 1109) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1109, 889) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(890, 891) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(891, 890) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(890, 892) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(892, 890) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(890, 893) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(893, 890) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(892, 924) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(924, 892) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(893, 898) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(898, 893) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(894, 897) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(897, 894) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(894, 1078) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1078, 894) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(895, 897) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(897, 895) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(895, 1115) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1115, 895) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(896, 897) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(897, 896) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(896, 898) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(898, 896) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(896, 899) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(899, 896) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(898, 930) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(930, 898) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(900, 903) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(903, 900) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(900, 931) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(931, 900) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(901, 903) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(903, 901) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(901, 906) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(906, 901) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(901, 1121) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1121, 901) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(902, 903) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(903, 902) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(902, 904) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(904, 902) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(902, 905) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(905, 902) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(904, 935) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(935, 904) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(904, 936) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(936, 904) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(905, 910) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(910, 905) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(906, 909) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(909, 906) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(907, 909) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(909, 907) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(907, 912) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(912, 907) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(907, 1127) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1127, 907) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(908, 909) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(909, 908) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(908, 910) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(910, 908) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(908, 911) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(911, 908) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(910, 942) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(942, 910) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(911, 916) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(916, 911) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(912, 915) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(915, 912) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(913, 915) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(915, 913) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(913, 918) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(918, 913) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(913, 1133) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1133, 913) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(914, 915) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(915, 914) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(914, 916) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(916, 914) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(914, 917) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(917, 914) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(916, 948) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(948, 916) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(917, 922) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(922, 917) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(918, 921) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(921, 918) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(919, 921) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(921, 919) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(919, 924) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(924, 919) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(919, 1139) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1139, 919) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(920, 921) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(921, 920) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(920, 922) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(922, 920) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(920, 923) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(923, 920) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(922, 954) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(954, 922) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(923, 928) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(928, 923) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(924, 927) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(927, 924) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(925, 927) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(927, 925) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(925, 930) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(930, 925) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(925, 1145) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1145, 925) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(926, 927) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(927, 926) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(926, 928) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(928, 926) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(926, 929) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(929, 926) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(928, 960) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(960, 928) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(929, 934) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(934, 929) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(930, 933) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(933, 930) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(931, 933) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(933, 931) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(931, 1151) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1151, 931) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(932, 933) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(933, 932) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(932, 934) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(934, 932) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(932, 935) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(935, 932) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(934, 966) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(966, 934) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(936, 939) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(939, 936) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(936, 967) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(967, 936) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(937, 939) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(939, 937) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(937, 942) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(942, 937) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(937, 1157) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1157, 937) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(938, 939) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(939, 938) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(938, 940) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(940, 938) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(938, 941) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(941, 938) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(940, 971) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(971, 940) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(940, 972) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(972, 940) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(941, 946) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(946, 941) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(942, 945) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(945, 942) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(943, 945) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(945, 943) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(943, 948) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(948, 943) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(943, 1163) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1163, 943) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(944, 945) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(945, 944) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(944, 946) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(946, 944) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(944, 947) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(947, 944) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(946, 978) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(978, 946) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(947, 952) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(952, 947) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(948, 951) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(951, 948) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(949, 951) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(951, 949) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(949, 954) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(954, 949) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(949, 1169) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1169, 949) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(950, 951) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(951, 950) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(950, 952) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(952, 950) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(950, 953) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(953, 950) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(952, 984) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(984, 952) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(953, 958) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(958, 953) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(954, 957) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(957, 954) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(955, 957) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(957, 955) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(955, 960) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(960, 955) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(955, 1175) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1175, 955) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(956, 957) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(957, 956) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(956, 958) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(958, 956) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(956, 959) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(959, 956) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(958, 990) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(990, 958) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(959, 964) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(964, 959) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(960, 963) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(963, 960) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(961, 963) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(963, 961) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(961, 966) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(966, 961) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(961, 1181) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1181, 961) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(962, 963) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(963, 962) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(962, 964) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(964, 962) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(962, 965) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(965, 962) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(964, 996) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(996, 964) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(965, 970) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(970, 965) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(966, 969) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(969, 966) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(967, 969) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(969, 967) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(967, 1187) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1187, 967) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(968, 969) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(969, 968) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(968, 970) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(970, 968) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(968, 971) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(971, 968) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(970, 1002) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1002, 970) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(972, 975) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(975, 972) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(972, 1003) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1003, 972) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(973, 975) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(975, 973) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(973, 978) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(978, 973) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(973, 1193) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1193, 973) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(974, 975) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(975, 974) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(974, 976) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(976, 974) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(974, 977) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(977, 974) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(976, 1007) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1007, 976) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(976, 1008) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1008, 976) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(977, 982) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(982, 977) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(978, 981) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(981, 978) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(979, 981) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(981, 979) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(979, 984) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(984, 979) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(979, 1199) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1199, 979) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(980, 981) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(981, 980) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(980, 982) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(982, 980) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(980, 983) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(983, 980) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(982, 1014) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1014, 982) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(983, 988) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(988, 983) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(984, 987) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(987, 984) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(985, 987) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(987, 985) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(985, 990) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(990, 985) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(985, 1205) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1205, 985) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(986, 987) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(987, 986) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(986, 988) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(988, 986) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(986, 989) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(989, 986) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(988, 1020) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1020, 988) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(989, 994) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(994, 989) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(990, 993) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(993, 990) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(991, 993) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(993, 991) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(991, 996) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(996, 991) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(991, 1211) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1211, 991) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(992, 993) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(993, 992) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(992, 994) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(994, 992) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(992, 995) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(995, 992) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(994, 1026) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1026, 994) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(995, 1000) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1000, 995) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(996, 999) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(999, 996) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(997, 999) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(999, 997) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(997, 1002) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1002, 997) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(997, 1217) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1217, 997) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(998, 999) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(999, 998) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(998, 1000) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1000, 998) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(998, 1001) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1001, 998) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1000, 1032) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1032, 1000) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1001, 1006) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1006, 1001) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1002, 1005) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1005, 1002) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1003, 1005) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1005, 1003) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1003, 1223) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1223, 1003) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1004, 1005) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1005, 1004) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1004, 1006) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1006, 1004) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1004, 1007) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1007, 1004) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1006, 1038) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1038, 1006) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1008, 1011) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1011, 1008) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1008, 1039) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1039, 1008) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1009, 1011) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1011, 1009) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1009, 1014) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1014, 1009) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1009, 1229) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1229, 1009) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1010, 1011) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1011, 1010) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1010, 1012) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1012, 1010) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1010, 1013) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1013, 1010) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1012, 1043) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1043, 1012) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1012, 1044) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1044, 1012) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1013, 1018) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1018, 1013) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1014, 1017) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1017, 1014) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1015, 1017) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1017, 1015) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1015, 1020) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1020, 1015) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1015, 1235) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1235, 1015) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1016, 1017) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1017, 1016) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1016, 1018) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1018, 1016) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1016, 1019) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1019, 1016) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1018, 1050) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1050, 1018) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1019, 1024) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1024, 1019) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1020, 1023) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1023, 1020) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1021, 1023) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1023, 1021) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1021, 1026) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1026, 1021) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1021, 1241) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1241, 1021) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1022, 1023) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1023, 1022) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1022, 1024) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1024, 1022) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1022, 1025) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1025, 1022) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1024, 1056) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1056, 1024) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1025, 1030) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1030, 1025) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1026, 1029) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1029, 1026) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1027, 1029) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1029, 1027) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1027, 1032) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1032, 1027) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1027, 1247) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1247, 1027) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1028, 1029) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1029, 1028) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1028, 1030) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1030, 1028) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1028, 1031) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1031, 1028) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1030, 1062) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1062, 1030) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1031, 1036) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1036, 1031) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1032, 1035) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1035, 1032) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1033, 1035) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1035, 1033) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1033, 1038) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1038, 1033) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1033, 1253) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1253, 1033) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1034, 1035) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1035, 1034) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1034, 1036) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1036, 1034) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1034, 1037) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1037, 1034) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1036, 1068) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1068, 1036) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1037, 1042) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1042, 1037) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1038, 1041) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1041, 1038) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1039, 1041) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1041, 1039) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1039, 1259) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1259, 1039) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1040, 1041) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1041, 1040) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1040, 1042) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1042, 1040) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1040, 1043) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1043, 1040) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1042, 1074) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1074, 1042) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1044, 1047) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1047, 1044) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1044, 1075) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1075, 1044) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1045, 1047) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1047, 1045) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1045, 1050) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1050, 1045) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1045, 1265) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1265, 1045) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1046, 1047) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1047, 1046) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1046, 1048) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1048, 1046) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1046, 1049) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1049, 1046) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1048, 1079) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1079, 1048) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1049, 1054) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1054, 1049) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1050, 1053) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1053, 1050) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1051, 1053) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1053, 1051) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1051, 1056) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1056, 1051) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1051, 1271) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1271, 1051) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1052, 1053) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1053, 1052) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1052, 1054) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1054, 1052) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1052, 1055) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1055, 1052) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1055, 1060) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1060, 1055) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1056, 1059) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1059, 1056) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1057, 1059) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1059, 1057) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1057, 1062) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1062, 1057) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1057, 1277) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1277, 1057) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1058, 1059) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1059, 1058) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1058, 1060) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1060, 1058) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1058, 1061) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1061, 1058) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1061, 1066) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1066, 1061) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1062, 1065) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1065, 1062) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1063, 1065) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1065, 1063) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1063, 1068) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1068, 1063) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1063, 1283) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1283, 1063) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1064, 1065) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1065, 1064) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1064, 1066) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1066, 1064) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1064, 1067) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1067, 1064) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1067, 1072) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1072, 1067) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1068, 1071) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1071, 1068) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1069, 1071) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1071, 1069) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1069, 1074) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1074, 1069) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1069, 1289) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1289, 1069) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1070, 1071) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1071, 1070) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1070, 1072) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1072, 1070) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1070, 1073) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1073, 1070) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1073, 1078) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1078, 1073) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1074, 1077) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1077, 1074) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1075, 1077) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1077, 1075) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1075, 1295) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1295, 1075) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1076, 1077) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1077, 1076) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1076, 1078) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1078, 1076) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1076, 1079) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1079, 1076) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1080, 1083) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1083, 1080) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1080, 1111) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1111, 1080) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1080, 1264) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1264, 1080) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1081, 1083) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1083, 1081) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1081, 1086) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1086, 1081) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1082, 1083) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1083, 1082) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1082, 1084) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1084, 1082) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1082, 1085) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1085, 1082) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1084, 1115) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1115, 1084) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1084, 1116) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1116, 1084) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1085, 1090) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1090, 1085) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1086, 1089) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1089, 1086) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1086, 1270) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1270, 1086) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1087, 1089) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1089, 1087) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1087, 1092) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1092, 1087) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1088, 1089) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1089, 1088) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1088, 1090) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1090, 1088) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1088, 1091) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1091, 1088) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1090, 1122) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1122, 1090) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1091, 1096) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1096, 1091) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1092, 1095) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1095, 1092) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1092, 1276) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1276, 1092) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1093, 1095) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1095, 1093) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1093, 1098) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1098, 1093) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1094, 1095) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1095, 1094) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1094, 1096) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1096, 1094) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1094, 1097) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1097, 1094) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1096, 1128) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1128, 1096) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1097, 1102) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1102, 1097) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1098, 1101) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1101, 1098) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1098, 1282) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1282, 1098) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1099, 1101) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1101, 1099) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1099, 1104) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1104, 1099) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1100, 1101) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1101, 1100) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1100, 1102) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1102, 1100) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1100, 1103) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1103, 1100) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1102, 1134) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1134, 1102) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1103, 1108) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1108, 1103) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1104, 1107) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1107, 1104) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1104, 1288) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1288, 1104) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1105, 1107) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1107, 1105) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1105, 1110) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1110, 1105) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1106, 1107) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1107, 1106) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1106, 1108) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1108, 1106) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1106, 1109) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1109, 1106) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1108, 1140) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1140, 1108) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1109, 1114) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1114, 1109) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1110, 1113) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1113, 1110) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1110, 1294) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1294, 1110) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1111, 1113) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1113, 1111) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1112, 1113) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1113, 1112) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1112, 1114) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1114, 1112) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1112, 1115) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1115, 1112) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1114, 1146) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1146, 1114) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1116, 1119) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1119, 1116) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1116, 1147) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1147, 1116) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1117, 1119) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1119, 1117) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1117, 1122) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1122, 1117) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1118, 1119) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1119, 1118) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1118, 1120) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1120, 1118) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1118, 1121) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1121, 1118) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1120, 1151) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1151, 1120) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1120, 1152) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1152, 1120) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1121, 1126) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1126, 1121) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1122, 1125) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1125, 1122) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1123, 1125) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1125, 1123) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1123, 1128) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1128, 1123) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1124, 1125) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1125, 1124) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1124, 1126) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1126, 1124) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1124, 1127) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1127, 1124) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1126, 1158) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1158, 1126) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1127, 1132) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1132, 1127) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1128, 1131) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1131, 1128) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1129, 1131) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1131, 1129) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1129, 1134) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1134, 1129) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1130, 1131) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1131, 1130) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1130, 1132) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1132, 1130) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1130, 1133) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1133, 1130) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1132, 1164) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1164, 1132) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1133, 1138) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1138, 1133) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1134, 1137) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1137, 1134) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1135, 1137) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1137, 1135) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1135, 1140) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1140, 1135) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1136, 1137) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1137, 1136) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1136, 1138) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1138, 1136) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1136, 1139) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1139, 1136) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1138, 1170) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1170, 1138) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1139, 1144) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1144, 1139) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1140, 1143) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1143, 1140) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1141, 1143) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1143, 1141) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1141, 1146) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1146, 1141) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1142, 1143) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1143, 1142) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1142, 1144) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1144, 1142) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1142, 1145) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1145, 1142) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1144, 1176) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1176, 1144) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1145, 1150) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1150, 1145) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1146, 1149) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1149, 1146) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1147, 1149) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1149, 1147) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1148, 1149) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1149, 1148) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1148, 1150) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1150, 1148) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1148, 1151) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1151, 1148) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1150, 1182) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1182, 1150) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1152, 1155) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1155, 1152) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1152, 1183) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1183, 1152) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1153, 1155) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1155, 1153) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1153, 1158) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1158, 1153) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1154, 1155) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1155, 1154) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1154, 1156) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1156, 1154) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1154, 1157) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1157, 1154) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1156, 1187) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1187, 1156) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1156, 1188) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1188, 1156) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1157, 1162) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1162, 1157) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1158, 1161) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1161, 1158) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1159, 1161) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1161, 1159) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1159, 1164) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1164, 1159) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1160, 1161) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1161, 1160) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1160, 1162) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1162, 1160) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1160, 1163) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1163, 1160) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1162, 1194) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1194, 1162) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1163, 1168) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1168, 1163) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1164, 1167) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1167, 1164) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1165, 1167) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1167, 1165) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1165, 1170) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1170, 1165) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1166, 1167) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1167, 1166) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1166, 1168) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1168, 1166) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1166, 1169) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1169, 1166) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1168, 1200) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1200, 1168) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1169, 1174) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1174, 1169) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1170, 1173) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1173, 1170) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1171, 1173) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1173, 1171) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1171, 1176) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1176, 1171) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1172, 1173) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1173, 1172) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1172, 1174) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1174, 1172) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1172, 1175) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1175, 1172) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1174, 1206) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1206, 1174) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1175, 1180) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1180, 1175) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1176, 1179) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1179, 1176) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1177, 1179) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1179, 1177) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1177, 1182) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1182, 1177) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1178, 1179) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1179, 1178) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1178, 1180) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1180, 1178) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1178, 1181) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1181, 1178) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1180, 1212) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1212, 1180) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1181, 1186) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1186, 1181) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1182, 1185) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1185, 1182) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1183, 1185) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1185, 1183) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1184, 1185) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1185, 1184) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1184, 1186) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1186, 1184) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1184, 1187) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1187, 1184) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1186, 1218) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1218, 1186) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1188, 1191) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1191, 1188) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1188, 1219) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1219, 1188) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1189, 1191) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1191, 1189) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1189, 1194) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1194, 1189) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1190, 1191) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1191, 1190) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1190, 1192) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1192, 1190) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1190, 1193) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1193, 1190) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1192, 1223) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1223, 1192) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1192, 1224) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1224, 1192) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1193, 1198) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1198, 1193) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1194, 1197) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1197, 1194) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1195, 1197) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1197, 1195) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1195, 1200) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1200, 1195) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1196, 1197) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1197, 1196) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1196, 1198) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1198, 1196) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1196, 1199) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1199, 1196) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1198, 1230) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1230, 1198) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1199, 1204) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1204, 1199) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1200, 1203) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1203, 1200) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1201, 1203) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1203, 1201) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1201, 1206) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1206, 1201) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1202, 1203) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1203, 1202) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1202, 1204) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1204, 1202) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1202, 1205) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1205, 1202) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1204, 1236) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1236, 1204) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1205, 1210) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1210, 1205) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1206, 1209) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1209, 1206) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1207, 1209) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1209, 1207) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1207, 1212) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1212, 1207) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1208, 1209) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1209, 1208) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1208, 1210) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1210, 1208) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1208, 1211) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1211, 1208) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1210, 1242) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1242, 1210) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1211, 1216) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1216, 1211) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1212, 1215) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1215, 1212) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1213, 1215) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1215, 1213) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1213, 1218) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1218, 1213) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1214, 1215) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1215, 1214) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1214, 1216) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1216, 1214) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1214, 1217) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1217, 1214) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1216, 1248) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1248, 1216) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1217, 1222) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1222, 1217) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1218, 1221) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1221, 1218) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1219, 1221) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1221, 1219) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1220, 1221) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1221, 1220) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1220, 1222) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1222, 1220) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1220, 1223) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1223, 1220) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1222, 1254) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1254, 1222) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1224, 1227) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1227, 1224) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1224, 1255) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1255, 1224) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1225, 1227) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1227, 1225) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1225, 1230) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1230, 1225) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1226, 1227) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1227, 1226) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1226, 1228) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1228, 1226) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1226, 1229) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1229, 1226) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1228, 1259) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1259, 1228) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1228, 1260) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1260, 1228) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1229, 1234) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1234, 1229) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1230, 1233) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1233, 1230) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1231, 1233) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1233, 1231) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1231, 1236) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1236, 1231) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1232, 1233) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1233, 1232) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1232, 1234) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1234, 1232) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1232, 1235) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1235, 1232) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1234, 1266) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1266, 1234) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1235, 1240) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1240, 1235) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1236, 1239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1239, 1236) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1237, 1239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1239, 1237) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1237, 1242) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1242, 1237) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1238, 1239) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1239, 1238) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1238, 1240) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1240, 1238) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1238, 1241) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1241, 1238) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1240, 1272) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1272, 1240) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1241, 1246) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1246, 1241) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1242, 1245) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1245, 1242) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1243, 1245) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1245, 1243) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1243, 1248) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1248, 1243) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1244, 1245) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1245, 1244) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1244, 1246) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1246, 1244) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1244, 1247) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1247, 1244) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1246, 1278) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1278, 1246) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1247, 1252) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1252, 1247) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1248, 1251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1251, 1248) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1249, 1251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1251, 1249) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1249, 1254) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1254, 1249) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1250, 1251) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1251, 1250) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1250, 1252) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1252, 1250) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1250, 1253) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1253, 1250) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1252, 1284) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1284, 1252) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1253, 1258) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1258, 1253) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1254, 1257) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1257, 1254) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1255, 1257) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1257, 1255) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1256, 1257) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1257, 1256) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1256, 1258) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1258, 1256) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1256, 1259) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1259, 1256) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1258, 1290) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1290, 1258) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1260, 1263) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1263, 1260) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1260, 1291) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1291, 1260) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1261, 1263) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1263, 1261) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1261, 1266) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1266, 1261) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1262, 1263) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1263, 1262) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1262, 1264) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1264, 1262) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1262, 1265) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1265, 1262) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1264, 1295) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1295, 1264) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1265, 1270) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1270, 1265) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1266, 1269) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1269, 1266) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1267, 1269) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1269, 1267) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1267, 1272) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1272, 1267) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1268, 1269) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1269, 1268) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1268, 1270) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1270, 1268) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1268, 1271) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1271, 1268) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1271, 1276) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1276, 1271) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1272, 1275) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1275, 1272) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1273, 1275) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1275, 1273) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1273, 1278) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1278, 1273) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1274, 1275) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1275, 1274) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1274, 1276) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1276, 1274) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1274, 1277) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1277, 1274) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1277, 1282) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1282, 1277) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1278, 1281) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1281, 1278) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1279, 1281) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1281, 1279) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1279, 1284) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1284, 1279) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1280, 1281) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1281, 1280) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1280, 1282) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1282, 1280) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1280, 1283) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1283, 1280) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1283, 1288) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1288, 1283) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1284, 1287) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1287, 1284) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1285, 1287) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1287, 1285) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1285, 1290) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1290, 1285) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1286, 1287) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1287, 1286) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1286, 1288) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1288, 1286) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1286, 1289) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1289, 1286) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1289, 1294) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1294, 1289) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1290, 1293) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1293, 1290) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1291, 1293) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1293, 1291) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1292, 1293) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1293, 1292) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1292, 1294) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1294, 1292) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1292, 1295) = std::complex<double>(0.0, 2.0*-0.3333333333333333);
   A(1295, 1292) = -std::complex<double>(0.0, 2.0*-0.3333333333333333);
   return A;
}

std::vector<int> non_zeros()
{
    std::vector<int> nz;
    int coo;
    coo = 1296*0 + 3;
    nz.push_back(coo);
    coo = 1296*0 + 31;
    nz.push_back(coo);
    coo = 1296*0 + 184;
    nz.push_back(coo);
    coo = 1296*1 + 3;
    nz.push_back(coo);
    coo = 1296*1 + 6;
    nz.push_back(coo);
    coo = 1296*1 + 221;
    nz.push_back(coo);
    coo = 1296*2 + 3;
    nz.push_back(coo);
    coo = 1296*2 + 4;
    nz.push_back(coo);
    coo = 1296*2 + 5;
    nz.push_back(coo);
    coo = 1296*4 + 35;
    nz.push_back(coo);
    coo = 1296*4 + 36;
    nz.push_back(coo);
    coo = 1296*5 + 10;
    nz.push_back(coo);
    coo = 1296*5 + 1081;
    nz.push_back(coo);
    coo = 1296*6 + 9;
    nz.push_back(coo);
    coo = 1296*6 + 190;
    nz.push_back(coo);
    coo = 1296*7 + 9;
    nz.push_back(coo);
    coo = 1296*7 + 12;
    nz.push_back(coo);
    coo = 1296*7 + 227;
    nz.push_back(coo);
    coo = 1296*8 + 9;
    nz.push_back(coo);
    coo = 1296*8 + 10;
    nz.push_back(coo);
    coo = 1296*8 + 11;
    nz.push_back(coo);
    coo = 1296*10 + 42;
    nz.push_back(coo);
    coo = 1296*11 + 16;
    nz.push_back(coo);
    coo = 1296*11 + 1087;
    nz.push_back(coo);
    coo = 1296*12 + 15;
    nz.push_back(coo);
    coo = 1296*12 + 196;
    nz.push_back(coo);
    coo = 1296*13 + 15;
    nz.push_back(coo);
    coo = 1296*13 + 18;
    nz.push_back(coo);
    coo = 1296*13 + 233;
    nz.push_back(coo);
    coo = 1296*14 + 15;
    nz.push_back(coo);
    coo = 1296*14 + 16;
    nz.push_back(coo);
    coo = 1296*14 + 17;
    nz.push_back(coo);
    coo = 1296*16 + 48;
    nz.push_back(coo);
    coo = 1296*17 + 22;
    nz.push_back(coo);
    coo = 1296*17 + 1093;
    nz.push_back(coo);
    coo = 1296*18 + 21;
    nz.push_back(coo);
    coo = 1296*18 + 202;
    nz.push_back(coo);
    coo = 1296*19 + 21;
    nz.push_back(coo);
    coo = 1296*19 + 24;
    nz.push_back(coo);
    coo = 1296*19 + 239;
    nz.push_back(coo);
    coo = 1296*20 + 21;
    nz.push_back(coo);
    coo = 1296*20 + 22;
    nz.push_back(coo);
    coo = 1296*20 + 23;
    nz.push_back(coo);
    coo = 1296*22 + 54;
    nz.push_back(coo);
    coo = 1296*23 + 28;
    nz.push_back(coo);
    coo = 1296*23 + 1099;
    nz.push_back(coo);
    coo = 1296*24 + 27;
    nz.push_back(coo);
    coo = 1296*24 + 208;
    nz.push_back(coo);
    coo = 1296*25 + 27;
    nz.push_back(coo);
    coo = 1296*25 + 30;
    nz.push_back(coo);
    coo = 1296*25 + 245;
    nz.push_back(coo);
    coo = 1296*26 + 27;
    nz.push_back(coo);
    coo = 1296*26 + 28;
    nz.push_back(coo);
    coo = 1296*26 + 29;
    nz.push_back(coo);
    coo = 1296*28 + 60;
    nz.push_back(coo);
    coo = 1296*29 + 34;
    nz.push_back(coo);
    coo = 1296*29 + 1105;
    nz.push_back(coo);
    coo = 1296*30 + 33;
    nz.push_back(coo);
    coo = 1296*30 + 214;
    nz.push_back(coo);
    coo = 1296*31 + 33;
    nz.push_back(coo);
    coo = 1296*31 + 251;
    nz.push_back(coo);
    coo = 1296*32 + 33;
    nz.push_back(coo);
    coo = 1296*32 + 34;
    nz.push_back(coo);
    coo = 1296*32 + 35;
    nz.push_back(coo);
    coo = 1296*34 + 66;
    nz.push_back(coo);
    coo = 1296*35 + 1111;
    nz.push_back(coo);
    coo = 1296*36 + 39;
    nz.push_back(coo);
    coo = 1296*36 + 67;
    nz.push_back(coo);
    coo = 1296*37 + 39;
    nz.push_back(coo);
    coo = 1296*37 + 42;
    nz.push_back(coo);
    coo = 1296*37 + 257;
    nz.push_back(coo);
    coo = 1296*38 + 39;
    nz.push_back(coo);
    coo = 1296*38 + 40;
    nz.push_back(coo);
    coo = 1296*38 + 41;
    nz.push_back(coo);
    coo = 1296*40 + 71;
    nz.push_back(coo);
    coo = 1296*40 + 72;
    nz.push_back(coo);
    coo = 1296*41 + 46;
    nz.push_back(coo);
    coo = 1296*41 + 1117;
    nz.push_back(coo);
    coo = 1296*42 + 45;
    nz.push_back(coo);
    coo = 1296*43 + 45;
    nz.push_back(coo);
    coo = 1296*43 + 48;
    nz.push_back(coo);
    coo = 1296*43 + 263;
    nz.push_back(coo);
    coo = 1296*44 + 45;
    nz.push_back(coo);
    coo = 1296*44 + 46;
    nz.push_back(coo);
    coo = 1296*44 + 47;
    nz.push_back(coo);
    coo = 1296*46 + 78;
    nz.push_back(coo);
    coo = 1296*47 + 52;
    nz.push_back(coo);
    coo = 1296*47 + 1123;
    nz.push_back(coo);
    coo = 1296*48 + 51;
    nz.push_back(coo);
    coo = 1296*49 + 51;
    nz.push_back(coo);
    coo = 1296*49 + 54;
    nz.push_back(coo);
    coo = 1296*49 + 269;
    nz.push_back(coo);
    coo = 1296*50 + 51;
    nz.push_back(coo);
    coo = 1296*50 + 52;
    nz.push_back(coo);
    coo = 1296*50 + 53;
    nz.push_back(coo);
    coo = 1296*52 + 84;
    nz.push_back(coo);
    coo = 1296*53 + 58;
    nz.push_back(coo);
    coo = 1296*53 + 1129;
    nz.push_back(coo);
    coo = 1296*54 + 57;
    nz.push_back(coo);
    coo = 1296*55 + 57;
    nz.push_back(coo);
    coo = 1296*55 + 60;
    nz.push_back(coo);
    coo = 1296*55 + 275;
    nz.push_back(coo);
    coo = 1296*56 + 57;
    nz.push_back(coo);
    coo = 1296*56 + 58;
    nz.push_back(coo);
    coo = 1296*56 + 59;
    nz.push_back(coo);
    coo = 1296*58 + 90;
    nz.push_back(coo);
    coo = 1296*59 + 64;
    nz.push_back(coo);
    coo = 1296*59 + 1135;
    nz.push_back(coo);
    coo = 1296*60 + 63;
    nz.push_back(coo);
    coo = 1296*61 + 63;
    nz.push_back(coo);
    coo = 1296*61 + 66;
    nz.push_back(coo);
    coo = 1296*61 + 281;
    nz.push_back(coo);
    coo = 1296*62 + 63;
    nz.push_back(coo);
    coo = 1296*62 + 64;
    nz.push_back(coo);
    coo = 1296*62 + 65;
    nz.push_back(coo);
    coo = 1296*64 + 96;
    nz.push_back(coo);
    coo = 1296*65 + 70;
    nz.push_back(coo);
    coo = 1296*65 + 1141;
    nz.push_back(coo);
    coo = 1296*66 + 69;
    nz.push_back(coo);
    coo = 1296*67 + 69;
    nz.push_back(coo);
    coo = 1296*67 + 287;
    nz.push_back(coo);
    coo = 1296*68 + 69;
    nz.push_back(coo);
    coo = 1296*68 + 70;
    nz.push_back(coo);
    coo = 1296*68 + 71;
    nz.push_back(coo);
    coo = 1296*70 + 102;
    nz.push_back(coo);
    coo = 1296*71 + 1147;
    nz.push_back(coo);
    coo = 1296*72 + 75;
    nz.push_back(coo);
    coo = 1296*72 + 103;
    nz.push_back(coo);
    coo = 1296*73 + 75;
    nz.push_back(coo);
    coo = 1296*73 + 78;
    nz.push_back(coo);
    coo = 1296*73 + 293;
    nz.push_back(coo);
    coo = 1296*74 + 75;
    nz.push_back(coo);
    coo = 1296*74 + 76;
    nz.push_back(coo);
    coo = 1296*74 + 77;
    nz.push_back(coo);
    coo = 1296*76 + 107;
    nz.push_back(coo);
    coo = 1296*76 + 108;
    nz.push_back(coo);
    coo = 1296*77 + 82;
    nz.push_back(coo);
    coo = 1296*77 + 1153;
    nz.push_back(coo);
    coo = 1296*78 + 81;
    nz.push_back(coo);
    coo = 1296*79 + 81;
    nz.push_back(coo);
    coo = 1296*79 + 84;
    nz.push_back(coo);
    coo = 1296*79 + 299;
    nz.push_back(coo);
    coo = 1296*80 + 81;
    nz.push_back(coo);
    coo = 1296*80 + 82;
    nz.push_back(coo);
    coo = 1296*80 + 83;
    nz.push_back(coo);
    coo = 1296*82 + 114;
    nz.push_back(coo);
    coo = 1296*83 + 88;
    nz.push_back(coo);
    coo = 1296*83 + 1159;
    nz.push_back(coo);
    coo = 1296*84 + 87;
    nz.push_back(coo);
    coo = 1296*85 + 87;
    nz.push_back(coo);
    coo = 1296*85 + 90;
    nz.push_back(coo);
    coo = 1296*85 + 305;
    nz.push_back(coo);
    coo = 1296*86 + 87;
    nz.push_back(coo);
    coo = 1296*86 + 88;
    nz.push_back(coo);
    coo = 1296*86 + 89;
    nz.push_back(coo);
    coo = 1296*88 + 120;
    nz.push_back(coo);
    coo = 1296*89 + 94;
    nz.push_back(coo);
    coo = 1296*89 + 1165;
    nz.push_back(coo);
    coo = 1296*90 + 93;
    nz.push_back(coo);
    coo = 1296*91 + 93;
    nz.push_back(coo);
    coo = 1296*91 + 96;
    nz.push_back(coo);
    coo = 1296*91 + 311;
    nz.push_back(coo);
    coo = 1296*92 + 93;
    nz.push_back(coo);
    coo = 1296*92 + 94;
    nz.push_back(coo);
    coo = 1296*92 + 95;
    nz.push_back(coo);
    coo = 1296*94 + 126;
    nz.push_back(coo);
    coo = 1296*95 + 100;
    nz.push_back(coo);
    coo = 1296*95 + 1171;
    nz.push_back(coo);
    coo = 1296*96 + 99;
    nz.push_back(coo);
    coo = 1296*97 + 99;
    nz.push_back(coo);
    coo = 1296*97 + 102;
    nz.push_back(coo);
    coo = 1296*97 + 317;
    nz.push_back(coo);
    coo = 1296*98 + 99;
    nz.push_back(coo);
    coo = 1296*98 + 100;
    nz.push_back(coo);
    coo = 1296*98 + 101;
    nz.push_back(coo);
    coo = 1296*100 + 132;
    nz.push_back(coo);
    coo = 1296*101 + 106;
    nz.push_back(coo);
    coo = 1296*101 + 1177;
    nz.push_back(coo);
    coo = 1296*102 + 105;
    nz.push_back(coo);
    coo = 1296*103 + 105;
    nz.push_back(coo);
    coo = 1296*103 + 323;
    nz.push_back(coo);
    coo = 1296*104 + 105;
    nz.push_back(coo);
    coo = 1296*104 + 106;
    nz.push_back(coo);
    coo = 1296*104 + 107;
    nz.push_back(coo);
    coo = 1296*106 + 138;
    nz.push_back(coo);
    coo = 1296*107 + 1183;
    nz.push_back(coo);
    coo = 1296*108 + 111;
    nz.push_back(coo);
    coo = 1296*108 + 139;
    nz.push_back(coo);
    coo = 1296*109 + 111;
    nz.push_back(coo);
    coo = 1296*109 + 114;
    nz.push_back(coo);
    coo = 1296*109 + 329;
    nz.push_back(coo);
    coo = 1296*110 + 111;
    nz.push_back(coo);
    coo = 1296*110 + 112;
    nz.push_back(coo);
    coo = 1296*110 + 113;
    nz.push_back(coo);
    coo = 1296*112 + 143;
    nz.push_back(coo);
    coo = 1296*112 + 144;
    nz.push_back(coo);
    coo = 1296*113 + 118;
    nz.push_back(coo);
    coo = 1296*113 + 1189;
    nz.push_back(coo);
    coo = 1296*114 + 117;
    nz.push_back(coo);
    coo = 1296*115 + 117;
    nz.push_back(coo);
    coo = 1296*115 + 120;
    nz.push_back(coo);
    coo = 1296*115 + 335;
    nz.push_back(coo);
    coo = 1296*116 + 117;
    nz.push_back(coo);
    coo = 1296*116 + 118;
    nz.push_back(coo);
    coo = 1296*116 + 119;
    nz.push_back(coo);
    coo = 1296*118 + 150;
    nz.push_back(coo);
    coo = 1296*119 + 124;
    nz.push_back(coo);
    coo = 1296*119 + 1195;
    nz.push_back(coo);
    coo = 1296*120 + 123;
    nz.push_back(coo);
    coo = 1296*121 + 123;
    nz.push_back(coo);
    coo = 1296*121 + 126;
    nz.push_back(coo);
    coo = 1296*121 + 341;
    nz.push_back(coo);
    coo = 1296*122 + 123;
    nz.push_back(coo);
    coo = 1296*122 + 124;
    nz.push_back(coo);
    coo = 1296*122 + 125;
    nz.push_back(coo);
    coo = 1296*124 + 156;
    nz.push_back(coo);
    coo = 1296*125 + 130;
    nz.push_back(coo);
    coo = 1296*125 + 1201;
    nz.push_back(coo);
    coo = 1296*126 + 129;
    nz.push_back(coo);
    coo = 1296*127 + 129;
    nz.push_back(coo);
    coo = 1296*127 + 132;
    nz.push_back(coo);
    coo = 1296*127 + 347;
    nz.push_back(coo);
    coo = 1296*128 + 129;
    nz.push_back(coo);
    coo = 1296*128 + 130;
    nz.push_back(coo);
    coo = 1296*128 + 131;
    nz.push_back(coo);
    coo = 1296*130 + 162;
    nz.push_back(coo);
    coo = 1296*131 + 136;
    nz.push_back(coo);
    coo = 1296*131 + 1207;
    nz.push_back(coo);
    coo = 1296*132 + 135;
    nz.push_back(coo);
    coo = 1296*133 + 135;
    nz.push_back(coo);
    coo = 1296*133 + 138;
    nz.push_back(coo);
    coo = 1296*133 + 353;
    nz.push_back(coo);
    coo = 1296*134 + 135;
    nz.push_back(coo);
    coo = 1296*134 + 136;
    nz.push_back(coo);
    coo = 1296*134 + 137;
    nz.push_back(coo);
    coo = 1296*136 + 168;
    nz.push_back(coo);
    coo = 1296*137 + 142;
    nz.push_back(coo);
    coo = 1296*137 + 1213;
    nz.push_back(coo);
    coo = 1296*138 + 141;
    nz.push_back(coo);
    coo = 1296*139 + 141;
    nz.push_back(coo);
    coo = 1296*139 + 359;
    nz.push_back(coo);
    coo = 1296*140 + 141;
    nz.push_back(coo);
    coo = 1296*140 + 142;
    nz.push_back(coo);
    coo = 1296*140 + 143;
    nz.push_back(coo);
    coo = 1296*142 + 174;
    nz.push_back(coo);
    coo = 1296*143 + 1219;
    nz.push_back(coo);
    coo = 1296*144 + 147;
    nz.push_back(coo);
    coo = 1296*144 + 175;
    nz.push_back(coo);
    coo = 1296*145 + 147;
    nz.push_back(coo);
    coo = 1296*145 + 150;
    nz.push_back(coo);
    coo = 1296*145 + 365;
    nz.push_back(coo);
    coo = 1296*146 + 147;
    nz.push_back(coo);
    coo = 1296*146 + 148;
    nz.push_back(coo);
    coo = 1296*146 + 149;
    nz.push_back(coo);
    coo = 1296*148 + 179;
    nz.push_back(coo);
    coo = 1296*148 + 180;
    nz.push_back(coo);
    coo = 1296*149 + 154;
    nz.push_back(coo);
    coo = 1296*149 + 1225;
    nz.push_back(coo);
    coo = 1296*150 + 153;
    nz.push_back(coo);
    coo = 1296*151 + 153;
    nz.push_back(coo);
    coo = 1296*151 + 156;
    nz.push_back(coo);
    coo = 1296*151 + 371;
    nz.push_back(coo);
    coo = 1296*152 + 153;
    nz.push_back(coo);
    coo = 1296*152 + 154;
    nz.push_back(coo);
    coo = 1296*152 + 155;
    nz.push_back(coo);
    coo = 1296*154 + 186;
    nz.push_back(coo);
    coo = 1296*155 + 160;
    nz.push_back(coo);
    coo = 1296*155 + 1231;
    nz.push_back(coo);
    coo = 1296*156 + 159;
    nz.push_back(coo);
    coo = 1296*157 + 159;
    nz.push_back(coo);
    coo = 1296*157 + 162;
    nz.push_back(coo);
    coo = 1296*157 + 377;
    nz.push_back(coo);
    coo = 1296*158 + 159;
    nz.push_back(coo);
    coo = 1296*158 + 160;
    nz.push_back(coo);
    coo = 1296*158 + 161;
    nz.push_back(coo);
    coo = 1296*160 + 192;
    nz.push_back(coo);
    coo = 1296*161 + 166;
    nz.push_back(coo);
    coo = 1296*161 + 1237;
    nz.push_back(coo);
    coo = 1296*162 + 165;
    nz.push_back(coo);
    coo = 1296*163 + 165;
    nz.push_back(coo);
    coo = 1296*163 + 168;
    nz.push_back(coo);
    coo = 1296*163 + 383;
    nz.push_back(coo);
    coo = 1296*164 + 165;
    nz.push_back(coo);
    coo = 1296*164 + 166;
    nz.push_back(coo);
    coo = 1296*164 + 167;
    nz.push_back(coo);
    coo = 1296*166 + 198;
    nz.push_back(coo);
    coo = 1296*167 + 172;
    nz.push_back(coo);
    coo = 1296*167 + 1243;
    nz.push_back(coo);
    coo = 1296*168 + 171;
    nz.push_back(coo);
    coo = 1296*169 + 171;
    nz.push_back(coo);
    coo = 1296*169 + 174;
    nz.push_back(coo);
    coo = 1296*169 + 389;
    nz.push_back(coo);
    coo = 1296*170 + 171;
    nz.push_back(coo);
    coo = 1296*170 + 172;
    nz.push_back(coo);
    coo = 1296*170 + 173;
    nz.push_back(coo);
    coo = 1296*172 + 204;
    nz.push_back(coo);
    coo = 1296*173 + 178;
    nz.push_back(coo);
    coo = 1296*173 + 1249;
    nz.push_back(coo);
    coo = 1296*174 + 177;
    nz.push_back(coo);
    coo = 1296*175 + 177;
    nz.push_back(coo);
    coo = 1296*175 + 395;
    nz.push_back(coo);
    coo = 1296*176 + 177;
    nz.push_back(coo);
    coo = 1296*176 + 178;
    nz.push_back(coo);
    coo = 1296*176 + 179;
    nz.push_back(coo);
    coo = 1296*178 + 210;
    nz.push_back(coo);
    coo = 1296*179 + 1255;
    nz.push_back(coo);
    coo = 1296*180 + 183;
    nz.push_back(coo);
    coo = 1296*180 + 211;
    nz.push_back(coo);
    coo = 1296*181 + 183;
    nz.push_back(coo);
    coo = 1296*181 + 186;
    nz.push_back(coo);
    coo = 1296*181 + 401;
    nz.push_back(coo);
    coo = 1296*182 + 183;
    nz.push_back(coo);
    coo = 1296*182 + 184;
    nz.push_back(coo);
    coo = 1296*182 + 185;
    nz.push_back(coo);
    coo = 1296*184 + 215;
    nz.push_back(coo);
    coo = 1296*185 + 190;
    nz.push_back(coo);
    coo = 1296*185 + 1261;
    nz.push_back(coo);
    coo = 1296*186 + 189;
    nz.push_back(coo);
    coo = 1296*187 + 189;
    nz.push_back(coo);
    coo = 1296*187 + 192;
    nz.push_back(coo);
    coo = 1296*187 + 407;
    nz.push_back(coo);
    coo = 1296*188 + 189;
    nz.push_back(coo);
    coo = 1296*188 + 190;
    nz.push_back(coo);
    coo = 1296*188 + 191;
    nz.push_back(coo);
    coo = 1296*191 + 196;
    nz.push_back(coo);
    coo = 1296*191 + 1267;
    nz.push_back(coo);
    coo = 1296*192 + 195;
    nz.push_back(coo);
    coo = 1296*193 + 195;
    nz.push_back(coo);
    coo = 1296*193 + 198;
    nz.push_back(coo);
    coo = 1296*193 + 413;
    nz.push_back(coo);
    coo = 1296*194 + 195;
    nz.push_back(coo);
    coo = 1296*194 + 196;
    nz.push_back(coo);
    coo = 1296*194 + 197;
    nz.push_back(coo);
    coo = 1296*197 + 202;
    nz.push_back(coo);
    coo = 1296*197 + 1273;
    nz.push_back(coo);
    coo = 1296*198 + 201;
    nz.push_back(coo);
    coo = 1296*199 + 201;
    nz.push_back(coo);
    coo = 1296*199 + 204;
    nz.push_back(coo);
    coo = 1296*199 + 419;
    nz.push_back(coo);
    coo = 1296*200 + 201;
    nz.push_back(coo);
    coo = 1296*200 + 202;
    nz.push_back(coo);
    coo = 1296*200 + 203;
    nz.push_back(coo);
    coo = 1296*203 + 208;
    nz.push_back(coo);
    coo = 1296*203 + 1279;
    nz.push_back(coo);
    coo = 1296*204 + 207;
    nz.push_back(coo);
    coo = 1296*205 + 207;
    nz.push_back(coo);
    coo = 1296*205 + 210;
    nz.push_back(coo);
    coo = 1296*205 + 425;
    nz.push_back(coo);
    coo = 1296*206 + 207;
    nz.push_back(coo);
    coo = 1296*206 + 208;
    nz.push_back(coo);
    coo = 1296*206 + 209;
    nz.push_back(coo);
    coo = 1296*209 + 214;
    nz.push_back(coo);
    coo = 1296*209 + 1285;
    nz.push_back(coo);
    coo = 1296*210 + 213;
    nz.push_back(coo);
    coo = 1296*211 + 213;
    nz.push_back(coo);
    coo = 1296*211 + 431;
    nz.push_back(coo);
    coo = 1296*212 + 213;
    nz.push_back(coo);
    coo = 1296*212 + 214;
    nz.push_back(coo);
    coo = 1296*212 + 215;
    nz.push_back(coo);
    coo = 1296*215 + 1291;
    nz.push_back(coo);
    coo = 1296*216 + 219;
    nz.push_back(coo);
    coo = 1296*216 + 247;
    nz.push_back(coo);
    coo = 1296*216 + 400;
    nz.push_back(coo);
    coo = 1296*217 + 219;
    nz.push_back(coo);
    coo = 1296*217 + 222;
    nz.push_back(coo);
    coo = 1296*217 + 437;
    nz.push_back(coo);
    coo = 1296*218 + 219;
    nz.push_back(coo);
    coo = 1296*218 + 220;
    nz.push_back(coo);
    coo = 1296*218 + 221;
    nz.push_back(coo);
    coo = 1296*220 + 251;
    nz.push_back(coo);
    coo = 1296*220 + 252;
    nz.push_back(coo);
    coo = 1296*221 + 226;
    nz.push_back(coo);
    coo = 1296*222 + 225;
    nz.push_back(coo);
    coo = 1296*222 + 406;
    nz.push_back(coo);
    coo = 1296*223 + 225;
    nz.push_back(coo);
    coo = 1296*223 + 228;
    nz.push_back(coo);
    coo = 1296*223 + 443;
    nz.push_back(coo);
    coo = 1296*224 + 225;
    nz.push_back(coo);
    coo = 1296*224 + 226;
    nz.push_back(coo);
    coo = 1296*224 + 227;
    nz.push_back(coo);
    coo = 1296*226 + 258;
    nz.push_back(coo);
    coo = 1296*227 + 232;
    nz.push_back(coo);
    coo = 1296*228 + 231;
    nz.push_back(coo);
    coo = 1296*228 + 412;
    nz.push_back(coo);
    coo = 1296*229 + 231;
    nz.push_back(coo);
    coo = 1296*229 + 234;
    nz.push_back(coo);
    coo = 1296*229 + 449;
    nz.push_back(coo);
    coo = 1296*230 + 231;
    nz.push_back(coo);
    coo = 1296*230 + 232;
    nz.push_back(coo);
    coo = 1296*230 + 233;
    nz.push_back(coo);
    coo = 1296*232 + 264;
    nz.push_back(coo);
    coo = 1296*233 + 238;
    nz.push_back(coo);
    coo = 1296*234 + 237;
    nz.push_back(coo);
    coo = 1296*234 + 418;
    nz.push_back(coo);
    coo = 1296*235 + 237;
    nz.push_back(coo);
    coo = 1296*235 + 240;
    nz.push_back(coo);
    coo = 1296*235 + 455;
    nz.push_back(coo);
    coo = 1296*236 + 237;
    nz.push_back(coo);
    coo = 1296*236 + 238;
    nz.push_back(coo);
    coo = 1296*236 + 239;
    nz.push_back(coo);
    coo = 1296*238 + 270;
    nz.push_back(coo);
    coo = 1296*239 + 244;
    nz.push_back(coo);
    coo = 1296*240 + 243;
    nz.push_back(coo);
    coo = 1296*240 + 424;
    nz.push_back(coo);
    coo = 1296*241 + 243;
    nz.push_back(coo);
    coo = 1296*241 + 246;
    nz.push_back(coo);
    coo = 1296*241 + 461;
    nz.push_back(coo);
    coo = 1296*242 + 243;
    nz.push_back(coo);
    coo = 1296*242 + 244;
    nz.push_back(coo);
    coo = 1296*242 + 245;
    nz.push_back(coo);
    coo = 1296*244 + 276;
    nz.push_back(coo);
    coo = 1296*245 + 250;
    nz.push_back(coo);
    coo = 1296*246 + 249;
    nz.push_back(coo);
    coo = 1296*246 + 430;
    nz.push_back(coo);
    coo = 1296*247 + 249;
    nz.push_back(coo);
    coo = 1296*247 + 467;
    nz.push_back(coo);
    coo = 1296*248 + 249;
    nz.push_back(coo);
    coo = 1296*248 + 250;
    nz.push_back(coo);
    coo = 1296*248 + 251;
    nz.push_back(coo);
    coo = 1296*250 + 282;
    nz.push_back(coo);
    coo = 1296*252 + 255;
    nz.push_back(coo);
    coo = 1296*252 + 283;
    nz.push_back(coo);
    coo = 1296*253 + 255;
    nz.push_back(coo);
    coo = 1296*253 + 258;
    nz.push_back(coo);
    coo = 1296*253 + 473;
    nz.push_back(coo);
    coo = 1296*254 + 255;
    nz.push_back(coo);
    coo = 1296*254 + 256;
    nz.push_back(coo);
    coo = 1296*254 + 257;
    nz.push_back(coo);
    coo = 1296*256 + 287;
    nz.push_back(coo);
    coo = 1296*256 + 288;
    nz.push_back(coo);
    coo = 1296*257 + 262;
    nz.push_back(coo);
    coo = 1296*258 + 261;
    nz.push_back(coo);
    coo = 1296*259 + 261;
    nz.push_back(coo);
    coo = 1296*259 + 264;
    nz.push_back(coo);
    coo = 1296*259 + 479;
    nz.push_back(coo);
    coo = 1296*260 + 261;
    nz.push_back(coo);
    coo = 1296*260 + 262;
    nz.push_back(coo);
    coo = 1296*260 + 263;
    nz.push_back(coo);
    coo = 1296*262 + 294;
    nz.push_back(coo);
    coo = 1296*263 + 268;
    nz.push_back(coo);
    coo = 1296*264 + 267;
    nz.push_back(coo);
    coo = 1296*265 + 267;
    nz.push_back(coo);
    coo = 1296*265 + 270;
    nz.push_back(coo);
    coo = 1296*265 + 485;
    nz.push_back(coo);
    coo = 1296*266 + 267;
    nz.push_back(coo);
    coo = 1296*266 + 268;
    nz.push_back(coo);
    coo = 1296*266 + 269;
    nz.push_back(coo);
    coo = 1296*268 + 300;
    nz.push_back(coo);
    coo = 1296*269 + 274;
    nz.push_back(coo);
    coo = 1296*270 + 273;
    nz.push_back(coo);
    coo = 1296*271 + 273;
    nz.push_back(coo);
    coo = 1296*271 + 276;
    nz.push_back(coo);
    coo = 1296*271 + 491;
    nz.push_back(coo);
    coo = 1296*272 + 273;
    nz.push_back(coo);
    coo = 1296*272 + 274;
    nz.push_back(coo);
    coo = 1296*272 + 275;
    nz.push_back(coo);
    coo = 1296*274 + 306;
    nz.push_back(coo);
    coo = 1296*275 + 280;
    nz.push_back(coo);
    coo = 1296*276 + 279;
    nz.push_back(coo);
    coo = 1296*277 + 279;
    nz.push_back(coo);
    coo = 1296*277 + 282;
    nz.push_back(coo);
    coo = 1296*277 + 497;
    nz.push_back(coo);
    coo = 1296*278 + 279;
    nz.push_back(coo);
    coo = 1296*278 + 280;
    nz.push_back(coo);
    coo = 1296*278 + 281;
    nz.push_back(coo);
    coo = 1296*280 + 312;
    nz.push_back(coo);
    coo = 1296*281 + 286;
    nz.push_back(coo);
    coo = 1296*282 + 285;
    nz.push_back(coo);
    coo = 1296*283 + 285;
    nz.push_back(coo);
    coo = 1296*283 + 503;
    nz.push_back(coo);
    coo = 1296*284 + 285;
    nz.push_back(coo);
    coo = 1296*284 + 286;
    nz.push_back(coo);
    coo = 1296*284 + 287;
    nz.push_back(coo);
    coo = 1296*286 + 318;
    nz.push_back(coo);
    coo = 1296*288 + 291;
    nz.push_back(coo);
    coo = 1296*288 + 319;
    nz.push_back(coo);
    coo = 1296*289 + 291;
    nz.push_back(coo);
    coo = 1296*289 + 294;
    nz.push_back(coo);
    coo = 1296*289 + 509;
    nz.push_back(coo);
    coo = 1296*290 + 291;
    nz.push_back(coo);
    coo = 1296*290 + 292;
    nz.push_back(coo);
    coo = 1296*290 + 293;
    nz.push_back(coo);
    coo = 1296*292 + 323;
    nz.push_back(coo);
    coo = 1296*292 + 324;
    nz.push_back(coo);
    coo = 1296*293 + 298;
    nz.push_back(coo);
    coo = 1296*294 + 297;
    nz.push_back(coo);
    coo = 1296*295 + 297;
    nz.push_back(coo);
    coo = 1296*295 + 300;
    nz.push_back(coo);
    coo = 1296*295 + 515;
    nz.push_back(coo);
    coo = 1296*296 + 297;
    nz.push_back(coo);
    coo = 1296*296 + 298;
    nz.push_back(coo);
    coo = 1296*296 + 299;
    nz.push_back(coo);
    coo = 1296*298 + 330;
    nz.push_back(coo);
    coo = 1296*299 + 304;
    nz.push_back(coo);
    coo = 1296*300 + 303;
    nz.push_back(coo);
    coo = 1296*301 + 303;
    nz.push_back(coo);
    coo = 1296*301 + 306;
    nz.push_back(coo);
    coo = 1296*301 + 521;
    nz.push_back(coo);
    coo = 1296*302 + 303;
    nz.push_back(coo);
    coo = 1296*302 + 304;
    nz.push_back(coo);
    coo = 1296*302 + 305;
    nz.push_back(coo);
    coo = 1296*304 + 336;
    nz.push_back(coo);
    coo = 1296*305 + 310;
    nz.push_back(coo);
    coo = 1296*306 + 309;
    nz.push_back(coo);
    coo = 1296*307 + 309;
    nz.push_back(coo);
    coo = 1296*307 + 312;
    nz.push_back(coo);
    coo = 1296*307 + 527;
    nz.push_back(coo);
    coo = 1296*308 + 309;
    nz.push_back(coo);
    coo = 1296*308 + 310;
    nz.push_back(coo);
    coo = 1296*308 + 311;
    nz.push_back(coo);
    coo = 1296*310 + 342;
    nz.push_back(coo);
    coo = 1296*311 + 316;
    nz.push_back(coo);
    coo = 1296*312 + 315;
    nz.push_back(coo);
    coo = 1296*313 + 315;
    nz.push_back(coo);
    coo = 1296*313 + 318;
    nz.push_back(coo);
    coo = 1296*313 + 533;
    nz.push_back(coo);
    coo = 1296*314 + 315;
    nz.push_back(coo);
    coo = 1296*314 + 316;
    nz.push_back(coo);
    coo = 1296*314 + 317;
    nz.push_back(coo);
    coo = 1296*316 + 348;
    nz.push_back(coo);
    coo = 1296*317 + 322;
    nz.push_back(coo);
    coo = 1296*318 + 321;
    nz.push_back(coo);
    coo = 1296*319 + 321;
    nz.push_back(coo);
    coo = 1296*319 + 539;
    nz.push_back(coo);
    coo = 1296*320 + 321;
    nz.push_back(coo);
    coo = 1296*320 + 322;
    nz.push_back(coo);
    coo = 1296*320 + 323;
    nz.push_back(coo);
    coo = 1296*322 + 354;
    nz.push_back(coo);
    coo = 1296*324 + 327;
    nz.push_back(coo);
    coo = 1296*324 + 355;
    nz.push_back(coo);
    coo = 1296*325 + 327;
    nz.push_back(coo);
    coo = 1296*325 + 330;
    nz.push_back(coo);
    coo = 1296*325 + 545;
    nz.push_back(coo);
    coo = 1296*326 + 327;
    nz.push_back(coo);
    coo = 1296*326 + 328;
    nz.push_back(coo);
    coo = 1296*326 + 329;
    nz.push_back(coo);
    coo = 1296*328 + 359;
    nz.push_back(coo);
    coo = 1296*328 + 360;
    nz.push_back(coo);
    coo = 1296*329 + 334;
    nz.push_back(coo);
    coo = 1296*330 + 333;
    nz.push_back(coo);
    coo = 1296*331 + 333;
    nz.push_back(coo);
    coo = 1296*331 + 336;
    nz.push_back(coo);
    coo = 1296*331 + 551;
    nz.push_back(coo);
    coo = 1296*332 + 333;
    nz.push_back(coo);
    coo = 1296*332 + 334;
    nz.push_back(coo);
    coo = 1296*332 + 335;
    nz.push_back(coo);
    coo = 1296*334 + 366;
    nz.push_back(coo);
    coo = 1296*335 + 340;
    nz.push_back(coo);
    coo = 1296*336 + 339;
    nz.push_back(coo);
    coo = 1296*337 + 339;
    nz.push_back(coo);
    coo = 1296*337 + 342;
    nz.push_back(coo);
    coo = 1296*337 + 557;
    nz.push_back(coo);
    coo = 1296*338 + 339;
    nz.push_back(coo);
    coo = 1296*338 + 340;
    nz.push_back(coo);
    coo = 1296*338 + 341;
    nz.push_back(coo);
    coo = 1296*340 + 372;
    nz.push_back(coo);
    coo = 1296*341 + 346;
    nz.push_back(coo);
    coo = 1296*342 + 345;
    nz.push_back(coo);
    coo = 1296*343 + 345;
    nz.push_back(coo);
    coo = 1296*343 + 348;
    nz.push_back(coo);
    coo = 1296*343 + 563;
    nz.push_back(coo);
    coo = 1296*344 + 345;
    nz.push_back(coo);
    coo = 1296*344 + 346;
    nz.push_back(coo);
    coo = 1296*344 + 347;
    nz.push_back(coo);
    coo = 1296*346 + 378;
    nz.push_back(coo);
    coo = 1296*347 + 352;
    nz.push_back(coo);
    coo = 1296*348 + 351;
    nz.push_back(coo);
    coo = 1296*349 + 351;
    nz.push_back(coo);
    coo = 1296*349 + 354;
    nz.push_back(coo);
    coo = 1296*349 + 569;
    nz.push_back(coo);
    coo = 1296*350 + 351;
    nz.push_back(coo);
    coo = 1296*350 + 352;
    nz.push_back(coo);
    coo = 1296*350 + 353;
    nz.push_back(coo);
    coo = 1296*352 + 384;
    nz.push_back(coo);
    coo = 1296*353 + 358;
    nz.push_back(coo);
    coo = 1296*354 + 357;
    nz.push_back(coo);
    coo = 1296*355 + 357;
    nz.push_back(coo);
    coo = 1296*355 + 575;
    nz.push_back(coo);
    coo = 1296*356 + 357;
    nz.push_back(coo);
    coo = 1296*356 + 358;
    nz.push_back(coo);
    coo = 1296*356 + 359;
    nz.push_back(coo);
    coo = 1296*358 + 390;
    nz.push_back(coo);
    coo = 1296*360 + 363;
    nz.push_back(coo);
    coo = 1296*360 + 391;
    nz.push_back(coo);
    coo = 1296*361 + 363;
    nz.push_back(coo);
    coo = 1296*361 + 366;
    nz.push_back(coo);
    coo = 1296*361 + 581;
    nz.push_back(coo);
    coo = 1296*362 + 363;
    nz.push_back(coo);
    coo = 1296*362 + 364;
    nz.push_back(coo);
    coo = 1296*362 + 365;
    nz.push_back(coo);
    coo = 1296*364 + 395;
    nz.push_back(coo);
    coo = 1296*364 + 396;
    nz.push_back(coo);
    coo = 1296*365 + 370;
    nz.push_back(coo);
    coo = 1296*366 + 369;
    nz.push_back(coo);
    coo = 1296*367 + 369;
    nz.push_back(coo);
    coo = 1296*367 + 372;
    nz.push_back(coo);
    coo = 1296*367 + 587;
    nz.push_back(coo);
    coo = 1296*368 + 369;
    nz.push_back(coo);
    coo = 1296*368 + 370;
    nz.push_back(coo);
    coo = 1296*368 + 371;
    nz.push_back(coo);
    coo = 1296*370 + 402;
    nz.push_back(coo);
    coo = 1296*371 + 376;
    nz.push_back(coo);
    coo = 1296*372 + 375;
    nz.push_back(coo);
    coo = 1296*373 + 375;
    nz.push_back(coo);
    coo = 1296*373 + 378;
    nz.push_back(coo);
    coo = 1296*373 + 593;
    nz.push_back(coo);
    coo = 1296*374 + 375;
    nz.push_back(coo);
    coo = 1296*374 + 376;
    nz.push_back(coo);
    coo = 1296*374 + 377;
    nz.push_back(coo);
    coo = 1296*376 + 408;
    nz.push_back(coo);
    coo = 1296*377 + 382;
    nz.push_back(coo);
    coo = 1296*378 + 381;
    nz.push_back(coo);
    coo = 1296*379 + 381;
    nz.push_back(coo);
    coo = 1296*379 + 384;
    nz.push_back(coo);
    coo = 1296*379 + 599;
    nz.push_back(coo);
    coo = 1296*380 + 381;
    nz.push_back(coo);
    coo = 1296*380 + 382;
    nz.push_back(coo);
    coo = 1296*380 + 383;
    nz.push_back(coo);
    coo = 1296*382 + 414;
    nz.push_back(coo);
    coo = 1296*383 + 388;
    nz.push_back(coo);
    coo = 1296*384 + 387;
    nz.push_back(coo);
    coo = 1296*385 + 387;
    nz.push_back(coo);
    coo = 1296*385 + 390;
    nz.push_back(coo);
    coo = 1296*385 + 605;
    nz.push_back(coo);
    coo = 1296*386 + 387;
    nz.push_back(coo);
    coo = 1296*386 + 388;
    nz.push_back(coo);
    coo = 1296*386 + 389;
    nz.push_back(coo);
    coo = 1296*388 + 420;
    nz.push_back(coo);
    coo = 1296*389 + 394;
    nz.push_back(coo);
    coo = 1296*390 + 393;
    nz.push_back(coo);
    coo = 1296*391 + 393;
    nz.push_back(coo);
    coo = 1296*391 + 611;
    nz.push_back(coo);
    coo = 1296*392 + 393;
    nz.push_back(coo);
    coo = 1296*392 + 394;
    nz.push_back(coo);
    coo = 1296*392 + 395;
    nz.push_back(coo);
    coo = 1296*394 + 426;
    nz.push_back(coo);
    coo = 1296*396 + 399;
    nz.push_back(coo);
    coo = 1296*396 + 427;
    nz.push_back(coo);
    coo = 1296*397 + 399;
    nz.push_back(coo);
    coo = 1296*397 + 402;
    nz.push_back(coo);
    coo = 1296*397 + 617;
    nz.push_back(coo);
    coo = 1296*398 + 399;
    nz.push_back(coo);
    coo = 1296*398 + 400;
    nz.push_back(coo);
    coo = 1296*398 + 401;
    nz.push_back(coo);
    coo = 1296*400 + 431;
    nz.push_back(coo);
    coo = 1296*401 + 406;
    nz.push_back(coo);
    coo = 1296*402 + 405;
    nz.push_back(coo);
    coo = 1296*403 + 405;
    nz.push_back(coo);
    coo = 1296*403 + 408;
    nz.push_back(coo);
    coo = 1296*403 + 623;
    nz.push_back(coo);
    coo = 1296*404 + 405;
    nz.push_back(coo);
    coo = 1296*404 + 406;
    nz.push_back(coo);
    coo = 1296*404 + 407;
    nz.push_back(coo);
    coo = 1296*407 + 412;
    nz.push_back(coo);
    coo = 1296*408 + 411;
    nz.push_back(coo);
    coo = 1296*409 + 411;
    nz.push_back(coo);
    coo = 1296*409 + 414;
    nz.push_back(coo);
    coo = 1296*409 + 629;
    nz.push_back(coo);
    coo = 1296*410 + 411;
    nz.push_back(coo);
    coo = 1296*410 + 412;
    nz.push_back(coo);
    coo = 1296*410 + 413;
    nz.push_back(coo);
    coo = 1296*413 + 418;
    nz.push_back(coo);
    coo = 1296*414 + 417;
    nz.push_back(coo);
    coo = 1296*415 + 417;
    nz.push_back(coo);
    coo = 1296*415 + 420;
    nz.push_back(coo);
    coo = 1296*415 + 635;
    nz.push_back(coo);
    coo = 1296*416 + 417;
    nz.push_back(coo);
    coo = 1296*416 + 418;
    nz.push_back(coo);
    coo = 1296*416 + 419;
    nz.push_back(coo);
    coo = 1296*419 + 424;
    nz.push_back(coo);
    coo = 1296*420 + 423;
    nz.push_back(coo);
    coo = 1296*421 + 423;
    nz.push_back(coo);
    coo = 1296*421 + 426;
    nz.push_back(coo);
    coo = 1296*421 + 641;
    nz.push_back(coo);
    coo = 1296*422 + 423;
    nz.push_back(coo);
    coo = 1296*422 + 424;
    nz.push_back(coo);
    coo = 1296*422 + 425;
    nz.push_back(coo);
    coo = 1296*425 + 430;
    nz.push_back(coo);
    coo = 1296*426 + 429;
    nz.push_back(coo);
    coo = 1296*427 + 429;
    nz.push_back(coo);
    coo = 1296*427 + 647;
    nz.push_back(coo);
    coo = 1296*428 + 429;
    nz.push_back(coo);
    coo = 1296*428 + 430;
    nz.push_back(coo);
    coo = 1296*428 + 431;
    nz.push_back(coo);
    coo = 1296*432 + 435;
    nz.push_back(coo);
    coo = 1296*432 + 463;
    nz.push_back(coo);
    coo = 1296*432 + 616;
    nz.push_back(coo);
    coo = 1296*433 + 435;
    nz.push_back(coo);
    coo = 1296*433 + 438;
    nz.push_back(coo);
    coo = 1296*433 + 653;
    nz.push_back(coo);
    coo = 1296*434 + 435;
    nz.push_back(coo);
    coo = 1296*434 + 436;
    nz.push_back(coo);
    coo = 1296*434 + 437;
    nz.push_back(coo);
    coo = 1296*436 + 467;
    nz.push_back(coo);
    coo = 1296*436 + 468;
    nz.push_back(coo);
    coo = 1296*437 + 442;
    nz.push_back(coo);
    coo = 1296*438 + 441;
    nz.push_back(coo);
    coo = 1296*438 + 622;
    nz.push_back(coo);
    coo = 1296*439 + 441;
    nz.push_back(coo);
    coo = 1296*439 + 444;
    nz.push_back(coo);
    coo = 1296*439 + 659;
    nz.push_back(coo);
    coo = 1296*440 + 441;
    nz.push_back(coo);
    coo = 1296*440 + 442;
    nz.push_back(coo);
    coo = 1296*440 + 443;
    nz.push_back(coo);
    coo = 1296*442 + 474;
    nz.push_back(coo);
    coo = 1296*443 + 448;
    nz.push_back(coo);
    coo = 1296*444 + 447;
    nz.push_back(coo);
    coo = 1296*444 + 628;
    nz.push_back(coo);
    coo = 1296*445 + 447;
    nz.push_back(coo);
    coo = 1296*445 + 450;
    nz.push_back(coo);
    coo = 1296*445 + 665;
    nz.push_back(coo);
    coo = 1296*446 + 447;
    nz.push_back(coo);
    coo = 1296*446 + 448;
    nz.push_back(coo);
    coo = 1296*446 + 449;
    nz.push_back(coo);
    coo = 1296*448 + 480;
    nz.push_back(coo);
    coo = 1296*449 + 454;
    nz.push_back(coo);
    coo = 1296*450 + 453;
    nz.push_back(coo);
    coo = 1296*450 + 634;
    nz.push_back(coo);
    coo = 1296*451 + 453;
    nz.push_back(coo);
    coo = 1296*451 + 456;
    nz.push_back(coo);
    coo = 1296*451 + 671;
    nz.push_back(coo);
    coo = 1296*452 + 453;
    nz.push_back(coo);
    coo = 1296*452 + 454;
    nz.push_back(coo);
    coo = 1296*452 + 455;
    nz.push_back(coo);
    coo = 1296*454 + 486;
    nz.push_back(coo);
    coo = 1296*455 + 460;
    nz.push_back(coo);
    coo = 1296*456 + 459;
    nz.push_back(coo);
    coo = 1296*456 + 640;
    nz.push_back(coo);
    coo = 1296*457 + 459;
    nz.push_back(coo);
    coo = 1296*457 + 462;
    nz.push_back(coo);
    coo = 1296*457 + 677;
    nz.push_back(coo);
    coo = 1296*458 + 459;
    nz.push_back(coo);
    coo = 1296*458 + 460;
    nz.push_back(coo);
    coo = 1296*458 + 461;
    nz.push_back(coo);
    coo = 1296*460 + 492;
    nz.push_back(coo);
    coo = 1296*461 + 466;
    nz.push_back(coo);
    coo = 1296*462 + 465;
    nz.push_back(coo);
    coo = 1296*462 + 646;
    nz.push_back(coo);
    coo = 1296*463 + 465;
    nz.push_back(coo);
    coo = 1296*463 + 683;
    nz.push_back(coo);
    coo = 1296*464 + 465;
    nz.push_back(coo);
    coo = 1296*464 + 466;
    nz.push_back(coo);
    coo = 1296*464 + 467;
    nz.push_back(coo);
    coo = 1296*466 + 498;
    nz.push_back(coo);
    coo = 1296*468 + 471;
    nz.push_back(coo);
    coo = 1296*468 + 499;
    nz.push_back(coo);
    coo = 1296*469 + 471;
    nz.push_back(coo);
    coo = 1296*469 + 474;
    nz.push_back(coo);
    coo = 1296*469 + 689;
    nz.push_back(coo);
    coo = 1296*470 + 471;
    nz.push_back(coo);
    coo = 1296*470 + 472;
    nz.push_back(coo);
    coo = 1296*470 + 473;
    nz.push_back(coo);
    coo = 1296*472 + 503;
    nz.push_back(coo);
    coo = 1296*472 + 504;
    nz.push_back(coo);
    coo = 1296*473 + 478;
    nz.push_back(coo);
    coo = 1296*474 + 477;
    nz.push_back(coo);
    coo = 1296*475 + 477;
    nz.push_back(coo);
    coo = 1296*475 + 480;
    nz.push_back(coo);
    coo = 1296*475 + 695;
    nz.push_back(coo);
    coo = 1296*476 + 477;
    nz.push_back(coo);
    coo = 1296*476 + 478;
    nz.push_back(coo);
    coo = 1296*476 + 479;
    nz.push_back(coo);
    coo = 1296*478 + 510;
    nz.push_back(coo);
    coo = 1296*479 + 484;
    nz.push_back(coo);
    coo = 1296*480 + 483;
    nz.push_back(coo);
    coo = 1296*481 + 483;
    nz.push_back(coo);
    coo = 1296*481 + 486;
    nz.push_back(coo);
    coo = 1296*481 + 701;
    nz.push_back(coo);
    coo = 1296*482 + 483;
    nz.push_back(coo);
    coo = 1296*482 + 484;
    nz.push_back(coo);
    coo = 1296*482 + 485;
    nz.push_back(coo);
    coo = 1296*484 + 516;
    nz.push_back(coo);
    coo = 1296*485 + 490;
    nz.push_back(coo);
    coo = 1296*486 + 489;
    nz.push_back(coo);
    coo = 1296*487 + 489;
    nz.push_back(coo);
    coo = 1296*487 + 492;
    nz.push_back(coo);
    coo = 1296*487 + 707;
    nz.push_back(coo);
    coo = 1296*488 + 489;
    nz.push_back(coo);
    coo = 1296*488 + 490;
    nz.push_back(coo);
    coo = 1296*488 + 491;
    nz.push_back(coo);
    coo = 1296*490 + 522;
    nz.push_back(coo);
    coo = 1296*491 + 496;
    nz.push_back(coo);
    coo = 1296*492 + 495;
    nz.push_back(coo);
    coo = 1296*493 + 495;
    nz.push_back(coo);
    coo = 1296*493 + 498;
    nz.push_back(coo);
    coo = 1296*493 + 713;
    nz.push_back(coo);
    coo = 1296*494 + 495;
    nz.push_back(coo);
    coo = 1296*494 + 496;
    nz.push_back(coo);
    coo = 1296*494 + 497;
    nz.push_back(coo);
    coo = 1296*496 + 528;
    nz.push_back(coo);
    coo = 1296*497 + 502;
    nz.push_back(coo);
    coo = 1296*498 + 501;
    nz.push_back(coo);
    coo = 1296*499 + 501;
    nz.push_back(coo);
    coo = 1296*499 + 719;
    nz.push_back(coo);
    coo = 1296*500 + 501;
    nz.push_back(coo);
    coo = 1296*500 + 502;
    nz.push_back(coo);
    coo = 1296*500 + 503;
    nz.push_back(coo);
    coo = 1296*502 + 534;
    nz.push_back(coo);
    coo = 1296*504 + 507;
    nz.push_back(coo);
    coo = 1296*504 + 535;
    nz.push_back(coo);
    coo = 1296*505 + 507;
    nz.push_back(coo);
    coo = 1296*505 + 510;
    nz.push_back(coo);
    coo = 1296*505 + 725;
    nz.push_back(coo);
    coo = 1296*506 + 507;
    nz.push_back(coo);
    coo = 1296*506 + 508;
    nz.push_back(coo);
    coo = 1296*506 + 509;
    nz.push_back(coo);
    coo = 1296*508 + 539;
    nz.push_back(coo);
    coo = 1296*508 + 540;
    nz.push_back(coo);
    coo = 1296*509 + 514;
    nz.push_back(coo);
    coo = 1296*510 + 513;
    nz.push_back(coo);
    coo = 1296*511 + 513;
    nz.push_back(coo);
    coo = 1296*511 + 516;
    nz.push_back(coo);
    coo = 1296*511 + 731;
    nz.push_back(coo);
    coo = 1296*512 + 513;
    nz.push_back(coo);
    coo = 1296*512 + 514;
    nz.push_back(coo);
    coo = 1296*512 + 515;
    nz.push_back(coo);
    coo = 1296*514 + 546;
    nz.push_back(coo);
    coo = 1296*515 + 520;
    nz.push_back(coo);
    coo = 1296*516 + 519;
    nz.push_back(coo);
    coo = 1296*517 + 519;
    nz.push_back(coo);
    coo = 1296*517 + 522;
    nz.push_back(coo);
    coo = 1296*517 + 737;
    nz.push_back(coo);
    coo = 1296*518 + 519;
    nz.push_back(coo);
    coo = 1296*518 + 520;
    nz.push_back(coo);
    coo = 1296*518 + 521;
    nz.push_back(coo);
    coo = 1296*520 + 552;
    nz.push_back(coo);
    coo = 1296*521 + 526;
    nz.push_back(coo);
    coo = 1296*522 + 525;
    nz.push_back(coo);
    coo = 1296*523 + 525;
    nz.push_back(coo);
    coo = 1296*523 + 528;
    nz.push_back(coo);
    coo = 1296*523 + 743;
    nz.push_back(coo);
    coo = 1296*524 + 525;
    nz.push_back(coo);
    coo = 1296*524 + 526;
    nz.push_back(coo);
    coo = 1296*524 + 527;
    nz.push_back(coo);
    coo = 1296*526 + 558;
    nz.push_back(coo);
    coo = 1296*527 + 532;
    nz.push_back(coo);
    coo = 1296*528 + 531;
    nz.push_back(coo);
    coo = 1296*529 + 531;
    nz.push_back(coo);
    coo = 1296*529 + 534;
    nz.push_back(coo);
    coo = 1296*529 + 749;
    nz.push_back(coo);
    coo = 1296*530 + 531;
    nz.push_back(coo);
    coo = 1296*530 + 532;
    nz.push_back(coo);
    coo = 1296*530 + 533;
    nz.push_back(coo);
    coo = 1296*532 + 564;
    nz.push_back(coo);
    coo = 1296*533 + 538;
    nz.push_back(coo);
    coo = 1296*534 + 537;
    nz.push_back(coo);
    coo = 1296*535 + 537;
    nz.push_back(coo);
    coo = 1296*535 + 755;
    nz.push_back(coo);
    coo = 1296*536 + 537;
    nz.push_back(coo);
    coo = 1296*536 + 538;
    nz.push_back(coo);
    coo = 1296*536 + 539;
    nz.push_back(coo);
    coo = 1296*538 + 570;
    nz.push_back(coo);
    coo = 1296*540 + 543;
    nz.push_back(coo);
    coo = 1296*540 + 571;
    nz.push_back(coo);
    coo = 1296*541 + 543;
    nz.push_back(coo);
    coo = 1296*541 + 546;
    nz.push_back(coo);
    coo = 1296*541 + 761;
    nz.push_back(coo);
    coo = 1296*542 + 543;
    nz.push_back(coo);
    coo = 1296*542 + 544;
    nz.push_back(coo);
    coo = 1296*542 + 545;
    nz.push_back(coo);
    coo = 1296*544 + 575;
    nz.push_back(coo);
    coo = 1296*544 + 576;
    nz.push_back(coo);
    coo = 1296*545 + 550;
    nz.push_back(coo);
    coo = 1296*546 + 549;
    nz.push_back(coo);
    coo = 1296*547 + 549;
    nz.push_back(coo);
    coo = 1296*547 + 552;
    nz.push_back(coo);
    coo = 1296*547 + 767;
    nz.push_back(coo);
    coo = 1296*548 + 549;
    nz.push_back(coo);
    coo = 1296*548 + 550;
    nz.push_back(coo);
    coo = 1296*548 + 551;
    nz.push_back(coo);
    coo = 1296*550 + 582;
    nz.push_back(coo);
    coo = 1296*551 + 556;
    nz.push_back(coo);
    coo = 1296*552 + 555;
    nz.push_back(coo);
    coo = 1296*553 + 555;
    nz.push_back(coo);
    coo = 1296*553 + 558;
    nz.push_back(coo);
    coo = 1296*553 + 773;
    nz.push_back(coo);
    coo = 1296*554 + 555;
    nz.push_back(coo);
    coo = 1296*554 + 556;
    nz.push_back(coo);
    coo = 1296*554 + 557;
    nz.push_back(coo);
    coo = 1296*556 + 588;
    nz.push_back(coo);
    coo = 1296*557 + 562;
    nz.push_back(coo);
    coo = 1296*558 + 561;
    nz.push_back(coo);
    coo = 1296*559 + 561;
    nz.push_back(coo);
    coo = 1296*559 + 564;
    nz.push_back(coo);
    coo = 1296*559 + 779;
    nz.push_back(coo);
    coo = 1296*560 + 561;
    nz.push_back(coo);
    coo = 1296*560 + 562;
    nz.push_back(coo);
    coo = 1296*560 + 563;
    nz.push_back(coo);
    coo = 1296*562 + 594;
    nz.push_back(coo);
    coo = 1296*563 + 568;
    nz.push_back(coo);
    coo = 1296*564 + 567;
    nz.push_back(coo);
    coo = 1296*565 + 567;
    nz.push_back(coo);
    coo = 1296*565 + 570;
    nz.push_back(coo);
    coo = 1296*565 + 785;
    nz.push_back(coo);
    coo = 1296*566 + 567;
    nz.push_back(coo);
    coo = 1296*566 + 568;
    nz.push_back(coo);
    coo = 1296*566 + 569;
    nz.push_back(coo);
    coo = 1296*568 + 600;
    nz.push_back(coo);
    coo = 1296*569 + 574;
    nz.push_back(coo);
    coo = 1296*570 + 573;
    nz.push_back(coo);
    coo = 1296*571 + 573;
    nz.push_back(coo);
    coo = 1296*571 + 791;
    nz.push_back(coo);
    coo = 1296*572 + 573;
    nz.push_back(coo);
    coo = 1296*572 + 574;
    nz.push_back(coo);
    coo = 1296*572 + 575;
    nz.push_back(coo);
    coo = 1296*574 + 606;
    nz.push_back(coo);
    coo = 1296*576 + 579;
    nz.push_back(coo);
    coo = 1296*576 + 607;
    nz.push_back(coo);
    coo = 1296*577 + 579;
    nz.push_back(coo);
    coo = 1296*577 + 582;
    nz.push_back(coo);
    coo = 1296*577 + 797;
    nz.push_back(coo);
    coo = 1296*578 + 579;
    nz.push_back(coo);
    coo = 1296*578 + 580;
    nz.push_back(coo);
    coo = 1296*578 + 581;
    nz.push_back(coo);
    coo = 1296*580 + 611;
    nz.push_back(coo);
    coo = 1296*580 + 612;
    nz.push_back(coo);
    coo = 1296*581 + 586;
    nz.push_back(coo);
    coo = 1296*582 + 585;
    nz.push_back(coo);
    coo = 1296*583 + 585;
    nz.push_back(coo);
    coo = 1296*583 + 588;
    nz.push_back(coo);
    coo = 1296*583 + 803;
    nz.push_back(coo);
    coo = 1296*584 + 585;
    nz.push_back(coo);
    coo = 1296*584 + 586;
    nz.push_back(coo);
    coo = 1296*584 + 587;
    nz.push_back(coo);
    coo = 1296*586 + 618;
    nz.push_back(coo);
    coo = 1296*587 + 592;
    nz.push_back(coo);
    coo = 1296*588 + 591;
    nz.push_back(coo);
    coo = 1296*589 + 591;
    nz.push_back(coo);
    coo = 1296*589 + 594;
    nz.push_back(coo);
    coo = 1296*589 + 809;
    nz.push_back(coo);
    coo = 1296*590 + 591;
    nz.push_back(coo);
    coo = 1296*590 + 592;
    nz.push_back(coo);
    coo = 1296*590 + 593;
    nz.push_back(coo);
    coo = 1296*592 + 624;
    nz.push_back(coo);
    coo = 1296*593 + 598;
    nz.push_back(coo);
    coo = 1296*594 + 597;
    nz.push_back(coo);
    coo = 1296*595 + 597;
    nz.push_back(coo);
    coo = 1296*595 + 600;
    nz.push_back(coo);
    coo = 1296*595 + 815;
    nz.push_back(coo);
    coo = 1296*596 + 597;
    nz.push_back(coo);
    coo = 1296*596 + 598;
    nz.push_back(coo);
    coo = 1296*596 + 599;
    nz.push_back(coo);
    coo = 1296*598 + 630;
    nz.push_back(coo);
    coo = 1296*599 + 604;
    nz.push_back(coo);
    coo = 1296*600 + 603;
    nz.push_back(coo);
    coo = 1296*601 + 603;
    nz.push_back(coo);
    coo = 1296*601 + 606;
    nz.push_back(coo);
    coo = 1296*601 + 821;
    nz.push_back(coo);
    coo = 1296*602 + 603;
    nz.push_back(coo);
    coo = 1296*602 + 604;
    nz.push_back(coo);
    coo = 1296*602 + 605;
    nz.push_back(coo);
    coo = 1296*604 + 636;
    nz.push_back(coo);
    coo = 1296*605 + 610;
    nz.push_back(coo);
    coo = 1296*606 + 609;
    nz.push_back(coo);
    coo = 1296*607 + 609;
    nz.push_back(coo);
    coo = 1296*607 + 827;
    nz.push_back(coo);
    coo = 1296*608 + 609;
    nz.push_back(coo);
    coo = 1296*608 + 610;
    nz.push_back(coo);
    coo = 1296*608 + 611;
    nz.push_back(coo);
    coo = 1296*610 + 642;
    nz.push_back(coo);
    coo = 1296*612 + 615;
    nz.push_back(coo);
    coo = 1296*612 + 643;
    nz.push_back(coo);
    coo = 1296*613 + 615;
    nz.push_back(coo);
    coo = 1296*613 + 618;
    nz.push_back(coo);
    coo = 1296*613 + 833;
    nz.push_back(coo);
    coo = 1296*614 + 615;
    nz.push_back(coo);
    coo = 1296*614 + 616;
    nz.push_back(coo);
    coo = 1296*614 + 617;
    nz.push_back(coo);
    coo = 1296*616 + 647;
    nz.push_back(coo);
    coo = 1296*617 + 622;
    nz.push_back(coo);
    coo = 1296*618 + 621;
    nz.push_back(coo);
    coo = 1296*619 + 621;
    nz.push_back(coo);
    coo = 1296*619 + 624;
    nz.push_back(coo);
    coo = 1296*619 + 839;
    nz.push_back(coo);
    coo = 1296*620 + 621;
    nz.push_back(coo);
    coo = 1296*620 + 622;
    nz.push_back(coo);
    coo = 1296*620 + 623;
    nz.push_back(coo);
    coo = 1296*623 + 628;
    nz.push_back(coo);
    coo = 1296*624 + 627;
    nz.push_back(coo);
    coo = 1296*625 + 627;
    nz.push_back(coo);
    coo = 1296*625 + 630;
    nz.push_back(coo);
    coo = 1296*625 + 845;
    nz.push_back(coo);
    coo = 1296*626 + 627;
    nz.push_back(coo);
    coo = 1296*626 + 628;
    nz.push_back(coo);
    coo = 1296*626 + 629;
    nz.push_back(coo);
    coo = 1296*629 + 634;
    nz.push_back(coo);
    coo = 1296*630 + 633;
    nz.push_back(coo);
    coo = 1296*631 + 633;
    nz.push_back(coo);
    coo = 1296*631 + 636;
    nz.push_back(coo);
    coo = 1296*631 + 851;
    nz.push_back(coo);
    coo = 1296*632 + 633;
    nz.push_back(coo);
    coo = 1296*632 + 634;
    nz.push_back(coo);
    coo = 1296*632 + 635;
    nz.push_back(coo);
    coo = 1296*635 + 640;
    nz.push_back(coo);
    coo = 1296*636 + 639;
    nz.push_back(coo);
    coo = 1296*637 + 639;
    nz.push_back(coo);
    coo = 1296*637 + 642;
    nz.push_back(coo);
    coo = 1296*637 + 857;
    nz.push_back(coo);
    coo = 1296*638 + 639;
    nz.push_back(coo);
    coo = 1296*638 + 640;
    nz.push_back(coo);
    coo = 1296*638 + 641;
    nz.push_back(coo);
    coo = 1296*641 + 646;
    nz.push_back(coo);
    coo = 1296*642 + 645;
    nz.push_back(coo);
    coo = 1296*643 + 645;
    nz.push_back(coo);
    coo = 1296*643 + 863;
    nz.push_back(coo);
    coo = 1296*644 + 645;
    nz.push_back(coo);
    coo = 1296*644 + 646;
    nz.push_back(coo);
    coo = 1296*644 + 647;
    nz.push_back(coo);
    coo = 1296*648 + 651;
    nz.push_back(coo);
    coo = 1296*648 + 679;
    nz.push_back(coo);
    coo = 1296*648 + 832;
    nz.push_back(coo);
    coo = 1296*649 + 651;
    nz.push_back(coo);
    coo = 1296*649 + 654;
    nz.push_back(coo);
    coo = 1296*649 + 869;
    nz.push_back(coo);
    coo = 1296*650 + 651;
    nz.push_back(coo);
    coo = 1296*650 + 652;
    nz.push_back(coo);
    coo = 1296*650 + 653;
    nz.push_back(coo);
    coo = 1296*652 + 683;
    nz.push_back(coo);
    coo = 1296*652 + 684;
    nz.push_back(coo);
    coo = 1296*653 + 658;
    nz.push_back(coo);
    coo = 1296*654 + 657;
    nz.push_back(coo);
    coo = 1296*654 + 838;
    nz.push_back(coo);
    coo = 1296*655 + 657;
    nz.push_back(coo);
    coo = 1296*655 + 660;
    nz.push_back(coo);
    coo = 1296*655 + 875;
    nz.push_back(coo);
    coo = 1296*656 + 657;
    nz.push_back(coo);
    coo = 1296*656 + 658;
    nz.push_back(coo);
    coo = 1296*656 + 659;
    nz.push_back(coo);
    coo = 1296*658 + 690;
    nz.push_back(coo);
    coo = 1296*659 + 664;
    nz.push_back(coo);
    coo = 1296*660 + 663;
    nz.push_back(coo);
    coo = 1296*660 + 844;
    nz.push_back(coo);
    coo = 1296*661 + 663;
    nz.push_back(coo);
    coo = 1296*661 + 666;
    nz.push_back(coo);
    coo = 1296*661 + 881;
    nz.push_back(coo);
    coo = 1296*662 + 663;
    nz.push_back(coo);
    coo = 1296*662 + 664;
    nz.push_back(coo);
    coo = 1296*662 + 665;
    nz.push_back(coo);
    coo = 1296*664 + 696;
    nz.push_back(coo);
    coo = 1296*665 + 670;
    nz.push_back(coo);
    coo = 1296*666 + 669;
    nz.push_back(coo);
    coo = 1296*666 + 850;
    nz.push_back(coo);
    coo = 1296*667 + 669;
    nz.push_back(coo);
    coo = 1296*667 + 672;
    nz.push_back(coo);
    coo = 1296*667 + 887;
    nz.push_back(coo);
    coo = 1296*668 + 669;
    nz.push_back(coo);
    coo = 1296*668 + 670;
    nz.push_back(coo);
    coo = 1296*668 + 671;
    nz.push_back(coo);
    coo = 1296*670 + 702;
    nz.push_back(coo);
    coo = 1296*671 + 676;
    nz.push_back(coo);
    coo = 1296*672 + 675;
    nz.push_back(coo);
    coo = 1296*672 + 856;
    nz.push_back(coo);
    coo = 1296*673 + 675;
    nz.push_back(coo);
    coo = 1296*673 + 678;
    nz.push_back(coo);
    coo = 1296*673 + 893;
    nz.push_back(coo);
    coo = 1296*674 + 675;
    nz.push_back(coo);
    coo = 1296*674 + 676;
    nz.push_back(coo);
    coo = 1296*674 + 677;
    nz.push_back(coo);
    coo = 1296*676 + 708;
    nz.push_back(coo);
    coo = 1296*677 + 682;
    nz.push_back(coo);
    coo = 1296*678 + 681;
    nz.push_back(coo);
    coo = 1296*678 + 862;
    nz.push_back(coo);
    coo = 1296*679 + 681;
    nz.push_back(coo);
    coo = 1296*679 + 899;
    nz.push_back(coo);
    coo = 1296*680 + 681;
    nz.push_back(coo);
    coo = 1296*680 + 682;
    nz.push_back(coo);
    coo = 1296*680 + 683;
    nz.push_back(coo);
    coo = 1296*682 + 714;
    nz.push_back(coo);
    coo = 1296*684 + 687;
    nz.push_back(coo);
    coo = 1296*684 + 715;
    nz.push_back(coo);
    coo = 1296*685 + 687;
    nz.push_back(coo);
    coo = 1296*685 + 690;
    nz.push_back(coo);
    coo = 1296*685 + 905;
    nz.push_back(coo);
    coo = 1296*686 + 687;
    nz.push_back(coo);
    coo = 1296*686 + 688;
    nz.push_back(coo);
    coo = 1296*686 + 689;
    nz.push_back(coo);
    coo = 1296*688 + 719;
    nz.push_back(coo);
    coo = 1296*688 + 720;
    nz.push_back(coo);
    coo = 1296*689 + 694;
    nz.push_back(coo);
    coo = 1296*690 + 693;
    nz.push_back(coo);
    coo = 1296*691 + 693;
    nz.push_back(coo);
    coo = 1296*691 + 696;
    nz.push_back(coo);
    coo = 1296*691 + 911;
    nz.push_back(coo);
    coo = 1296*692 + 693;
    nz.push_back(coo);
    coo = 1296*692 + 694;
    nz.push_back(coo);
    coo = 1296*692 + 695;
    nz.push_back(coo);
    coo = 1296*694 + 726;
    nz.push_back(coo);
    coo = 1296*695 + 700;
    nz.push_back(coo);
    coo = 1296*696 + 699;
    nz.push_back(coo);
    coo = 1296*697 + 699;
    nz.push_back(coo);
    coo = 1296*697 + 702;
    nz.push_back(coo);
    coo = 1296*697 + 917;
    nz.push_back(coo);
    coo = 1296*698 + 699;
    nz.push_back(coo);
    coo = 1296*698 + 700;
    nz.push_back(coo);
    coo = 1296*698 + 701;
    nz.push_back(coo);
    coo = 1296*700 + 732;
    nz.push_back(coo);
    coo = 1296*701 + 706;
    nz.push_back(coo);
    coo = 1296*702 + 705;
    nz.push_back(coo);
    coo = 1296*703 + 705;
    nz.push_back(coo);
    coo = 1296*703 + 708;
    nz.push_back(coo);
    coo = 1296*703 + 923;
    nz.push_back(coo);
    coo = 1296*704 + 705;
    nz.push_back(coo);
    coo = 1296*704 + 706;
    nz.push_back(coo);
    coo = 1296*704 + 707;
    nz.push_back(coo);
    coo = 1296*706 + 738;
    nz.push_back(coo);
    coo = 1296*707 + 712;
    nz.push_back(coo);
    coo = 1296*708 + 711;
    nz.push_back(coo);
    coo = 1296*709 + 711;
    nz.push_back(coo);
    coo = 1296*709 + 714;
    nz.push_back(coo);
    coo = 1296*709 + 929;
    nz.push_back(coo);
    coo = 1296*710 + 711;
    nz.push_back(coo);
    coo = 1296*710 + 712;
    nz.push_back(coo);
    coo = 1296*710 + 713;
    nz.push_back(coo);
    coo = 1296*712 + 744;
    nz.push_back(coo);
    coo = 1296*713 + 718;
    nz.push_back(coo);
    coo = 1296*714 + 717;
    nz.push_back(coo);
    coo = 1296*715 + 717;
    nz.push_back(coo);
    coo = 1296*715 + 935;
    nz.push_back(coo);
    coo = 1296*716 + 717;
    nz.push_back(coo);
    coo = 1296*716 + 718;
    nz.push_back(coo);
    coo = 1296*716 + 719;
    nz.push_back(coo);
    coo = 1296*718 + 750;
    nz.push_back(coo);
    coo = 1296*720 + 723;
    nz.push_back(coo);
    coo = 1296*720 + 751;
    nz.push_back(coo);
    coo = 1296*721 + 723;
    nz.push_back(coo);
    coo = 1296*721 + 726;
    nz.push_back(coo);
    coo = 1296*721 + 941;
    nz.push_back(coo);
    coo = 1296*722 + 723;
    nz.push_back(coo);
    coo = 1296*722 + 724;
    nz.push_back(coo);
    coo = 1296*722 + 725;
    nz.push_back(coo);
    coo = 1296*724 + 755;
    nz.push_back(coo);
    coo = 1296*724 + 756;
    nz.push_back(coo);
    coo = 1296*725 + 730;
    nz.push_back(coo);
    coo = 1296*726 + 729;
    nz.push_back(coo);
    coo = 1296*727 + 729;
    nz.push_back(coo);
    coo = 1296*727 + 732;
    nz.push_back(coo);
    coo = 1296*727 + 947;
    nz.push_back(coo);
    coo = 1296*728 + 729;
    nz.push_back(coo);
    coo = 1296*728 + 730;
    nz.push_back(coo);
    coo = 1296*728 + 731;
    nz.push_back(coo);
    coo = 1296*730 + 762;
    nz.push_back(coo);
    coo = 1296*731 + 736;
    nz.push_back(coo);
    coo = 1296*732 + 735;
    nz.push_back(coo);
    coo = 1296*733 + 735;
    nz.push_back(coo);
    coo = 1296*733 + 738;
    nz.push_back(coo);
    coo = 1296*733 + 953;
    nz.push_back(coo);
    coo = 1296*734 + 735;
    nz.push_back(coo);
    coo = 1296*734 + 736;
    nz.push_back(coo);
    coo = 1296*734 + 737;
    nz.push_back(coo);
    coo = 1296*736 + 768;
    nz.push_back(coo);
    coo = 1296*737 + 742;
    nz.push_back(coo);
    coo = 1296*738 + 741;
    nz.push_back(coo);
    coo = 1296*739 + 741;
    nz.push_back(coo);
    coo = 1296*739 + 744;
    nz.push_back(coo);
    coo = 1296*739 + 959;
    nz.push_back(coo);
    coo = 1296*740 + 741;
    nz.push_back(coo);
    coo = 1296*740 + 742;
    nz.push_back(coo);
    coo = 1296*740 + 743;
    nz.push_back(coo);
    coo = 1296*742 + 774;
    nz.push_back(coo);
    coo = 1296*743 + 748;
    nz.push_back(coo);
    coo = 1296*744 + 747;
    nz.push_back(coo);
    coo = 1296*745 + 747;
    nz.push_back(coo);
    coo = 1296*745 + 750;
    nz.push_back(coo);
    coo = 1296*745 + 965;
    nz.push_back(coo);
    coo = 1296*746 + 747;
    nz.push_back(coo);
    coo = 1296*746 + 748;
    nz.push_back(coo);
    coo = 1296*746 + 749;
    nz.push_back(coo);
    coo = 1296*748 + 780;
    nz.push_back(coo);
    coo = 1296*749 + 754;
    nz.push_back(coo);
    coo = 1296*750 + 753;
    nz.push_back(coo);
    coo = 1296*751 + 753;
    nz.push_back(coo);
    coo = 1296*751 + 971;
    nz.push_back(coo);
    coo = 1296*752 + 753;
    nz.push_back(coo);
    coo = 1296*752 + 754;
    nz.push_back(coo);
    coo = 1296*752 + 755;
    nz.push_back(coo);
    coo = 1296*754 + 786;
    nz.push_back(coo);
    coo = 1296*756 + 759;
    nz.push_back(coo);
    coo = 1296*756 + 787;
    nz.push_back(coo);
    coo = 1296*757 + 759;
    nz.push_back(coo);
    coo = 1296*757 + 762;
    nz.push_back(coo);
    coo = 1296*757 + 977;
    nz.push_back(coo);
    coo = 1296*758 + 759;
    nz.push_back(coo);
    coo = 1296*758 + 760;
    nz.push_back(coo);
    coo = 1296*758 + 761;
    nz.push_back(coo);
    coo = 1296*760 + 791;
    nz.push_back(coo);
    coo = 1296*760 + 792;
    nz.push_back(coo);
    coo = 1296*761 + 766;
    nz.push_back(coo);
    coo = 1296*762 + 765;
    nz.push_back(coo);
    coo = 1296*763 + 765;
    nz.push_back(coo);
    coo = 1296*763 + 768;
    nz.push_back(coo);
    coo = 1296*763 + 983;
    nz.push_back(coo);
    coo = 1296*764 + 765;
    nz.push_back(coo);
    coo = 1296*764 + 766;
    nz.push_back(coo);
    coo = 1296*764 + 767;
    nz.push_back(coo);
    coo = 1296*766 + 798;
    nz.push_back(coo);
    coo = 1296*767 + 772;
    nz.push_back(coo);
    coo = 1296*768 + 771;
    nz.push_back(coo);
    coo = 1296*769 + 771;
    nz.push_back(coo);
    coo = 1296*769 + 774;
    nz.push_back(coo);
    coo = 1296*769 + 989;
    nz.push_back(coo);
    coo = 1296*770 + 771;
    nz.push_back(coo);
    coo = 1296*770 + 772;
    nz.push_back(coo);
    coo = 1296*770 + 773;
    nz.push_back(coo);
    coo = 1296*772 + 804;
    nz.push_back(coo);
    coo = 1296*773 + 778;
    nz.push_back(coo);
    coo = 1296*774 + 777;
    nz.push_back(coo);
    coo = 1296*775 + 777;
    nz.push_back(coo);
    coo = 1296*775 + 780;
    nz.push_back(coo);
    coo = 1296*775 + 995;
    nz.push_back(coo);
    coo = 1296*776 + 777;
    nz.push_back(coo);
    coo = 1296*776 + 778;
    nz.push_back(coo);
    coo = 1296*776 + 779;
    nz.push_back(coo);
    coo = 1296*778 + 810;
    nz.push_back(coo);
    coo = 1296*779 + 784;
    nz.push_back(coo);
    coo = 1296*780 + 783;
    nz.push_back(coo);
    coo = 1296*781 + 783;
    nz.push_back(coo);
    coo = 1296*781 + 786;
    nz.push_back(coo);
    coo = 1296*781 + 1001;
    nz.push_back(coo);
    coo = 1296*782 + 783;
    nz.push_back(coo);
    coo = 1296*782 + 784;
    nz.push_back(coo);
    coo = 1296*782 + 785;
    nz.push_back(coo);
    coo = 1296*784 + 816;
    nz.push_back(coo);
    coo = 1296*785 + 790;
    nz.push_back(coo);
    coo = 1296*786 + 789;
    nz.push_back(coo);
    coo = 1296*787 + 789;
    nz.push_back(coo);
    coo = 1296*787 + 1007;
    nz.push_back(coo);
    coo = 1296*788 + 789;
    nz.push_back(coo);
    coo = 1296*788 + 790;
    nz.push_back(coo);
    coo = 1296*788 + 791;
    nz.push_back(coo);
    coo = 1296*790 + 822;
    nz.push_back(coo);
    coo = 1296*792 + 795;
    nz.push_back(coo);
    coo = 1296*792 + 823;
    nz.push_back(coo);
    coo = 1296*793 + 795;
    nz.push_back(coo);
    coo = 1296*793 + 798;
    nz.push_back(coo);
    coo = 1296*793 + 1013;
    nz.push_back(coo);
    coo = 1296*794 + 795;
    nz.push_back(coo);
    coo = 1296*794 + 796;
    nz.push_back(coo);
    coo = 1296*794 + 797;
    nz.push_back(coo);
    coo = 1296*796 + 827;
    nz.push_back(coo);
    coo = 1296*796 + 828;
    nz.push_back(coo);
    coo = 1296*797 + 802;
    nz.push_back(coo);
    coo = 1296*798 + 801;
    nz.push_back(coo);
    coo = 1296*799 + 801;
    nz.push_back(coo);
    coo = 1296*799 + 804;
    nz.push_back(coo);
    coo = 1296*799 + 1019;
    nz.push_back(coo);
    coo = 1296*800 + 801;
    nz.push_back(coo);
    coo = 1296*800 + 802;
    nz.push_back(coo);
    coo = 1296*800 + 803;
    nz.push_back(coo);
    coo = 1296*802 + 834;
    nz.push_back(coo);
    coo = 1296*803 + 808;
    nz.push_back(coo);
    coo = 1296*804 + 807;
    nz.push_back(coo);
    coo = 1296*805 + 807;
    nz.push_back(coo);
    coo = 1296*805 + 810;
    nz.push_back(coo);
    coo = 1296*805 + 1025;
    nz.push_back(coo);
    coo = 1296*806 + 807;
    nz.push_back(coo);
    coo = 1296*806 + 808;
    nz.push_back(coo);
    coo = 1296*806 + 809;
    nz.push_back(coo);
    coo = 1296*808 + 840;
    nz.push_back(coo);
    coo = 1296*809 + 814;
    nz.push_back(coo);
    coo = 1296*810 + 813;
    nz.push_back(coo);
    coo = 1296*811 + 813;
    nz.push_back(coo);
    coo = 1296*811 + 816;
    nz.push_back(coo);
    coo = 1296*811 + 1031;
    nz.push_back(coo);
    coo = 1296*812 + 813;
    nz.push_back(coo);
    coo = 1296*812 + 814;
    nz.push_back(coo);
    coo = 1296*812 + 815;
    nz.push_back(coo);
    coo = 1296*814 + 846;
    nz.push_back(coo);
    coo = 1296*815 + 820;
    nz.push_back(coo);
    coo = 1296*816 + 819;
    nz.push_back(coo);
    coo = 1296*817 + 819;
    nz.push_back(coo);
    coo = 1296*817 + 822;
    nz.push_back(coo);
    coo = 1296*817 + 1037;
    nz.push_back(coo);
    coo = 1296*818 + 819;
    nz.push_back(coo);
    coo = 1296*818 + 820;
    nz.push_back(coo);
    coo = 1296*818 + 821;
    nz.push_back(coo);
    coo = 1296*820 + 852;
    nz.push_back(coo);
    coo = 1296*821 + 826;
    nz.push_back(coo);
    coo = 1296*822 + 825;
    nz.push_back(coo);
    coo = 1296*823 + 825;
    nz.push_back(coo);
    coo = 1296*823 + 1043;
    nz.push_back(coo);
    coo = 1296*824 + 825;
    nz.push_back(coo);
    coo = 1296*824 + 826;
    nz.push_back(coo);
    coo = 1296*824 + 827;
    nz.push_back(coo);
    coo = 1296*826 + 858;
    nz.push_back(coo);
    coo = 1296*828 + 831;
    nz.push_back(coo);
    coo = 1296*828 + 859;
    nz.push_back(coo);
    coo = 1296*829 + 831;
    nz.push_back(coo);
    coo = 1296*829 + 834;
    nz.push_back(coo);
    coo = 1296*829 + 1049;
    nz.push_back(coo);
    coo = 1296*830 + 831;
    nz.push_back(coo);
    coo = 1296*830 + 832;
    nz.push_back(coo);
    coo = 1296*830 + 833;
    nz.push_back(coo);
    coo = 1296*832 + 863;
    nz.push_back(coo);
    coo = 1296*833 + 838;
    nz.push_back(coo);
    coo = 1296*834 + 837;
    nz.push_back(coo);
    coo = 1296*835 + 837;
    nz.push_back(coo);
    coo = 1296*835 + 840;
    nz.push_back(coo);
    coo = 1296*835 + 1055;
    nz.push_back(coo);
    coo = 1296*836 + 837;
    nz.push_back(coo);
    coo = 1296*836 + 838;
    nz.push_back(coo);
    coo = 1296*836 + 839;
    nz.push_back(coo);
    coo = 1296*839 + 844;
    nz.push_back(coo);
    coo = 1296*840 + 843;
    nz.push_back(coo);
    coo = 1296*841 + 843;
    nz.push_back(coo);
    coo = 1296*841 + 846;
    nz.push_back(coo);
    coo = 1296*841 + 1061;
    nz.push_back(coo);
    coo = 1296*842 + 843;
    nz.push_back(coo);
    coo = 1296*842 + 844;
    nz.push_back(coo);
    coo = 1296*842 + 845;
    nz.push_back(coo);
    coo = 1296*845 + 850;
    nz.push_back(coo);
    coo = 1296*846 + 849;
    nz.push_back(coo);
    coo = 1296*847 + 849;
    nz.push_back(coo);
    coo = 1296*847 + 852;
    nz.push_back(coo);
    coo = 1296*847 + 1067;
    nz.push_back(coo);
    coo = 1296*848 + 849;
    nz.push_back(coo);
    coo = 1296*848 + 850;
    nz.push_back(coo);
    coo = 1296*848 + 851;
    nz.push_back(coo);
    coo = 1296*851 + 856;
    nz.push_back(coo);
    coo = 1296*852 + 855;
    nz.push_back(coo);
    coo = 1296*853 + 855;
    nz.push_back(coo);
    coo = 1296*853 + 858;
    nz.push_back(coo);
    coo = 1296*853 + 1073;
    nz.push_back(coo);
    coo = 1296*854 + 855;
    nz.push_back(coo);
    coo = 1296*854 + 856;
    nz.push_back(coo);
    coo = 1296*854 + 857;
    nz.push_back(coo);
    coo = 1296*857 + 862;
    nz.push_back(coo);
    coo = 1296*858 + 861;
    nz.push_back(coo);
    coo = 1296*859 + 861;
    nz.push_back(coo);
    coo = 1296*859 + 1079;
    nz.push_back(coo);
    coo = 1296*860 + 861;
    nz.push_back(coo);
    coo = 1296*860 + 862;
    nz.push_back(coo);
    coo = 1296*860 + 863;
    nz.push_back(coo);
    coo = 1296*864 + 867;
    nz.push_back(coo);
    coo = 1296*864 + 895;
    nz.push_back(coo);
    coo = 1296*864 + 1048;
    nz.push_back(coo);
    coo = 1296*865 + 867;
    nz.push_back(coo);
    coo = 1296*865 + 870;
    nz.push_back(coo);
    coo = 1296*865 + 1085;
    nz.push_back(coo);
    coo = 1296*866 + 867;
    nz.push_back(coo);
    coo = 1296*866 + 868;
    nz.push_back(coo);
    coo = 1296*866 + 869;
    nz.push_back(coo);
    coo = 1296*868 + 899;
    nz.push_back(coo);
    coo = 1296*868 + 900;
    nz.push_back(coo);
    coo = 1296*869 + 874;
    nz.push_back(coo);
    coo = 1296*870 + 873;
    nz.push_back(coo);
    coo = 1296*870 + 1054;
    nz.push_back(coo);
    coo = 1296*871 + 873;
    nz.push_back(coo);
    coo = 1296*871 + 876;
    nz.push_back(coo);
    coo = 1296*871 + 1091;
    nz.push_back(coo);
    coo = 1296*872 + 873;
    nz.push_back(coo);
    coo = 1296*872 + 874;
    nz.push_back(coo);
    coo = 1296*872 + 875;
    nz.push_back(coo);
    coo = 1296*874 + 906;
    nz.push_back(coo);
    coo = 1296*875 + 880;
    nz.push_back(coo);
    coo = 1296*876 + 879;
    nz.push_back(coo);
    coo = 1296*876 + 1060;
    nz.push_back(coo);
    coo = 1296*877 + 879;
    nz.push_back(coo);
    coo = 1296*877 + 882;
    nz.push_back(coo);
    coo = 1296*877 + 1097;
    nz.push_back(coo);
    coo = 1296*878 + 879;
    nz.push_back(coo);
    coo = 1296*878 + 880;
    nz.push_back(coo);
    coo = 1296*878 + 881;
    nz.push_back(coo);
    coo = 1296*880 + 912;
    nz.push_back(coo);
    coo = 1296*881 + 886;
    nz.push_back(coo);
    coo = 1296*882 + 885;
    nz.push_back(coo);
    coo = 1296*882 + 1066;
    nz.push_back(coo);
    coo = 1296*883 + 885;
    nz.push_back(coo);
    coo = 1296*883 + 888;
    nz.push_back(coo);
    coo = 1296*883 + 1103;
    nz.push_back(coo);
    coo = 1296*884 + 885;
    nz.push_back(coo);
    coo = 1296*884 + 886;
    nz.push_back(coo);
    coo = 1296*884 + 887;
    nz.push_back(coo);
    coo = 1296*886 + 918;
    nz.push_back(coo);
    coo = 1296*887 + 892;
    nz.push_back(coo);
    coo = 1296*888 + 891;
    nz.push_back(coo);
    coo = 1296*888 + 1072;
    nz.push_back(coo);
    coo = 1296*889 + 891;
    nz.push_back(coo);
    coo = 1296*889 + 894;
    nz.push_back(coo);
    coo = 1296*889 + 1109;
    nz.push_back(coo);
    coo = 1296*890 + 891;
    nz.push_back(coo);
    coo = 1296*890 + 892;
    nz.push_back(coo);
    coo = 1296*890 + 893;
    nz.push_back(coo);
    coo = 1296*892 + 924;
    nz.push_back(coo);
    coo = 1296*893 + 898;
    nz.push_back(coo);
    coo = 1296*894 + 897;
    nz.push_back(coo);
    coo = 1296*894 + 1078;
    nz.push_back(coo);
    coo = 1296*895 + 897;
    nz.push_back(coo);
    coo = 1296*895 + 1115;
    nz.push_back(coo);
    coo = 1296*896 + 897;
    nz.push_back(coo);
    coo = 1296*896 + 898;
    nz.push_back(coo);
    coo = 1296*896 + 899;
    nz.push_back(coo);
    coo = 1296*898 + 930;
    nz.push_back(coo);
    coo = 1296*900 + 903;
    nz.push_back(coo);
    coo = 1296*900 + 931;
    nz.push_back(coo);
    coo = 1296*901 + 903;
    nz.push_back(coo);
    coo = 1296*901 + 906;
    nz.push_back(coo);
    coo = 1296*901 + 1121;
    nz.push_back(coo);
    coo = 1296*902 + 903;
    nz.push_back(coo);
    coo = 1296*902 + 904;
    nz.push_back(coo);
    coo = 1296*902 + 905;
    nz.push_back(coo);
    coo = 1296*904 + 935;
    nz.push_back(coo);
    coo = 1296*904 + 936;
    nz.push_back(coo);
    coo = 1296*905 + 910;
    nz.push_back(coo);
    coo = 1296*906 + 909;
    nz.push_back(coo);
    coo = 1296*907 + 909;
    nz.push_back(coo);
    coo = 1296*907 + 912;
    nz.push_back(coo);
    coo = 1296*907 + 1127;
    nz.push_back(coo);
    coo = 1296*908 + 909;
    nz.push_back(coo);
    coo = 1296*908 + 910;
    nz.push_back(coo);
    coo = 1296*908 + 911;
    nz.push_back(coo);
    coo = 1296*910 + 942;
    nz.push_back(coo);
    coo = 1296*911 + 916;
    nz.push_back(coo);
    coo = 1296*912 + 915;
    nz.push_back(coo);
    coo = 1296*913 + 915;
    nz.push_back(coo);
    coo = 1296*913 + 918;
    nz.push_back(coo);
    coo = 1296*913 + 1133;
    nz.push_back(coo);
    coo = 1296*914 + 915;
    nz.push_back(coo);
    coo = 1296*914 + 916;
    nz.push_back(coo);
    coo = 1296*914 + 917;
    nz.push_back(coo);
    coo = 1296*916 + 948;
    nz.push_back(coo);
    coo = 1296*917 + 922;
    nz.push_back(coo);
    coo = 1296*918 + 921;
    nz.push_back(coo);
    coo = 1296*919 + 921;
    nz.push_back(coo);
    coo = 1296*919 + 924;
    nz.push_back(coo);
    coo = 1296*919 + 1139;
    nz.push_back(coo);
    coo = 1296*920 + 921;
    nz.push_back(coo);
    coo = 1296*920 + 922;
    nz.push_back(coo);
    coo = 1296*920 + 923;
    nz.push_back(coo);
    coo = 1296*922 + 954;
    nz.push_back(coo);
    coo = 1296*923 + 928;
    nz.push_back(coo);
    coo = 1296*924 + 927;
    nz.push_back(coo);
    coo = 1296*925 + 927;
    nz.push_back(coo);
    coo = 1296*925 + 930;
    nz.push_back(coo);
    coo = 1296*925 + 1145;
    nz.push_back(coo);
    coo = 1296*926 + 927;
    nz.push_back(coo);
    coo = 1296*926 + 928;
    nz.push_back(coo);
    coo = 1296*926 + 929;
    nz.push_back(coo);
    coo = 1296*928 + 960;
    nz.push_back(coo);
    coo = 1296*929 + 934;
    nz.push_back(coo);
    coo = 1296*930 + 933;
    nz.push_back(coo);
    coo = 1296*931 + 933;
    nz.push_back(coo);
    coo = 1296*931 + 1151;
    nz.push_back(coo);
    coo = 1296*932 + 933;
    nz.push_back(coo);
    coo = 1296*932 + 934;
    nz.push_back(coo);
    coo = 1296*932 + 935;
    nz.push_back(coo);
    coo = 1296*934 + 966;
    nz.push_back(coo);
    coo = 1296*936 + 939;
    nz.push_back(coo);
    coo = 1296*936 + 967;
    nz.push_back(coo);
    coo = 1296*937 + 939;
    nz.push_back(coo);
    coo = 1296*937 + 942;
    nz.push_back(coo);
    coo = 1296*937 + 1157;
    nz.push_back(coo);
    coo = 1296*938 + 939;
    nz.push_back(coo);
    coo = 1296*938 + 940;
    nz.push_back(coo);
    coo = 1296*938 + 941;
    nz.push_back(coo);
    coo = 1296*940 + 971;
    nz.push_back(coo);
    coo = 1296*940 + 972;
    nz.push_back(coo);
    coo = 1296*941 + 946;
    nz.push_back(coo);
    coo = 1296*942 + 945;
    nz.push_back(coo);
    coo = 1296*943 + 945;
    nz.push_back(coo);
    coo = 1296*943 + 948;
    nz.push_back(coo);
    coo = 1296*943 + 1163;
    nz.push_back(coo);
    coo = 1296*944 + 945;
    nz.push_back(coo);
    coo = 1296*944 + 946;
    nz.push_back(coo);
    coo = 1296*944 + 947;
    nz.push_back(coo);
    coo = 1296*946 + 978;
    nz.push_back(coo);
    coo = 1296*947 + 952;
    nz.push_back(coo);
    coo = 1296*948 + 951;
    nz.push_back(coo);
    coo = 1296*949 + 951;
    nz.push_back(coo);
    coo = 1296*949 + 954;
    nz.push_back(coo);
    coo = 1296*949 + 1169;
    nz.push_back(coo);
    coo = 1296*950 + 951;
    nz.push_back(coo);
    coo = 1296*950 + 952;
    nz.push_back(coo);
    coo = 1296*950 + 953;
    nz.push_back(coo);
    coo = 1296*952 + 984;
    nz.push_back(coo);
    coo = 1296*953 + 958;
    nz.push_back(coo);
    coo = 1296*954 + 957;
    nz.push_back(coo);
    coo = 1296*955 + 957;
    nz.push_back(coo);
    coo = 1296*955 + 960;
    nz.push_back(coo);
    coo = 1296*955 + 1175;
    nz.push_back(coo);
    coo = 1296*956 + 957;
    nz.push_back(coo);
    coo = 1296*956 + 958;
    nz.push_back(coo);
    coo = 1296*956 + 959;
    nz.push_back(coo);
    coo = 1296*958 + 990;
    nz.push_back(coo);
    coo = 1296*959 + 964;
    nz.push_back(coo);
    coo = 1296*960 + 963;
    nz.push_back(coo);
    coo = 1296*961 + 963;
    nz.push_back(coo);
    coo = 1296*961 + 966;
    nz.push_back(coo);
    coo = 1296*961 + 1181;
    nz.push_back(coo);
    coo = 1296*962 + 963;
    nz.push_back(coo);
    coo = 1296*962 + 964;
    nz.push_back(coo);
    coo = 1296*962 + 965;
    nz.push_back(coo);
    coo = 1296*964 + 996;
    nz.push_back(coo);
    coo = 1296*965 + 970;
    nz.push_back(coo);
    coo = 1296*966 + 969;
    nz.push_back(coo);
    coo = 1296*967 + 969;
    nz.push_back(coo);
    coo = 1296*967 + 1187;
    nz.push_back(coo);
    coo = 1296*968 + 969;
    nz.push_back(coo);
    coo = 1296*968 + 970;
    nz.push_back(coo);
    coo = 1296*968 + 971;
    nz.push_back(coo);
    coo = 1296*970 + 1002;
    nz.push_back(coo);
    coo = 1296*972 + 975;
    nz.push_back(coo);
    coo = 1296*972 + 1003;
    nz.push_back(coo);
    coo = 1296*973 + 975;
    nz.push_back(coo);
    coo = 1296*973 + 978;
    nz.push_back(coo);
    coo = 1296*973 + 1193;
    nz.push_back(coo);
    coo = 1296*974 + 975;
    nz.push_back(coo);
    coo = 1296*974 + 976;
    nz.push_back(coo);
    coo = 1296*974 + 977;
    nz.push_back(coo);
    coo = 1296*976 + 1007;
    nz.push_back(coo);
    coo = 1296*976 + 1008;
    nz.push_back(coo);
    coo = 1296*977 + 982;
    nz.push_back(coo);
    coo = 1296*978 + 981;
    nz.push_back(coo);
    coo = 1296*979 + 981;
    nz.push_back(coo);
    coo = 1296*979 + 984;
    nz.push_back(coo);
    coo = 1296*979 + 1199;
    nz.push_back(coo);
    coo = 1296*980 + 981;
    nz.push_back(coo);
    coo = 1296*980 + 982;
    nz.push_back(coo);
    coo = 1296*980 + 983;
    nz.push_back(coo);
    coo = 1296*982 + 1014;
    nz.push_back(coo);
    coo = 1296*983 + 988;
    nz.push_back(coo);
    coo = 1296*984 + 987;
    nz.push_back(coo);
    coo = 1296*985 + 987;
    nz.push_back(coo);
    coo = 1296*985 + 990;
    nz.push_back(coo);
    coo = 1296*985 + 1205;
    nz.push_back(coo);
    coo = 1296*986 + 987;
    nz.push_back(coo);
    coo = 1296*986 + 988;
    nz.push_back(coo);
    coo = 1296*986 + 989;
    nz.push_back(coo);
    coo = 1296*988 + 1020;
    nz.push_back(coo);
    coo = 1296*989 + 994;
    nz.push_back(coo);
    coo = 1296*990 + 993;
    nz.push_back(coo);
    coo = 1296*991 + 993;
    nz.push_back(coo);
    coo = 1296*991 + 996;
    nz.push_back(coo);
    coo = 1296*991 + 1211;
    nz.push_back(coo);
    coo = 1296*992 + 993;
    nz.push_back(coo);
    coo = 1296*992 + 994;
    nz.push_back(coo);
    coo = 1296*992 + 995;
    nz.push_back(coo);
    coo = 1296*994 + 1026;
    nz.push_back(coo);
    coo = 1296*995 + 1000;
    nz.push_back(coo);
    coo = 1296*996 + 999;
    nz.push_back(coo);
    coo = 1296*997 + 999;
    nz.push_back(coo);
    coo = 1296*997 + 1002;
    nz.push_back(coo);
    coo = 1296*997 + 1217;
    nz.push_back(coo);
    coo = 1296*998 + 999;
    nz.push_back(coo);
    coo = 1296*998 + 1000;
    nz.push_back(coo);
    coo = 1296*998 + 1001;
    nz.push_back(coo);
    coo = 1296*1000 + 1032;
    nz.push_back(coo);
    coo = 1296*1001 + 1006;
    nz.push_back(coo);
    coo = 1296*1002 + 1005;
    nz.push_back(coo);
    coo = 1296*1003 + 1005;
    nz.push_back(coo);
    coo = 1296*1003 + 1223;
    nz.push_back(coo);
    coo = 1296*1004 + 1005;
    nz.push_back(coo);
    coo = 1296*1004 + 1006;
    nz.push_back(coo);
    coo = 1296*1004 + 1007;
    nz.push_back(coo);
    coo = 1296*1006 + 1038;
    nz.push_back(coo);
    coo = 1296*1008 + 1011;
    nz.push_back(coo);
    coo = 1296*1008 + 1039;
    nz.push_back(coo);
    coo = 1296*1009 + 1011;
    nz.push_back(coo);
    coo = 1296*1009 + 1014;
    nz.push_back(coo);
    coo = 1296*1009 + 1229;
    nz.push_back(coo);
    coo = 1296*1010 + 1011;
    nz.push_back(coo);
    coo = 1296*1010 + 1012;
    nz.push_back(coo);
    coo = 1296*1010 + 1013;
    nz.push_back(coo);
    coo = 1296*1012 + 1043;
    nz.push_back(coo);
    coo = 1296*1012 + 1044;
    nz.push_back(coo);
    coo = 1296*1013 + 1018;
    nz.push_back(coo);
    coo = 1296*1014 + 1017;
    nz.push_back(coo);
    coo = 1296*1015 + 1017;
    nz.push_back(coo);
    coo = 1296*1015 + 1020;
    nz.push_back(coo);
    coo = 1296*1015 + 1235;
    nz.push_back(coo);
    coo = 1296*1016 + 1017;
    nz.push_back(coo);
    coo = 1296*1016 + 1018;
    nz.push_back(coo);
    coo = 1296*1016 + 1019;
    nz.push_back(coo);
    coo = 1296*1018 + 1050;
    nz.push_back(coo);
    coo = 1296*1019 + 1024;
    nz.push_back(coo);
    coo = 1296*1020 + 1023;
    nz.push_back(coo);
    coo = 1296*1021 + 1023;
    nz.push_back(coo);
    coo = 1296*1021 + 1026;
    nz.push_back(coo);
    coo = 1296*1021 + 1241;
    nz.push_back(coo);
    coo = 1296*1022 + 1023;
    nz.push_back(coo);
    coo = 1296*1022 + 1024;
    nz.push_back(coo);
    coo = 1296*1022 + 1025;
    nz.push_back(coo);
    coo = 1296*1024 + 1056;
    nz.push_back(coo);
    coo = 1296*1025 + 1030;
    nz.push_back(coo);
    coo = 1296*1026 + 1029;
    nz.push_back(coo);
    coo = 1296*1027 + 1029;
    nz.push_back(coo);
    coo = 1296*1027 + 1032;
    nz.push_back(coo);
    coo = 1296*1027 + 1247;
    nz.push_back(coo);
    coo = 1296*1028 + 1029;
    nz.push_back(coo);
    coo = 1296*1028 + 1030;
    nz.push_back(coo);
    coo = 1296*1028 + 1031;
    nz.push_back(coo);
    coo = 1296*1030 + 1062;
    nz.push_back(coo);
    coo = 1296*1031 + 1036;
    nz.push_back(coo);
    coo = 1296*1032 + 1035;
    nz.push_back(coo);
    coo = 1296*1033 + 1035;
    nz.push_back(coo);
    coo = 1296*1033 + 1038;
    nz.push_back(coo);
    coo = 1296*1033 + 1253;
    nz.push_back(coo);
    coo = 1296*1034 + 1035;
    nz.push_back(coo);
    coo = 1296*1034 + 1036;
    nz.push_back(coo);
    coo = 1296*1034 + 1037;
    nz.push_back(coo);
    coo = 1296*1036 + 1068;
    nz.push_back(coo);
    coo = 1296*1037 + 1042;
    nz.push_back(coo);
    coo = 1296*1038 + 1041;
    nz.push_back(coo);
    coo = 1296*1039 + 1041;
    nz.push_back(coo);
    coo = 1296*1039 + 1259;
    nz.push_back(coo);
    coo = 1296*1040 + 1041;
    nz.push_back(coo);
    coo = 1296*1040 + 1042;
    nz.push_back(coo);
    coo = 1296*1040 + 1043;
    nz.push_back(coo);
    coo = 1296*1042 + 1074;
    nz.push_back(coo);
    coo = 1296*1044 + 1047;
    nz.push_back(coo);
    coo = 1296*1044 + 1075;
    nz.push_back(coo);
    coo = 1296*1045 + 1047;
    nz.push_back(coo);
    coo = 1296*1045 + 1050;
    nz.push_back(coo);
    coo = 1296*1045 + 1265;
    nz.push_back(coo);
    coo = 1296*1046 + 1047;
    nz.push_back(coo);
    coo = 1296*1046 + 1048;
    nz.push_back(coo);
    coo = 1296*1046 + 1049;
    nz.push_back(coo);
    coo = 1296*1048 + 1079;
    nz.push_back(coo);
    coo = 1296*1049 + 1054;
    nz.push_back(coo);
    coo = 1296*1050 + 1053;
    nz.push_back(coo);
    coo = 1296*1051 + 1053;
    nz.push_back(coo);
    coo = 1296*1051 + 1056;
    nz.push_back(coo);
    coo = 1296*1051 + 1271;
    nz.push_back(coo);
    coo = 1296*1052 + 1053;
    nz.push_back(coo);
    coo = 1296*1052 + 1054;
    nz.push_back(coo);
    coo = 1296*1052 + 1055;
    nz.push_back(coo);
    coo = 1296*1055 + 1060;
    nz.push_back(coo);
    coo = 1296*1056 + 1059;
    nz.push_back(coo);
    coo = 1296*1057 + 1059;
    nz.push_back(coo);
    coo = 1296*1057 + 1062;
    nz.push_back(coo);
    coo = 1296*1057 + 1277;
    nz.push_back(coo);
    coo = 1296*1058 + 1059;
    nz.push_back(coo);
    coo = 1296*1058 + 1060;
    nz.push_back(coo);
    coo = 1296*1058 + 1061;
    nz.push_back(coo);
    coo = 1296*1061 + 1066;
    nz.push_back(coo);
    coo = 1296*1062 + 1065;
    nz.push_back(coo);
    coo = 1296*1063 + 1065;
    nz.push_back(coo);
    coo = 1296*1063 + 1068;
    nz.push_back(coo);
    coo = 1296*1063 + 1283;
    nz.push_back(coo);
    coo = 1296*1064 + 1065;
    nz.push_back(coo);
    coo = 1296*1064 + 1066;
    nz.push_back(coo);
    coo = 1296*1064 + 1067;
    nz.push_back(coo);
    coo = 1296*1067 + 1072;
    nz.push_back(coo);
    coo = 1296*1068 + 1071;
    nz.push_back(coo);
    coo = 1296*1069 + 1071;
    nz.push_back(coo);
    coo = 1296*1069 + 1074;
    nz.push_back(coo);
    coo = 1296*1069 + 1289;
    nz.push_back(coo);
    coo = 1296*1070 + 1071;
    nz.push_back(coo);
    coo = 1296*1070 + 1072;
    nz.push_back(coo);
    coo = 1296*1070 + 1073;
    nz.push_back(coo);
    coo = 1296*1073 + 1078;
    nz.push_back(coo);
    coo = 1296*1074 + 1077;
    nz.push_back(coo);
    coo = 1296*1075 + 1077;
    nz.push_back(coo);
    coo = 1296*1075 + 1295;
    nz.push_back(coo);
    coo = 1296*1076 + 1077;
    nz.push_back(coo);
    coo = 1296*1076 + 1078;
    nz.push_back(coo);
    coo = 1296*1076 + 1079;
    nz.push_back(coo);
    coo = 1296*1080 + 1083;
    nz.push_back(coo);
    coo = 1296*1080 + 1111;
    nz.push_back(coo);
    coo = 1296*1080 + 1264;
    nz.push_back(coo);
    coo = 1296*1081 + 1083;
    nz.push_back(coo);
    coo = 1296*1081 + 1086;
    nz.push_back(coo);
    coo = 1296*1082 + 1083;
    nz.push_back(coo);
    coo = 1296*1082 + 1084;
    nz.push_back(coo);
    coo = 1296*1082 + 1085;
    nz.push_back(coo);
    coo = 1296*1084 + 1115;
    nz.push_back(coo);
    coo = 1296*1084 + 1116;
    nz.push_back(coo);
    coo = 1296*1085 + 1090;
    nz.push_back(coo);
    coo = 1296*1086 + 1089;
    nz.push_back(coo);
    coo = 1296*1086 + 1270;
    nz.push_back(coo);
    coo = 1296*1087 + 1089;
    nz.push_back(coo);
    coo = 1296*1087 + 1092;
    nz.push_back(coo);
    coo = 1296*1088 + 1089;
    nz.push_back(coo);
    coo = 1296*1088 + 1090;
    nz.push_back(coo);
    coo = 1296*1088 + 1091;
    nz.push_back(coo);
    coo = 1296*1090 + 1122;
    nz.push_back(coo);
    coo = 1296*1091 + 1096;
    nz.push_back(coo);
    coo = 1296*1092 + 1095;
    nz.push_back(coo);
    coo = 1296*1092 + 1276;
    nz.push_back(coo);
    coo = 1296*1093 + 1095;
    nz.push_back(coo);
    coo = 1296*1093 + 1098;
    nz.push_back(coo);
    coo = 1296*1094 + 1095;
    nz.push_back(coo);
    coo = 1296*1094 + 1096;
    nz.push_back(coo);
    coo = 1296*1094 + 1097;
    nz.push_back(coo);
    coo = 1296*1096 + 1128;
    nz.push_back(coo);
    coo = 1296*1097 + 1102;
    nz.push_back(coo);
    coo = 1296*1098 + 1101;
    nz.push_back(coo);
    coo = 1296*1098 + 1282;
    nz.push_back(coo);
    coo = 1296*1099 + 1101;
    nz.push_back(coo);
    coo = 1296*1099 + 1104;
    nz.push_back(coo);
    coo = 1296*1100 + 1101;
    nz.push_back(coo);
    coo = 1296*1100 + 1102;
    nz.push_back(coo);
    coo = 1296*1100 + 1103;
    nz.push_back(coo);
    coo = 1296*1102 + 1134;
    nz.push_back(coo);
    coo = 1296*1103 + 1108;
    nz.push_back(coo);
    coo = 1296*1104 + 1107;
    nz.push_back(coo);
    coo = 1296*1104 + 1288;
    nz.push_back(coo);
    coo = 1296*1105 + 1107;
    nz.push_back(coo);
    coo = 1296*1105 + 1110;
    nz.push_back(coo);
    coo = 1296*1106 + 1107;
    nz.push_back(coo);
    coo = 1296*1106 + 1108;
    nz.push_back(coo);
    coo = 1296*1106 + 1109;
    nz.push_back(coo);
    coo = 1296*1108 + 1140;
    nz.push_back(coo);
    coo = 1296*1109 + 1114;
    nz.push_back(coo);
    coo = 1296*1110 + 1113;
    nz.push_back(coo);
    coo = 1296*1110 + 1294;
    nz.push_back(coo);
    coo = 1296*1111 + 1113;
    nz.push_back(coo);
    coo = 1296*1112 + 1113;
    nz.push_back(coo);
    coo = 1296*1112 + 1114;
    nz.push_back(coo);
    coo = 1296*1112 + 1115;
    nz.push_back(coo);
    coo = 1296*1114 + 1146;
    nz.push_back(coo);
    coo = 1296*1116 + 1119;
    nz.push_back(coo);
    coo = 1296*1116 + 1147;
    nz.push_back(coo);
    coo = 1296*1117 + 1119;
    nz.push_back(coo);
    coo = 1296*1117 + 1122;
    nz.push_back(coo);
    coo = 1296*1118 + 1119;
    nz.push_back(coo);
    coo = 1296*1118 + 1120;
    nz.push_back(coo);
    coo = 1296*1118 + 1121;
    nz.push_back(coo);
    coo = 1296*1120 + 1151;
    nz.push_back(coo);
    coo = 1296*1120 + 1152;
    nz.push_back(coo);
    coo = 1296*1121 + 1126;
    nz.push_back(coo);
    coo = 1296*1122 + 1125;
    nz.push_back(coo);
    coo = 1296*1123 + 1125;
    nz.push_back(coo);
    coo = 1296*1123 + 1128;
    nz.push_back(coo);
    coo = 1296*1124 + 1125;
    nz.push_back(coo);
    coo = 1296*1124 + 1126;
    nz.push_back(coo);
    coo = 1296*1124 + 1127;
    nz.push_back(coo);
    coo = 1296*1126 + 1158;
    nz.push_back(coo);
    coo = 1296*1127 + 1132;
    nz.push_back(coo);
    coo = 1296*1128 + 1131;
    nz.push_back(coo);
    coo = 1296*1129 + 1131;
    nz.push_back(coo);
    coo = 1296*1129 + 1134;
    nz.push_back(coo);
    coo = 1296*1130 + 1131;
    nz.push_back(coo);
    coo = 1296*1130 + 1132;
    nz.push_back(coo);
    coo = 1296*1130 + 1133;
    nz.push_back(coo);
    coo = 1296*1132 + 1164;
    nz.push_back(coo);
    coo = 1296*1133 + 1138;
    nz.push_back(coo);
    coo = 1296*1134 + 1137;
    nz.push_back(coo);
    coo = 1296*1135 + 1137;
    nz.push_back(coo);
    coo = 1296*1135 + 1140;
    nz.push_back(coo);
    coo = 1296*1136 + 1137;
    nz.push_back(coo);
    coo = 1296*1136 + 1138;
    nz.push_back(coo);
    coo = 1296*1136 + 1139;
    nz.push_back(coo);
    coo = 1296*1138 + 1170;
    nz.push_back(coo);
    coo = 1296*1139 + 1144;
    nz.push_back(coo);
    coo = 1296*1140 + 1143;
    nz.push_back(coo);
    coo = 1296*1141 + 1143;
    nz.push_back(coo);
    coo = 1296*1141 + 1146;
    nz.push_back(coo);
    coo = 1296*1142 + 1143;
    nz.push_back(coo);
    coo = 1296*1142 + 1144;
    nz.push_back(coo);
    coo = 1296*1142 + 1145;
    nz.push_back(coo);
    coo = 1296*1144 + 1176;
    nz.push_back(coo);
    coo = 1296*1145 + 1150;
    nz.push_back(coo);
    coo = 1296*1146 + 1149;
    nz.push_back(coo);
    coo = 1296*1147 + 1149;
    nz.push_back(coo);
    coo = 1296*1148 + 1149;
    nz.push_back(coo);
    coo = 1296*1148 + 1150;
    nz.push_back(coo);
    coo = 1296*1148 + 1151;
    nz.push_back(coo);
    coo = 1296*1150 + 1182;
    nz.push_back(coo);
    coo = 1296*1152 + 1155;
    nz.push_back(coo);
    coo = 1296*1152 + 1183;
    nz.push_back(coo);
    coo = 1296*1153 + 1155;
    nz.push_back(coo);
    coo = 1296*1153 + 1158;
    nz.push_back(coo);
    coo = 1296*1154 + 1155;
    nz.push_back(coo);
    coo = 1296*1154 + 1156;
    nz.push_back(coo);
    coo = 1296*1154 + 1157;
    nz.push_back(coo);
    coo = 1296*1156 + 1187;
    nz.push_back(coo);
    coo = 1296*1156 + 1188;
    nz.push_back(coo);
    coo = 1296*1157 + 1162;
    nz.push_back(coo);
    coo = 1296*1158 + 1161;
    nz.push_back(coo);
    coo = 1296*1159 + 1161;
    nz.push_back(coo);
    coo = 1296*1159 + 1164;
    nz.push_back(coo);
    coo = 1296*1160 + 1161;
    nz.push_back(coo);
    coo = 1296*1160 + 1162;
    nz.push_back(coo);
    coo = 1296*1160 + 1163;
    nz.push_back(coo);
    coo = 1296*1162 + 1194;
    nz.push_back(coo);
    coo = 1296*1163 + 1168;
    nz.push_back(coo);
    coo = 1296*1164 + 1167;
    nz.push_back(coo);
    coo = 1296*1165 + 1167;
    nz.push_back(coo);
    coo = 1296*1165 + 1170;
    nz.push_back(coo);
    coo = 1296*1166 + 1167;
    nz.push_back(coo);
    coo = 1296*1166 + 1168;
    nz.push_back(coo);
    coo = 1296*1166 + 1169;
    nz.push_back(coo);
    coo = 1296*1168 + 1200;
    nz.push_back(coo);
    coo = 1296*1169 + 1174;
    nz.push_back(coo);
    coo = 1296*1170 + 1173;
    nz.push_back(coo);
    coo = 1296*1171 + 1173;
    nz.push_back(coo);
    coo = 1296*1171 + 1176;
    nz.push_back(coo);
    coo = 1296*1172 + 1173;
    nz.push_back(coo);
    coo = 1296*1172 + 1174;
    nz.push_back(coo);
    coo = 1296*1172 + 1175;
    nz.push_back(coo);
    coo = 1296*1174 + 1206;
    nz.push_back(coo);
    coo = 1296*1175 + 1180;
    nz.push_back(coo);
    coo = 1296*1176 + 1179;
    nz.push_back(coo);
    coo = 1296*1177 + 1179;
    nz.push_back(coo);
    coo = 1296*1177 + 1182;
    nz.push_back(coo);
    coo = 1296*1178 + 1179;
    nz.push_back(coo);
    coo = 1296*1178 + 1180;
    nz.push_back(coo);
    coo = 1296*1178 + 1181;
    nz.push_back(coo);
    coo = 1296*1180 + 1212;
    nz.push_back(coo);
    coo = 1296*1181 + 1186;
    nz.push_back(coo);
    coo = 1296*1182 + 1185;
    nz.push_back(coo);
    coo = 1296*1183 + 1185;
    nz.push_back(coo);
    coo = 1296*1184 + 1185;
    nz.push_back(coo);
    coo = 1296*1184 + 1186;
    nz.push_back(coo);
    coo = 1296*1184 + 1187;
    nz.push_back(coo);
    coo = 1296*1186 + 1218;
    nz.push_back(coo);
    coo = 1296*1188 + 1191;
    nz.push_back(coo);
    coo = 1296*1188 + 1219;
    nz.push_back(coo);
    coo = 1296*1189 + 1191;
    nz.push_back(coo);
    coo = 1296*1189 + 1194;
    nz.push_back(coo);
    coo = 1296*1190 + 1191;
    nz.push_back(coo);
    coo = 1296*1190 + 1192;
    nz.push_back(coo);
    coo = 1296*1190 + 1193;
    nz.push_back(coo);
    coo = 1296*1192 + 1223;
    nz.push_back(coo);
    coo = 1296*1192 + 1224;
    nz.push_back(coo);
    coo = 1296*1193 + 1198;
    nz.push_back(coo);
    coo = 1296*1194 + 1197;
    nz.push_back(coo);
    coo = 1296*1195 + 1197;
    nz.push_back(coo);
    coo = 1296*1195 + 1200;
    nz.push_back(coo);
    coo = 1296*1196 + 1197;
    nz.push_back(coo);
    coo = 1296*1196 + 1198;
    nz.push_back(coo);
    coo = 1296*1196 + 1199;
    nz.push_back(coo);
    coo = 1296*1198 + 1230;
    nz.push_back(coo);
    coo = 1296*1199 + 1204;
    nz.push_back(coo);
    coo = 1296*1200 + 1203;
    nz.push_back(coo);
    coo = 1296*1201 + 1203;
    nz.push_back(coo);
    coo = 1296*1201 + 1206;
    nz.push_back(coo);
    coo = 1296*1202 + 1203;
    nz.push_back(coo);
    coo = 1296*1202 + 1204;
    nz.push_back(coo);
    coo = 1296*1202 + 1205;
    nz.push_back(coo);
    coo = 1296*1204 + 1236;
    nz.push_back(coo);
    coo = 1296*1205 + 1210;
    nz.push_back(coo);
    coo = 1296*1206 + 1209;
    nz.push_back(coo);
    coo = 1296*1207 + 1209;
    nz.push_back(coo);
    coo = 1296*1207 + 1212;
    nz.push_back(coo);
    coo = 1296*1208 + 1209;
    nz.push_back(coo);
    coo = 1296*1208 + 1210;
    nz.push_back(coo);
    coo = 1296*1208 + 1211;
    nz.push_back(coo);
    coo = 1296*1210 + 1242;
    nz.push_back(coo);
    coo = 1296*1211 + 1216;
    nz.push_back(coo);
    coo = 1296*1212 + 1215;
    nz.push_back(coo);
    coo = 1296*1213 + 1215;
    nz.push_back(coo);
    coo = 1296*1213 + 1218;
    nz.push_back(coo);
    coo = 1296*1214 + 1215;
    nz.push_back(coo);
    coo = 1296*1214 + 1216;
    nz.push_back(coo);
    coo = 1296*1214 + 1217;
    nz.push_back(coo);
    coo = 1296*1216 + 1248;
    nz.push_back(coo);
    coo = 1296*1217 + 1222;
    nz.push_back(coo);
    coo = 1296*1218 + 1221;
    nz.push_back(coo);
    coo = 1296*1219 + 1221;
    nz.push_back(coo);
    coo = 1296*1220 + 1221;
    nz.push_back(coo);
    coo = 1296*1220 + 1222;
    nz.push_back(coo);
    coo = 1296*1220 + 1223;
    nz.push_back(coo);
    coo = 1296*1222 + 1254;
    nz.push_back(coo);
    coo = 1296*1224 + 1227;
    nz.push_back(coo);
    coo = 1296*1224 + 1255;
    nz.push_back(coo);
    coo = 1296*1225 + 1227;
    nz.push_back(coo);
    coo = 1296*1225 + 1230;
    nz.push_back(coo);
    coo = 1296*1226 + 1227;
    nz.push_back(coo);
    coo = 1296*1226 + 1228;
    nz.push_back(coo);
    coo = 1296*1226 + 1229;
    nz.push_back(coo);
    coo = 1296*1228 + 1259;
    nz.push_back(coo);
    coo = 1296*1228 + 1260;
    nz.push_back(coo);
    coo = 1296*1229 + 1234;
    nz.push_back(coo);
    coo = 1296*1230 + 1233;
    nz.push_back(coo);
    coo = 1296*1231 + 1233;
    nz.push_back(coo);
    coo = 1296*1231 + 1236;
    nz.push_back(coo);
    coo = 1296*1232 + 1233;
    nz.push_back(coo);
    coo = 1296*1232 + 1234;
    nz.push_back(coo);
    coo = 1296*1232 + 1235;
    nz.push_back(coo);
    coo = 1296*1234 + 1266;
    nz.push_back(coo);
    coo = 1296*1235 + 1240;
    nz.push_back(coo);
    coo = 1296*1236 + 1239;
    nz.push_back(coo);
    coo = 1296*1237 + 1239;
    nz.push_back(coo);
    coo = 1296*1237 + 1242;
    nz.push_back(coo);
    coo = 1296*1238 + 1239;
    nz.push_back(coo);
    coo = 1296*1238 + 1240;
    nz.push_back(coo);
    coo = 1296*1238 + 1241;
    nz.push_back(coo);
    coo = 1296*1240 + 1272;
    nz.push_back(coo);
    coo = 1296*1241 + 1246;
    nz.push_back(coo);
    coo = 1296*1242 + 1245;
    nz.push_back(coo);
    coo = 1296*1243 + 1245;
    nz.push_back(coo);
    coo = 1296*1243 + 1248;
    nz.push_back(coo);
    coo = 1296*1244 + 1245;
    nz.push_back(coo);
    coo = 1296*1244 + 1246;
    nz.push_back(coo);
    coo = 1296*1244 + 1247;
    nz.push_back(coo);
    coo = 1296*1246 + 1278;
    nz.push_back(coo);
    coo = 1296*1247 + 1252;
    nz.push_back(coo);
    coo = 1296*1248 + 1251;
    nz.push_back(coo);
    coo = 1296*1249 + 1251;
    nz.push_back(coo);
    coo = 1296*1249 + 1254;
    nz.push_back(coo);
    coo = 1296*1250 + 1251;
    nz.push_back(coo);
    coo = 1296*1250 + 1252;
    nz.push_back(coo);
    coo = 1296*1250 + 1253;
    nz.push_back(coo);
    coo = 1296*1252 + 1284;
    nz.push_back(coo);
    coo = 1296*1253 + 1258;
    nz.push_back(coo);
    coo = 1296*1254 + 1257;
    nz.push_back(coo);
    coo = 1296*1255 + 1257;
    nz.push_back(coo);
    coo = 1296*1256 + 1257;
    nz.push_back(coo);
    coo = 1296*1256 + 1258;
    nz.push_back(coo);
    coo = 1296*1256 + 1259;
    nz.push_back(coo);
    coo = 1296*1258 + 1290;
    nz.push_back(coo);
    coo = 1296*1260 + 1263;
    nz.push_back(coo);
    coo = 1296*1260 + 1291;
    nz.push_back(coo);
    coo = 1296*1261 + 1263;
    nz.push_back(coo);
    coo = 1296*1261 + 1266;
    nz.push_back(coo);
    coo = 1296*1262 + 1263;
    nz.push_back(coo);
    coo = 1296*1262 + 1264;
    nz.push_back(coo);
    coo = 1296*1262 + 1265;
    nz.push_back(coo);
    coo = 1296*1264 + 1295;
    nz.push_back(coo);
    coo = 1296*1265 + 1270;
    nz.push_back(coo);
    coo = 1296*1266 + 1269;
    nz.push_back(coo);
    coo = 1296*1267 + 1269;
    nz.push_back(coo);
    coo = 1296*1267 + 1272;
    nz.push_back(coo);
    coo = 1296*1268 + 1269;
    nz.push_back(coo);
    coo = 1296*1268 + 1270;
    nz.push_back(coo);
    coo = 1296*1268 + 1271;
    nz.push_back(coo);
    coo = 1296*1271 + 1276;
    nz.push_back(coo);
    coo = 1296*1272 + 1275;
    nz.push_back(coo);
    coo = 1296*1273 + 1275;
    nz.push_back(coo);
    coo = 1296*1273 + 1278;
    nz.push_back(coo);
    coo = 1296*1274 + 1275;
    nz.push_back(coo);
    coo = 1296*1274 + 1276;
    nz.push_back(coo);
    coo = 1296*1274 + 1277;
    nz.push_back(coo);
    coo = 1296*1277 + 1282;
    nz.push_back(coo);
    coo = 1296*1278 + 1281;
    nz.push_back(coo);
    coo = 1296*1279 + 1281;
    nz.push_back(coo);
    coo = 1296*1279 + 1284;
    nz.push_back(coo);
    coo = 1296*1280 + 1281;
    nz.push_back(coo);
    coo = 1296*1280 + 1282;
    nz.push_back(coo);
    coo = 1296*1280 + 1283;
    nz.push_back(coo);
    coo = 1296*1283 + 1288;
    nz.push_back(coo);
    coo = 1296*1284 + 1287;
    nz.push_back(coo);
    coo = 1296*1285 + 1287;
    nz.push_back(coo);
    coo = 1296*1285 + 1290;
    nz.push_back(coo);
    coo = 1296*1286 + 1287;
    nz.push_back(coo);
    coo = 1296*1286 + 1288;
    nz.push_back(coo);
    coo = 1296*1286 + 1289;
    nz.push_back(coo);
    coo = 1296*1289 + 1294;
    nz.push_back(coo);
    coo = 1296*1290 + 1293;
    nz.push_back(coo);
    coo = 1296*1291 + 1293;
    nz.push_back(coo);
    coo = 1296*1292 + 1293;
    nz.push_back(coo);
    coo = 1296*1292 + 1294;
    nz.push_back(coo);
    coo = 1296*1292 + 1295;
    nz.push_back(coo);
    return nz;
}

Mat<int> create_plaquettes()
{
   Mat<int> P(648,8);
   P(0, 0) = 1296*0+3;
   P(0, 1) = 1296*3+1;
   P(0, 2) = 1296*1+221;
   P(0, 3) = 1296*221+218;
   P(0, 4) = 1296*218+220;
   P(0, 5) = 1296*220+251;
   P(0, 6) = 1296*251+31;
   P(0, 7) = 1296*31+0;
   P(1, 0) = 1296*0+3;
   P(1, 1) = 1296*3+1;
   P(1, 2) = 1296*1+6;
   P(1, 3) = 1296*6+190;
   P(1, 4) = 1296*190+185;
   P(1, 5) = 1296*185+182;
   P(1, 6) = 1296*182+184;
   P(1, 7) = 1296*184+0;
   P(2, 0) = 1296*0+3;
   P(2, 1) = 1296*3+2;
   P(2, 2) = 1296*2+4;
   P(2, 3) = 1296*4+35;
   P(2, 4) = 1296*35+32;
   P(2, 5) = 1296*32+33;
   P(2, 6) = 1296*33+31;
   P(2, 7) = 1296*31+0;
   P(3, 0) = 1296*0+184;
   P(3, 1) = 1296*184+215;
   P(3, 2) = 1296*215+212;
   P(3, 3) = 1296*212+214;
   P(3, 4) = 1296*214+30;
   P(3, 5) = 1296*30+33;
   P(3, 6) = 1296*33+31;
   P(3, 7) = 1296*31+0;
   P(4, 0) = 1296*1+3;
   P(4, 1) = 1296*3+2;
   P(4, 2) = 1296*2+5;
   P(4, 3) = 1296*5+10;
   P(4, 4) = 1296*10+8;
   P(4, 5) = 1296*8+9;
   P(4, 6) = 1296*9+6;
   P(4, 7) = 1296*6+1;
   P(5, 0) = 1296*1+221;
   P(5, 1) = 1296*221+226;
   P(5, 2) = 1296*226+224;
   P(5, 3) = 1296*224+227;
   P(5, 4) = 1296*227+7;
   P(5, 5) = 1296*7+9;
   P(5, 6) = 1296*9+6;
   P(5, 7) = 1296*6+1;
   P(6, 0) = 1296*2+5;
   P(6, 1) = 1296*5+1081;
   P(6, 2) = 1296*1081+1083;
   P(6, 3) = 1296*1083+1080;
   P(6, 4) = 1296*1080+1111;
   P(6, 5) = 1296*1111+35;
   P(6, 6) = 1296*35+4;
   P(6, 7) = 1296*4+2;
   P(7, 0) = 1296*2+5;
   P(7, 1) = 1296*5+10;
   P(7, 2) = 1296*10+42;
   P(7, 3) = 1296*42+37;
   P(7, 4) = 1296*37+39;
   P(7, 5) = 1296*39+36;
   P(7, 6) = 1296*36+4;
   P(7, 7) = 1296*4+2;
   P(8, 0) = 1296*4+36;
   P(8, 1) = 1296*36+67;
   P(8, 2) = 1296*67+69;
   P(8, 3) = 1296*69+66;
   P(8, 4) = 1296*66+34;
   P(8, 5) = 1296*34+32;
   P(8, 6) = 1296*32+35;
   P(8, 7) = 1296*35+4;
   P(9, 0) = 1296*5+1081;
   P(9, 1) = 1296*1081+1086;
   P(9, 2) = 1296*1086+1089;
   P(9, 3) = 1296*1089+1087;
   P(9, 4) = 1296*1087+11;
   P(9, 5) = 1296*11+8;
   P(9, 6) = 1296*8+10;
   P(9, 7) = 1296*10+5;
   P(10, 0) = 1296*6+9;
   P(10, 1) = 1296*9+7;
   P(10, 2) = 1296*7+12;
   P(10, 3) = 1296*12+196;
   P(10, 4) = 1296*196+191;
   P(10, 5) = 1296*191+188;
   P(10, 6) = 1296*188+190;
   P(10, 7) = 1296*190+6;
   P(11, 0) = 1296*7+9;
   P(11, 1) = 1296*9+8;
   P(11, 2) = 1296*8+11;
   P(11, 3) = 1296*11+16;
   P(11, 4) = 1296*16+14;
   P(11, 5) = 1296*14+15;
   P(11, 6) = 1296*15+12;
   P(11, 7) = 1296*12+7;
   P(12, 0) = 1296*7+227;
   P(12, 1) = 1296*227+232;
   P(12, 2) = 1296*232+230;
   P(12, 3) = 1296*230+233;
   P(12, 4) = 1296*233+13;
   P(12, 5) = 1296*13+15;
   P(12, 6) = 1296*15+12;
   P(12, 7) = 1296*12+7;
   P(13, 0) = 1296*8+11;
   P(13, 1) = 1296*11+16;
   P(13, 2) = 1296*16+48;
   P(13, 3) = 1296*48+43;
   P(13, 4) = 1296*43+45;
   P(13, 5) = 1296*45+42;
   P(13, 6) = 1296*42+10;
   P(13, 7) = 1296*10+8;
   P(14, 0) = 1296*11+1087;
   P(14, 1) = 1296*1087+1092;
   P(14, 2) = 1296*1092+1095;
   P(14, 3) = 1296*1095+1093;
   P(14, 4) = 1296*1093+17;
   P(14, 5) = 1296*17+14;
   P(14, 6) = 1296*14+16;
   P(14, 7) = 1296*16+11;
   P(15, 0) = 1296*12+15;
   P(15, 1) = 1296*15+13;
   P(15, 2) = 1296*13+18;
   P(15, 3) = 1296*18+202;
   P(15, 4) = 1296*202+197;
   P(15, 5) = 1296*197+194;
   P(15, 6) = 1296*194+196;
   P(15, 7) = 1296*196+12;
   P(16, 0) = 1296*13+15;
   P(16, 1) = 1296*15+14;
   P(16, 2) = 1296*14+17;
   P(16, 3) = 1296*17+22;
   P(16, 4) = 1296*22+20;
   P(16, 5) = 1296*20+21;
   P(16, 6) = 1296*21+18;
   P(16, 7) = 1296*18+13;
   P(17, 0) = 1296*13+233;
   P(17, 1) = 1296*233+238;
   P(17, 2) = 1296*238+236;
   P(17, 3) = 1296*236+239;
   P(17, 4) = 1296*239+19;
   P(17, 5) = 1296*19+21;
   P(17, 6) = 1296*21+18;
   P(17, 7) = 1296*18+13;
   P(18, 0) = 1296*14+17;
   P(18, 1) = 1296*17+22;
   P(18, 2) = 1296*22+54;
   P(18, 3) = 1296*54+49;
   P(18, 4) = 1296*49+51;
   P(18, 5) = 1296*51+48;
   P(18, 6) = 1296*48+16;
   P(18, 7) = 1296*16+14;
   P(19, 0) = 1296*17+1093;
   P(19, 1) = 1296*1093+1098;
   P(19, 2) = 1296*1098+1101;
   P(19, 3) = 1296*1101+1099;
   P(19, 4) = 1296*1099+23;
   P(19, 5) = 1296*23+20;
   P(19, 6) = 1296*20+22;
   P(19, 7) = 1296*22+17;
   P(20, 0) = 1296*18+21;
   P(20, 1) = 1296*21+19;
   P(20, 2) = 1296*19+24;
   P(20, 3) = 1296*24+208;
   P(20, 4) = 1296*208+203;
   P(20, 5) = 1296*203+200;
   P(20, 6) = 1296*200+202;
   P(20, 7) = 1296*202+18;
   P(21, 0) = 1296*19+21;
   P(21, 1) = 1296*21+20;
   P(21, 2) = 1296*20+23;
   P(21, 3) = 1296*23+28;
   P(21, 4) = 1296*28+26;
   P(21, 5) = 1296*26+27;
   P(21, 6) = 1296*27+24;
   P(21, 7) = 1296*24+19;
   P(22, 0) = 1296*19+239;
   P(22, 1) = 1296*239+244;
   P(22, 2) = 1296*244+242;
   P(22, 3) = 1296*242+245;
   P(22, 4) = 1296*245+25;
   P(22, 5) = 1296*25+27;
   P(22, 6) = 1296*27+24;
   P(22, 7) = 1296*24+19;
   P(23, 0) = 1296*20+23;
   P(23, 1) = 1296*23+28;
   P(23, 2) = 1296*28+60;
   P(23, 3) = 1296*60+55;
   P(23, 4) = 1296*55+57;
   P(23, 5) = 1296*57+54;
   P(23, 6) = 1296*54+22;
   P(23, 7) = 1296*22+20;
   P(24, 0) = 1296*23+1099;
   P(24, 1) = 1296*1099+1104;
   P(24, 2) = 1296*1104+1107;
   P(24, 3) = 1296*1107+1105;
   P(24, 4) = 1296*1105+29;
   P(24, 5) = 1296*29+26;
   P(24, 6) = 1296*26+28;
   P(24, 7) = 1296*28+23;
   P(25, 0) = 1296*24+27;
   P(25, 1) = 1296*27+25;
   P(25, 2) = 1296*25+30;
   P(25, 3) = 1296*30+214;
   P(25, 4) = 1296*214+209;
   P(25, 5) = 1296*209+206;
   P(25, 6) = 1296*206+208;
   P(25, 7) = 1296*208+24;
   P(26, 0) = 1296*25+27;
   P(26, 1) = 1296*27+26;
   P(26, 2) = 1296*26+29;
   P(26, 3) = 1296*29+34;
   P(26, 4) = 1296*34+32;
   P(26, 5) = 1296*32+33;
   P(26, 6) = 1296*33+30;
   P(26, 7) = 1296*30+25;
   P(27, 0) = 1296*25+245;
   P(27, 1) = 1296*245+250;
   P(27, 2) = 1296*250+248;
   P(27, 3) = 1296*248+251;
   P(27, 4) = 1296*251+31;
   P(27, 5) = 1296*31+33;
   P(27, 6) = 1296*33+30;
   P(27, 7) = 1296*30+25;
   P(28, 0) = 1296*26+29;
   P(28, 1) = 1296*29+34;
   P(28, 2) = 1296*34+66;
   P(28, 3) = 1296*66+61;
   P(28, 4) = 1296*61+63;
   P(28, 5) = 1296*63+60;
   P(28, 6) = 1296*60+28;
   P(28, 7) = 1296*28+26;
   P(29, 0) = 1296*29+1105;
   P(29, 1) = 1296*1105+1110;
   P(29, 2) = 1296*1110+1113;
   P(29, 3) = 1296*1113+1111;
   P(29, 4) = 1296*1111+35;
   P(29, 5) = 1296*35+32;
   P(29, 6) = 1296*32+34;
   P(29, 7) = 1296*34+29;
   P(30, 0) = 1296*36+39;
   P(30, 1) = 1296*39+37;
   P(30, 2) = 1296*37+257;
   P(30, 3) = 1296*257+254;
   P(30, 4) = 1296*254+256;
   P(30, 5) = 1296*256+287;
   P(30, 6) = 1296*287+67;
   P(30, 7) = 1296*67+36;
   P(31, 0) = 1296*36+39;
   P(31, 1) = 1296*39+38;
   P(31, 2) = 1296*38+40;
   P(31, 3) = 1296*40+71;
   P(31, 4) = 1296*71+68;
   P(31, 5) = 1296*68+69;
   P(31, 6) = 1296*69+67;
   P(31, 7) = 1296*67+36;
   P(32, 0) = 1296*37+39;
   P(32, 1) = 1296*39+38;
   P(32, 2) = 1296*38+41;
   P(32, 3) = 1296*41+46;
   P(32, 4) = 1296*46+44;
   P(32, 5) = 1296*44+45;
   P(32, 6) = 1296*45+42;
   P(32, 7) = 1296*42+37;
   P(33, 0) = 1296*37+257;
   P(33, 1) = 1296*257+262;
   P(33, 2) = 1296*262+260;
   P(33, 3) = 1296*260+263;
   P(33, 4) = 1296*263+43;
   P(33, 5) = 1296*43+45;
   P(33, 6) = 1296*45+42;
   P(33, 7) = 1296*42+37;
   P(34, 0) = 1296*38+41;
   P(34, 1) = 1296*41+1117;
   P(34, 2) = 1296*1117+1119;
   P(34, 3) = 1296*1119+1116;
   P(34, 4) = 1296*1116+1147;
   P(34, 5) = 1296*1147+71;
   P(34, 6) = 1296*71+40;
   P(34, 7) = 1296*40+38;
   P(35, 0) = 1296*38+41;
   P(35, 1) = 1296*41+46;
   P(35, 2) = 1296*46+78;
   P(35, 3) = 1296*78+73;
   P(35, 4) = 1296*73+75;
   P(35, 5) = 1296*75+72;
   P(35, 6) = 1296*72+40;
   P(35, 7) = 1296*40+38;
   P(36, 0) = 1296*40+72;
   P(36, 1) = 1296*72+103;
   P(36, 2) = 1296*103+105;
   P(36, 3) = 1296*105+102;
   P(36, 4) = 1296*102+70;
   P(36, 5) = 1296*70+68;
   P(36, 6) = 1296*68+71;
   P(36, 7) = 1296*71+40;
   P(37, 0) = 1296*41+1117;
   P(37, 1) = 1296*1117+1122;
   P(37, 2) = 1296*1122+1125;
   P(37, 3) = 1296*1125+1123;
   P(37, 4) = 1296*1123+47;
   P(37, 5) = 1296*47+44;
   P(37, 6) = 1296*44+46;
   P(37, 7) = 1296*46+41;
   P(38, 0) = 1296*43+45;
   P(38, 1) = 1296*45+44;
   P(38, 2) = 1296*44+47;
   P(38, 3) = 1296*47+52;
   P(38, 4) = 1296*52+50;
   P(38, 5) = 1296*50+51;
   P(38, 6) = 1296*51+48;
   P(38, 7) = 1296*48+43;
   P(39, 0) = 1296*43+263;
   P(39, 1) = 1296*263+268;
   P(39, 2) = 1296*268+266;
   P(39, 3) = 1296*266+269;
   P(39, 4) = 1296*269+49;
   P(39, 5) = 1296*49+51;
   P(39, 6) = 1296*51+48;
   P(39, 7) = 1296*48+43;
   P(40, 0) = 1296*44+47;
   P(40, 1) = 1296*47+52;
   P(40, 2) = 1296*52+84;
   P(40, 3) = 1296*84+79;
   P(40, 4) = 1296*79+81;
   P(40, 5) = 1296*81+78;
   P(40, 6) = 1296*78+46;
   P(40, 7) = 1296*46+44;
   P(41, 0) = 1296*47+1123;
   P(41, 1) = 1296*1123+1128;
   P(41, 2) = 1296*1128+1131;
   P(41, 3) = 1296*1131+1129;
   P(41, 4) = 1296*1129+53;
   P(41, 5) = 1296*53+50;
   P(41, 6) = 1296*50+52;
   P(41, 7) = 1296*52+47;
   P(42, 0) = 1296*49+51;
   P(42, 1) = 1296*51+50;
   P(42, 2) = 1296*50+53;
   P(42, 3) = 1296*53+58;
   P(42, 4) = 1296*58+56;
   P(42, 5) = 1296*56+57;
   P(42, 6) = 1296*57+54;
   P(42, 7) = 1296*54+49;
   P(43, 0) = 1296*49+269;
   P(43, 1) = 1296*269+274;
   P(43, 2) = 1296*274+272;
   P(43, 3) = 1296*272+275;
   P(43, 4) = 1296*275+55;
   P(43, 5) = 1296*55+57;
   P(43, 6) = 1296*57+54;
   P(43, 7) = 1296*54+49;
   P(44, 0) = 1296*50+53;
   P(44, 1) = 1296*53+58;
   P(44, 2) = 1296*58+90;
   P(44, 3) = 1296*90+85;
   P(44, 4) = 1296*85+87;
   P(44, 5) = 1296*87+84;
   P(44, 6) = 1296*84+52;
   P(44, 7) = 1296*52+50;
   P(45, 0) = 1296*53+1129;
   P(45, 1) = 1296*1129+1134;
   P(45, 2) = 1296*1134+1137;
   P(45, 3) = 1296*1137+1135;
   P(45, 4) = 1296*1135+59;
   P(45, 5) = 1296*59+56;
   P(45, 6) = 1296*56+58;
   P(45, 7) = 1296*58+53;
   P(46, 0) = 1296*55+57;
   P(46, 1) = 1296*57+56;
   P(46, 2) = 1296*56+59;
   P(46, 3) = 1296*59+64;
   P(46, 4) = 1296*64+62;
   P(46, 5) = 1296*62+63;
   P(46, 6) = 1296*63+60;
   P(46, 7) = 1296*60+55;
   P(47, 0) = 1296*55+275;
   P(47, 1) = 1296*275+280;
   P(47, 2) = 1296*280+278;
   P(47, 3) = 1296*278+281;
   P(47, 4) = 1296*281+61;
   P(47, 5) = 1296*61+63;
   P(47, 6) = 1296*63+60;
   P(47, 7) = 1296*60+55;
   P(48, 0) = 1296*56+59;
   P(48, 1) = 1296*59+64;
   P(48, 2) = 1296*64+96;
   P(48, 3) = 1296*96+91;
   P(48, 4) = 1296*91+93;
   P(48, 5) = 1296*93+90;
   P(48, 6) = 1296*90+58;
   P(48, 7) = 1296*58+56;
   P(49, 0) = 1296*59+1135;
   P(49, 1) = 1296*1135+1140;
   P(49, 2) = 1296*1140+1143;
   P(49, 3) = 1296*1143+1141;
   P(49, 4) = 1296*1141+65;
   P(49, 5) = 1296*65+62;
   P(49, 6) = 1296*62+64;
   P(49, 7) = 1296*64+59;
   P(50, 0) = 1296*61+63;
   P(50, 1) = 1296*63+62;
   P(50, 2) = 1296*62+65;
   P(50, 3) = 1296*65+70;
   P(50, 4) = 1296*70+68;
   P(50, 5) = 1296*68+69;
   P(50, 6) = 1296*69+66;
   P(50, 7) = 1296*66+61;
   P(51, 0) = 1296*61+281;
   P(51, 1) = 1296*281+286;
   P(51, 2) = 1296*286+284;
   P(51, 3) = 1296*284+287;
   P(51, 4) = 1296*287+67;
   P(51, 5) = 1296*67+69;
   P(51, 6) = 1296*69+66;
   P(51, 7) = 1296*66+61;
   P(52, 0) = 1296*62+65;
   P(52, 1) = 1296*65+70;
   P(52, 2) = 1296*70+102;
   P(52, 3) = 1296*102+97;
   P(52, 4) = 1296*97+99;
   P(52, 5) = 1296*99+96;
   P(52, 6) = 1296*96+64;
   P(52, 7) = 1296*64+62;
   P(53, 0) = 1296*65+1141;
   P(53, 1) = 1296*1141+1146;
   P(53, 2) = 1296*1146+1149;
   P(53, 3) = 1296*1149+1147;
   P(53, 4) = 1296*1147+71;
   P(53, 5) = 1296*71+68;
   P(53, 6) = 1296*68+70;
   P(53, 7) = 1296*70+65;
   P(54, 0) = 1296*72+75;
   P(54, 1) = 1296*75+73;
   P(54, 2) = 1296*73+293;
   P(54, 3) = 1296*293+290;
   P(54, 4) = 1296*290+292;
   P(54, 5) = 1296*292+323;
   P(54, 6) = 1296*323+103;
   P(54, 7) = 1296*103+72;
   P(55, 0) = 1296*72+75;
   P(55, 1) = 1296*75+74;
   P(55, 2) = 1296*74+76;
   P(55, 3) = 1296*76+107;
   P(55, 4) = 1296*107+104;
   P(55, 5) = 1296*104+105;
   P(55, 6) = 1296*105+103;
   P(55, 7) = 1296*103+72;
   P(56, 0) = 1296*73+75;
   P(56, 1) = 1296*75+74;
   P(56, 2) = 1296*74+77;
   P(56, 3) = 1296*77+82;
   P(56, 4) = 1296*82+80;
   P(56, 5) = 1296*80+81;
   P(56, 6) = 1296*81+78;
   P(56, 7) = 1296*78+73;
   P(57, 0) = 1296*73+293;
   P(57, 1) = 1296*293+298;
   P(57, 2) = 1296*298+296;
   P(57, 3) = 1296*296+299;
   P(57, 4) = 1296*299+79;
   P(57, 5) = 1296*79+81;
   P(57, 6) = 1296*81+78;
   P(57, 7) = 1296*78+73;
   P(58, 0) = 1296*74+77;
   P(58, 1) = 1296*77+1153;
   P(58, 2) = 1296*1153+1155;
   P(58, 3) = 1296*1155+1152;
   P(58, 4) = 1296*1152+1183;
   P(58, 5) = 1296*1183+107;
   P(58, 6) = 1296*107+76;
   P(58, 7) = 1296*76+74;
   P(59, 0) = 1296*74+77;
   P(59, 1) = 1296*77+82;
   P(59, 2) = 1296*82+114;
   P(59, 3) = 1296*114+109;
   P(59, 4) = 1296*109+111;
   P(59, 5) = 1296*111+108;
   P(59, 6) = 1296*108+76;
   P(59, 7) = 1296*76+74;
   P(60, 0) = 1296*76+108;
   P(60, 1) = 1296*108+139;
   P(60, 2) = 1296*139+141;
   P(60, 3) = 1296*141+138;
   P(60, 4) = 1296*138+106;
   P(60, 5) = 1296*106+104;
   P(60, 6) = 1296*104+107;
   P(60, 7) = 1296*107+76;
   P(61, 0) = 1296*77+1153;
   P(61, 1) = 1296*1153+1158;
   P(61, 2) = 1296*1158+1161;
   P(61, 3) = 1296*1161+1159;
   P(61, 4) = 1296*1159+83;
   P(61, 5) = 1296*83+80;
   P(61, 6) = 1296*80+82;
   P(61, 7) = 1296*82+77;
   P(62, 0) = 1296*79+81;
   P(62, 1) = 1296*81+80;
   P(62, 2) = 1296*80+83;
   P(62, 3) = 1296*83+88;
   P(62, 4) = 1296*88+86;
   P(62, 5) = 1296*86+87;
   P(62, 6) = 1296*87+84;
   P(62, 7) = 1296*84+79;
   P(63, 0) = 1296*79+299;
   P(63, 1) = 1296*299+304;
   P(63, 2) = 1296*304+302;
   P(63, 3) = 1296*302+305;
   P(63, 4) = 1296*305+85;
   P(63, 5) = 1296*85+87;
   P(63, 6) = 1296*87+84;
   P(63, 7) = 1296*84+79;
   P(64, 0) = 1296*80+83;
   P(64, 1) = 1296*83+88;
   P(64, 2) = 1296*88+120;
   P(64, 3) = 1296*120+115;
   P(64, 4) = 1296*115+117;
   P(64, 5) = 1296*117+114;
   P(64, 6) = 1296*114+82;
   P(64, 7) = 1296*82+80;
   P(65, 0) = 1296*83+1159;
   P(65, 1) = 1296*1159+1164;
   P(65, 2) = 1296*1164+1167;
   P(65, 3) = 1296*1167+1165;
   P(65, 4) = 1296*1165+89;
   P(65, 5) = 1296*89+86;
   P(65, 6) = 1296*86+88;
   P(65, 7) = 1296*88+83;
   P(66, 0) = 1296*85+87;
   P(66, 1) = 1296*87+86;
   P(66, 2) = 1296*86+89;
   P(66, 3) = 1296*89+94;
   P(66, 4) = 1296*94+92;
   P(66, 5) = 1296*92+93;
   P(66, 6) = 1296*93+90;
   P(66, 7) = 1296*90+85;
   P(67, 0) = 1296*85+305;
   P(67, 1) = 1296*305+310;
   P(67, 2) = 1296*310+308;
   P(67, 3) = 1296*308+311;
   P(67, 4) = 1296*311+91;
   P(67, 5) = 1296*91+93;
   P(67, 6) = 1296*93+90;
   P(67, 7) = 1296*90+85;
   P(68, 0) = 1296*86+89;
   P(68, 1) = 1296*89+94;
   P(68, 2) = 1296*94+126;
   P(68, 3) = 1296*126+121;
   P(68, 4) = 1296*121+123;
   P(68, 5) = 1296*123+120;
   P(68, 6) = 1296*120+88;
   P(68, 7) = 1296*88+86;
   P(69, 0) = 1296*89+1165;
   P(69, 1) = 1296*1165+1170;
   P(69, 2) = 1296*1170+1173;
   P(69, 3) = 1296*1173+1171;
   P(69, 4) = 1296*1171+95;
   P(69, 5) = 1296*95+92;
   P(69, 6) = 1296*92+94;
   P(69, 7) = 1296*94+89;
   P(70, 0) = 1296*91+93;
   P(70, 1) = 1296*93+92;
   P(70, 2) = 1296*92+95;
   P(70, 3) = 1296*95+100;
   P(70, 4) = 1296*100+98;
   P(70, 5) = 1296*98+99;
   P(70, 6) = 1296*99+96;
   P(70, 7) = 1296*96+91;
   P(71, 0) = 1296*91+311;
   P(71, 1) = 1296*311+316;
   P(71, 2) = 1296*316+314;
   P(71, 3) = 1296*314+317;
   P(71, 4) = 1296*317+97;
   P(71, 5) = 1296*97+99;
   P(71, 6) = 1296*99+96;
   P(71, 7) = 1296*96+91;
   P(72, 0) = 1296*92+95;
   P(72, 1) = 1296*95+100;
   P(72, 2) = 1296*100+132;
   P(72, 3) = 1296*132+127;
   P(72, 4) = 1296*127+129;
   P(72, 5) = 1296*129+126;
   P(72, 6) = 1296*126+94;
   P(72, 7) = 1296*94+92;
   P(73, 0) = 1296*95+1171;
   P(73, 1) = 1296*1171+1176;
   P(73, 2) = 1296*1176+1179;
   P(73, 3) = 1296*1179+1177;
   P(73, 4) = 1296*1177+101;
   P(73, 5) = 1296*101+98;
   P(73, 6) = 1296*98+100;
   P(73, 7) = 1296*100+95;
   P(74, 0) = 1296*97+99;
   P(74, 1) = 1296*99+98;
   P(74, 2) = 1296*98+101;
   P(74, 3) = 1296*101+106;
   P(74, 4) = 1296*106+104;
   P(74, 5) = 1296*104+105;
   P(74, 6) = 1296*105+102;
   P(74, 7) = 1296*102+97;
   P(75, 0) = 1296*97+317;
   P(75, 1) = 1296*317+322;
   P(75, 2) = 1296*322+320;
   P(75, 3) = 1296*320+323;
   P(75, 4) = 1296*323+103;
   P(75, 5) = 1296*103+105;
   P(75, 6) = 1296*105+102;
   P(75, 7) = 1296*102+97;
   P(76, 0) = 1296*98+101;
   P(76, 1) = 1296*101+106;
   P(76, 2) = 1296*106+138;
   P(76, 3) = 1296*138+133;
   P(76, 4) = 1296*133+135;
   P(76, 5) = 1296*135+132;
   P(76, 6) = 1296*132+100;
   P(76, 7) = 1296*100+98;
   P(77, 0) = 1296*101+1177;
   P(77, 1) = 1296*1177+1182;
   P(77, 2) = 1296*1182+1185;
   P(77, 3) = 1296*1185+1183;
   P(77, 4) = 1296*1183+107;
   P(77, 5) = 1296*107+104;
   P(77, 6) = 1296*104+106;
   P(77, 7) = 1296*106+101;
   P(78, 0) = 1296*108+111;
   P(78, 1) = 1296*111+109;
   P(78, 2) = 1296*109+329;
   P(78, 3) = 1296*329+326;
   P(78, 4) = 1296*326+328;
   P(78, 5) = 1296*328+359;
   P(78, 6) = 1296*359+139;
   P(78, 7) = 1296*139+108;
   P(79, 0) = 1296*108+111;
   P(79, 1) = 1296*111+110;
   P(79, 2) = 1296*110+112;
   P(79, 3) = 1296*112+143;
   P(79, 4) = 1296*143+140;
   P(79, 5) = 1296*140+141;
   P(79, 6) = 1296*141+139;
   P(79, 7) = 1296*139+108;
   P(80, 0) = 1296*109+111;
   P(80, 1) = 1296*111+110;
   P(80, 2) = 1296*110+113;
   P(80, 3) = 1296*113+118;
   P(80, 4) = 1296*118+116;
   P(80, 5) = 1296*116+117;
   P(80, 6) = 1296*117+114;
   P(80, 7) = 1296*114+109;
   P(81, 0) = 1296*109+329;
   P(81, 1) = 1296*329+334;
   P(81, 2) = 1296*334+332;
   P(81, 3) = 1296*332+335;
   P(81, 4) = 1296*335+115;
   P(81, 5) = 1296*115+117;
   P(81, 6) = 1296*117+114;
   P(81, 7) = 1296*114+109;
   P(82, 0) = 1296*110+113;
   P(82, 1) = 1296*113+1189;
   P(82, 2) = 1296*1189+1191;
   P(82, 3) = 1296*1191+1188;
   P(82, 4) = 1296*1188+1219;
   P(82, 5) = 1296*1219+143;
   P(82, 6) = 1296*143+112;
   P(82, 7) = 1296*112+110;
   P(83, 0) = 1296*110+113;
   P(83, 1) = 1296*113+118;
   P(83, 2) = 1296*118+150;
   P(83, 3) = 1296*150+145;
   P(83, 4) = 1296*145+147;
   P(83, 5) = 1296*147+144;
   P(83, 6) = 1296*144+112;
   P(83, 7) = 1296*112+110;
   P(84, 0) = 1296*112+144;
   P(84, 1) = 1296*144+175;
   P(84, 2) = 1296*175+177;
   P(84, 3) = 1296*177+174;
   P(84, 4) = 1296*174+142;
   P(84, 5) = 1296*142+140;
   P(84, 6) = 1296*140+143;
   P(84, 7) = 1296*143+112;
   P(85, 0) = 1296*113+1189;
   P(85, 1) = 1296*1189+1194;
   P(85, 2) = 1296*1194+1197;
   P(85, 3) = 1296*1197+1195;
   P(85, 4) = 1296*1195+119;
   P(85, 5) = 1296*119+116;
   P(85, 6) = 1296*116+118;
   P(85, 7) = 1296*118+113;
   P(86, 0) = 1296*115+117;
   P(86, 1) = 1296*117+116;
   P(86, 2) = 1296*116+119;
   P(86, 3) = 1296*119+124;
   P(86, 4) = 1296*124+122;
   P(86, 5) = 1296*122+123;
   P(86, 6) = 1296*123+120;
   P(86, 7) = 1296*120+115;
   P(87, 0) = 1296*115+335;
   P(87, 1) = 1296*335+340;
   P(87, 2) = 1296*340+338;
   P(87, 3) = 1296*338+341;
   P(87, 4) = 1296*341+121;
   P(87, 5) = 1296*121+123;
   P(87, 6) = 1296*123+120;
   P(87, 7) = 1296*120+115;
   P(88, 0) = 1296*116+119;
   P(88, 1) = 1296*119+124;
   P(88, 2) = 1296*124+156;
   P(88, 3) = 1296*156+151;
   P(88, 4) = 1296*151+153;
   P(88, 5) = 1296*153+150;
   P(88, 6) = 1296*150+118;
   P(88, 7) = 1296*118+116;
   P(89, 0) = 1296*119+1195;
   P(89, 1) = 1296*1195+1200;
   P(89, 2) = 1296*1200+1203;
   P(89, 3) = 1296*1203+1201;
   P(89, 4) = 1296*1201+125;
   P(89, 5) = 1296*125+122;
   P(89, 6) = 1296*122+124;
   P(89, 7) = 1296*124+119;
   P(90, 0) = 1296*121+123;
   P(90, 1) = 1296*123+122;
   P(90, 2) = 1296*122+125;
   P(90, 3) = 1296*125+130;
   P(90, 4) = 1296*130+128;
   P(90, 5) = 1296*128+129;
   P(90, 6) = 1296*129+126;
   P(90, 7) = 1296*126+121;
   P(91, 0) = 1296*121+341;
   P(91, 1) = 1296*341+346;
   P(91, 2) = 1296*346+344;
   P(91, 3) = 1296*344+347;
   P(91, 4) = 1296*347+127;
   P(91, 5) = 1296*127+129;
   P(91, 6) = 1296*129+126;
   P(91, 7) = 1296*126+121;
   P(92, 0) = 1296*122+125;
   P(92, 1) = 1296*125+130;
   P(92, 2) = 1296*130+162;
   P(92, 3) = 1296*162+157;
   P(92, 4) = 1296*157+159;
   P(92, 5) = 1296*159+156;
   P(92, 6) = 1296*156+124;
   P(92, 7) = 1296*124+122;
   P(93, 0) = 1296*125+1201;
   P(93, 1) = 1296*1201+1206;
   P(93, 2) = 1296*1206+1209;
   P(93, 3) = 1296*1209+1207;
   P(93, 4) = 1296*1207+131;
   P(93, 5) = 1296*131+128;
   P(93, 6) = 1296*128+130;
   P(93, 7) = 1296*130+125;
   P(94, 0) = 1296*127+129;
   P(94, 1) = 1296*129+128;
   P(94, 2) = 1296*128+131;
   P(94, 3) = 1296*131+136;
   P(94, 4) = 1296*136+134;
   P(94, 5) = 1296*134+135;
   P(94, 6) = 1296*135+132;
   P(94, 7) = 1296*132+127;
   P(95, 0) = 1296*127+347;
   P(95, 1) = 1296*347+352;
   P(95, 2) = 1296*352+350;
   P(95, 3) = 1296*350+353;
   P(95, 4) = 1296*353+133;
   P(95, 5) = 1296*133+135;
   P(95, 6) = 1296*135+132;
   P(95, 7) = 1296*132+127;
   P(96, 0) = 1296*128+131;
   P(96, 1) = 1296*131+136;
   P(96, 2) = 1296*136+168;
   P(96, 3) = 1296*168+163;
   P(96, 4) = 1296*163+165;
   P(96, 5) = 1296*165+162;
   P(96, 6) = 1296*162+130;
   P(96, 7) = 1296*130+128;
   P(97, 0) = 1296*131+1207;
   P(97, 1) = 1296*1207+1212;
   P(97, 2) = 1296*1212+1215;
   P(97, 3) = 1296*1215+1213;
   P(97, 4) = 1296*1213+137;
   P(97, 5) = 1296*137+134;
   P(97, 6) = 1296*134+136;
   P(97, 7) = 1296*136+131;
   P(98, 0) = 1296*133+135;
   P(98, 1) = 1296*135+134;
   P(98, 2) = 1296*134+137;
   P(98, 3) = 1296*137+142;
   P(98, 4) = 1296*142+140;
   P(98, 5) = 1296*140+141;
   P(98, 6) = 1296*141+138;
   P(98, 7) = 1296*138+133;
   P(99, 0) = 1296*133+353;
   P(99, 1) = 1296*353+358;
   P(99, 2) = 1296*358+356;
   P(99, 3) = 1296*356+359;
   P(99, 4) = 1296*359+139;
   P(99, 5) = 1296*139+141;
   P(99, 6) = 1296*141+138;
   P(99, 7) = 1296*138+133;
   P(100, 0) = 1296*134+137;
   P(100, 1) = 1296*137+142;
   P(100, 2) = 1296*142+174;
   P(100, 3) = 1296*174+169;
   P(100, 4) = 1296*169+171;
   P(100, 5) = 1296*171+168;
   P(100, 6) = 1296*168+136;
   P(100, 7) = 1296*136+134;
   P(101, 0) = 1296*137+1213;
   P(101, 1) = 1296*1213+1218;
   P(101, 2) = 1296*1218+1221;
   P(101, 3) = 1296*1221+1219;
   P(101, 4) = 1296*1219+143;
   P(101, 5) = 1296*143+140;
   P(101, 6) = 1296*140+142;
   P(101, 7) = 1296*142+137;
   P(102, 0) = 1296*144+147;
   P(102, 1) = 1296*147+145;
   P(102, 2) = 1296*145+365;
   P(102, 3) = 1296*365+362;
   P(102, 4) = 1296*362+364;
   P(102, 5) = 1296*364+395;
   P(102, 6) = 1296*395+175;
   P(102, 7) = 1296*175+144;
   P(103, 0) = 1296*144+147;
   P(103, 1) = 1296*147+146;
   P(103, 2) = 1296*146+148;
   P(103, 3) = 1296*148+179;
   P(103, 4) = 1296*179+176;
   P(103, 5) = 1296*176+177;
   P(103, 6) = 1296*177+175;
   P(103, 7) = 1296*175+144;
   P(104, 0) = 1296*145+147;
   P(104, 1) = 1296*147+146;
   P(104, 2) = 1296*146+149;
   P(104, 3) = 1296*149+154;
   P(104, 4) = 1296*154+152;
   P(104, 5) = 1296*152+153;
   P(104, 6) = 1296*153+150;
   P(104, 7) = 1296*150+145;
   P(105, 0) = 1296*145+365;
   P(105, 1) = 1296*365+370;
   P(105, 2) = 1296*370+368;
   P(105, 3) = 1296*368+371;
   P(105, 4) = 1296*371+151;
   P(105, 5) = 1296*151+153;
   P(105, 6) = 1296*153+150;
   P(105, 7) = 1296*150+145;
   P(106, 0) = 1296*146+149;
   P(106, 1) = 1296*149+1225;
   P(106, 2) = 1296*1225+1227;
   P(106, 3) = 1296*1227+1224;
   P(106, 4) = 1296*1224+1255;
   P(106, 5) = 1296*1255+179;
   P(106, 6) = 1296*179+148;
   P(106, 7) = 1296*148+146;
   P(107, 0) = 1296*146+149;
   P(107, 1) = 1296*149+154;
   P(107, 2) = 1296*154+186;
   P(107, 3) = 1296*186+181;
   P(107, 4) = 1296*181+183;
   P(107, 5) = 1296*183+180;
   P(107, 6) = 1296*180+148;
   P(107, 7) = 1296*148+146;
   P(108, 0) = 1296*148+180;
   P(108, 1) = 1296*180+211;
   P(108, 2) = 1296*211+213;
   P(108, 3) = 1296*213+210;
   P(108, 4) = 1296*210+178;
   P(108, 5) = 1296*178+176;
   P(108, 6) = 1296*176+179;
   P(108, 7) = 1296*179+148;
   P(109, 0) = 1296*149+1225;
   P(109, 1) = 1296*1225+1230;
   P(109, 2) = 1296*1230+1233;
   P(109, 3) = 1296*1233+1231;
   P(109, 4) = 1296*1231+155;
   P(109, 5) = 1296*155+152;
   P(109, 6) = 1296*152+154;
   P(109, 7) = 1296*154+149;
   P(110, 0) = 1296*151+153;
   P(110, 1) = 1296*153+152;
   P(110, 2) = 1296*152+155;
   P(110, 3) = 1296*155+160;
   P(110, 4) = 1296*160+158;
   P(110, 5) = 1296*158+159;
   P(110, 6) = 1296*159+156;
   P(110, 7) = 1296*156+151;
   P(111, 0) = 1296*151+371;
   P(111, 1) = 1296*371+376;
   P(111, 2) = 1296*376+374;
   P(111, 3) = 1296*374+377;
   P(111, 4) = 1296*377+157;
   P(111, 5) = 1296*157+159;
   P(111, 6) = 1296*159+156;
   P(111, 7) = 1296*156+151;
   P(112, 0) = 1296*152+155;
   P(112, 1) = 1296*155+160;
   P(112, 2) = 1296*160+192;
   P(112, 3) = 1296*192+187;
   P(112, 4) = 1296*187+189;
   P(112, 5) = 1296*189+186;
   P(112, 6) = 1296*186+154;
   P(112, 7) = 1296*154+152;
   P(113, 0) = 1296*155+1231;
   P(113, 1) = 1296*1231+1236;
   P(113, 2) = 1296*1236+1239;
   P(113, 3) = 1296*1239+1237;
   P(113, 4) = 1296*1237+161;
   P(113, 5) = 1296*161+158;
   P(113, 6) = 1296*158+160;
   P(113, 7) = 1296*160+155;
   P(114, 0) = 1296*157+159;
   P(114, 1) = 1296*159+158;
   P(114, 2) = 1296*158+161;
   P(114, 3) = 1296*161+166;
   P(114, 4) = 1296*166+164;
   P(114, 5) = 1296*164+165;
   P(114, 6) = 1296*165+162;
   P(114, 7) = 1296*162+157;
   P(115, 0) = 1296*157+377;
   P(115, 1) = 1296*377+382;
   P(115, 2) = 1296*382+380;
   P(115, 3) = 1296*380+383;
   P(115, 4) = 1296*383+163;
   P(115, 5) = 1296*163+165;
   P(115, 6) = 1296*165+162;
   P(115, 7) = 1296*162+157;
   P(116, 0) = 1296*158+161;
   P(116, 1) = 1296*161+166;
   P(116, 2) = 1296*166+198;
   P(116, 3) = 1296*198+193;
   P(116, 4) = 1296*193+195;
   P(116, 5) = 1296*195+192;
   P(116, 6) = 1296*192+160;
   P(116, 7) = 1296*160+158;
   P(117, 0) = 1296*161+1237;
   P(117, 1) = 1296*1237+1242;
   P(117, 2) = 1296*1242+1245;
   P(117, 3) = 1296*1245+1243;
   P(117, 4) = 1296*1243+167;
   P(117, 5) = 1296*167+164;
   P(117, 6) = 1296*164+166;
   P(117, 7) = 1296*166+161;
   P(118, 0) = 1296*163+165;
   P(118, 1) = 1296*165+164;
   P(118, 2) = 1296*164+167;
   P(118, 3) = 1296*167+172;
   P(118, 4) = 1296*172+170;
   P(118, 5) = 1296*170+171;
   P(118, 6) = 1296*171+168;
   P(118, 7) = 1296*168+163;
   P(119, 0) = 1296*163+383;
   P(119, 1) = 1296*383+388;
   P(119, 2) = 1296*388+386;
   P(119, 3) = 1296*386+389;
   P(119, 4) = 1296*389+169;
   P(119, 5) = 1296*169+171;
   P(119, 6) = 1296*171+168;
   P(119, 7) = 1296*168+163;
   P(120, 0) = 1296*164+167;
   P(120, 1) = 1296*167+172;
   P(120, 2) = 1296*172+204;
   P(120, 3) = 1296*204+199;
   P(120, 4) = 1296*199+201;
   P(120, 5) = 1296*201+198;
   P(120, 6) = 1296*198+166;
   P(120, 7) = 1296*166+164;
   P(121, 0) = 1296*167+1243;
   P(121, 1) = 1296*1243+1248;
   P(121, 2) = 1296*1248+1251;
   P(121, 3) = 1296*1251+1249;
   P(121, 4) = 1296*1249+173;
   P(121, 5) = 1296*173+170;
   P(121, 6) = 1296*170+172;
   P(121, 7) = 1296*172+167;
   P(122, 0) = 1296*169+171;
   P(122, 1) = 1296*171+170;
   P(122, 2) = 1296*170+173;
   P(122, 3) = 1296*173+178;
   P(122, 4) = 1296*178+176;
   P(122, 5) = 1296*176+177;
   P(122, 6) = 1296*177+174;
   P(122, 7) = 1296*174+169;
   P(123, 0) = 1296*169+389;
   P(123, 1) = 1296*389+394;
   P(123, 2) = 1296*394+392;
   P(123, 3) = 1296*392+395;
   P(123, 4) = 1296*395+175;
   P(123, 5) = 1296*175+177;
   P(123, 6) = 1296*177+174;
   P(123, 7) = 1296*174+169;
   P(124, 0) = 1296*170+173;
   P(124, 1) = 1296*173+178;
   P(124, 2) = 1296*178+210;
   P(124, 3) = 1296*210+205;
   P(124, 4) = 1296*205+207;
   P(124, 5) = 1296*207+204;
   P(124, 6) = 1296*204+172;
   P(124, 7) = 1296*172+170;
   P(125, 0) = 1296*173+1249;
   P(125, 1) = 1296*1249+1254;
   P(125, 2) = 1296*1254+1257;
   P(125, 3) = 1296*1257+1255;
   P(125, 4) = 1296*1255+179;
   P(125, 5) = 1296*179+176;
   P(125, 6) = 1296*176+178;
   P(125, 7) = 1296*178+173;
   P(126, 0) = 1296*180+183;
   P(126, 1) = 1296*183+181;
   P(126, 2) = 1296*181+401;
   P(126, 3) = 1296*401+398;
   P(126, 4) = 1296*398+400;
   P(126, 5) = 1296*400+431;
   P(126, 6) = 1296*431+211;
   P(126, 7) = 1296*211+180;
   P(127, 0) = 1296*180+183;
   P(127, 1) = 1296*183+182;
   P(127, 2) = 1296*182+184;
   P(127, 3) = 1296*184+215;
   P(127, 4) = 1296*215+212;
   P(127, 5) = 1296*212+213;
   P(127, 6) = 1296*213+211;
   P(127, 7) = 1296*211+180;
   P(128, 0) = 1296*181+183;
   P(128, 1) = 1296*183+182;
   P(128, 2) = 1296*182+185;
   P(128, 3) = 1296*185+190;
   P(128, 4) = 1296*190+188;
   P(128, 5) = 1296*188+189;
   P(128, 6) = 1296*189+186;
   P(128, 7) = 1296*186+181;
   P(129, 0) = 1296*181+401;
   P(129, 1) = 1296*401+406;
   P(129, 2) = 1296*406+404;
   P(129, 3) = 1296*404+407;
   P(129, 4) = 1296*407+187;
   P(129, 5) = 1296*187+189;
   P(129, 6) = 1296*189+186;
   P(129, 7) = 1296*186+181;
   P(130, 0) = 1296*182+185;
   P(130, 1) = 1296*185+1261;
   P(130, 2) = 1296*1261+1263;
   P(130, 3) = 1296*1263+1260;
   P(130, 4) = 1296*1260+1291;
   P(130, 5) = 1296*1291+215;
   P(130, 6) = 1296*215+184;
   P(130, 7) = 1296*184+182;
   P(131, 0) = 1296*185+1261;
   P(131, 1) = 1296*1261+1266;
   P(131, 2) = 1296*1266+1269;
   P(131, 3) = 1296*1269+1267;
   P(131, 4) = 1296*1267+191;
   P(131, 5) = 1296*191+188;
   P(131, 6) = 1296*188+190;
   P(131, 7) = 1296*190+185;
   P(132, 0) = 1296*187+189;
   P(132, 1) = 1296*189+188;
   P(132, 2) = 1296*188+191;
   P(132, 3) = 1296*191+196;
   P(132, 4) = 1296*196+194;
   P(132, 5) = 1296*194+195;
   P(132, 6) = 1296*195+192;
   P(132, 7) = 1296*192+187;
   P(133, 0) = 1296*187+407;
   P(133, 1) = 1296*407+412;
   P(133, 2) = 1296*412+410;
   P(133, 3) = 1296*410+413;
   P(133, 4) = 1296*413+193;
   P(133, 5) = 1296*193+195;
   P(133, 6) = 1296*195+192;
   P(133, 7) = 1296*192+187;
   P(134, 0) = 1296*191+1267;
   P(134, 1) = 1296*1267+1272;
   P(134, 2) = 1296*1272+1275;
   P(134, 3) = 1296*1275+1273;
   P(134, 4) = 1296*1273+197;
   P(134, 5) = 1296*197+194;
   P(134, 6) = 1296*194+196;
   P(134, 7) = 1296*196+191;
   P(135, 0) = 1296*193+195;
   P(135, 1) = 1296*195+194;
   P(135, 2) = 1296*194+197;
   P(135, 3) = 1296*197+202;
   P(135, 4) = 1296*202+200;
   P(135, 5) = 1296*200+201;
   P(135, 6) = 1296*201+198;
   P(135, 7) = 1296*198+193;
   P(136, 0) = 1296*193+413;
   P(136, 1) = 1296*413+418;
   P(136, 2) = 1296*418+416;
   P(136, 3) = 1296*416+419;
   P(136, 4) = 1296*419+199;
   P(136, 5) = 1296*199+201;
   P(136, 6) = 1296*201+198;
   P(136, 7) = 1296*198+193;
   P(137, 0) = 1296*197+1273;
   P(137, 1) = 1296*1273+1278;
   P(137, 2) = 1296*1278+1281;
   P(137, 3) = 1296*1281+1279;
   P(137, 4) = 1296*1279+203;
   P(137, 5) = 1296*203+200;
   P(137, 6) = 1296*200+202;
   P(137, 7) = 1296*202+197;
   P(138, 0) = 1296*199+201;
   P(138, 1) = 1296*201+200;
   P(138, 2) = 1296*200+203;
   P(138, 3) = 1296*203+208;
   P(138, 4) = 1296*208+206;
   P(138, 5) = 1296*206+207;
   P(138, 6) = 1296*207+204;
   P(138, 7) = 1296*204+199;
   P(139, 0) = 1296*199+419;
   P(139, 1) = 1296*419+424;
   P(139, 2) = 1296*424+422;
   P(139, 3) = 1296*422+425;
   P(139, 4) = 1296*425+205;
   P(139, 5) = 1296*205+207;
   P(139, 6) = 1296*207+204;
   P(139, 7) = 1296*204+199;
   P(140, 0) = 1296*203+1279;
   P(140, 1) = 1296*1279+1284;
   P(140, 2) = 1296*1284+1287;
   P(140, 3) = 1296*1287+1285;
   P(140, 4) = 1296*1285+209;
   P(140, 5) = 1296*209+206;
   P(140, 6) = 1296*206+208;
   P(140, 7) = 1296*208+203;
   P(141, 0) = 1296*205+207;
   P(141, 1) = 1296*207+206;
   P(141, 2) = 1296*206+209;
   P(141, 3) = 1296*209+214;
   P(141, 4) = 1296*214+212;
   P(141, 5) = 1296*212+213;
   P(141, 6) = 1296*213+210;
   P(141, 7) = 1296*210+205;
   P(142, 0) = 1296*205+425;
   P(142, 1) = 1296*425+430;
   P(142, 2) = 1296*430+428;
   P(142, 3) = 1296*428+431;
   P(142, 4) = 1296*431+211;
   P(142, 5) = 1296*211+213;
   P(142, 6) = 1296*213+210;
   P(142, 7) = 1296*210+205;
   P(143, 0) = 1296*209+1285;
   P(143, 1) = 1296*1285+1290;
   P(143, 2) = 1296*1290+1293;
   P(143, 3) = 1296*1293+1291;
   P(143, 4) = 1296*1291+215;
   P(143, 5) = 1296*215+212;
   P(143, 6) = 1296*212+214;
   P(143, 7) = 1296*214+209;
   P(144, 0) = 1296*216+219;
   P(144, 1) = 1296*219+217;
   P(144, 2) = 1296*217+437;
   P(144, 3) = 1296*437+434;
   P(144, 4) = 1296*434+436;
   P(144, 5) = 1296*436+467;
   P(144, 6) = 1296*467+247;
   P(144, 7) = 1296*247+216;
   P(145, 0) = 1296*216+219;
   P(145, 1) = 1296*219+217;
   P(145, 2) = 1296*217+222;
   P(145, 3) = 1296*222+406;
   P(145, 4) = 1296*406+401;
   P(145, 5) = 1296*401+398;
   P(145, 6) = 1296*398+400;
   P(145, 7) = 1296*400+216;
   P(146, 0) = 1296*216+219;
   P(146, 1) = 1296*219+218;
   P(146, 2) = 1296*218+220;
   P(146, 3) = 1296*220+251;
   P(146, 4) = 1296*251+248;
   P(146, 5) = 1296*248+249;
   P(146, 6) = 1296*249+247;
   P(146, 7) = 1296*247+216;
   P(147, 0) = 1296*216+400;
   P(147, 1) = 1296*400+431;
   P(147, 2) = 1296*431+428;
   P(147, 3) = 1296*428+430;
   P(147, 4) = 1296*430+246;
   P(147, 5) = 1296*246+249;
   P(147, 6) = 1296*249+247;
   P(147, 7) = 1296*247+216;
   P(148, 0) = 1296*217+219;
   P(148, 1) = 1296*219+218;
   P(148, 2) = 1296*218+221;
   P(148, 3) = 1296*221+226;
   P(148, 4) = 1296*226+224;
   P(148, 5) = 1296*224+225;
   P(148, 6) = 1296*225+222;
   P(148, 7) = 1296*222+217;
   P(149, 0) = 1296*217+437;
   P(149, 1) = 1296*437+442;
   P(149, 2) = 1296*442+440;
   P(149, 3) = 1296*440+443;
   P(149, 4) = 1296*443+223;
   P(149, 5) = 1296*223+225;
   P(149, 6) = 1296*225+222;
   P(149, 7) = 1296*222+217;
   P(150, 0) = 1296*218+221;
   P(150, 1) = 1296*221+226;
   P(150, 2) = 1296*226+258;
   P(150, 3) = 1296*258+253;
   P(150, 4) = 1296*253+255;
   P(150, 5) = 1296*255+252;
   P(150, 6) = 1296*252+220;
   P(150, 7) = 1296*220+218;
   P(151, 0) = 1296*220+252;
   P(151, 1) = 1296*252+283;
   P(151, 2) = 1296*283+285;
   P(151, 3) = 1296*285+282;
   P(151, 4) = 1296*282+250;
   P(151, 5) = 1296*250+248;
   P(151, 6) = 1296*248+251;
   P(151, 7) = 1296*251+220;
   P(152, 0) = 1296*222+225;
   P(152, 1) = 1296*225+223;
   P(152, 2) = 1296*223+228;
   P(152, 3) = 1296*228+412;
   P(152, 4) = 1296*412+407;
   P(152, 5) = 1296*407+404;
   P(152, 6) = 1296*404+406;
   P(152, 7) = 1296*406+222;
   P(153, 0) = 1296*223+225;
   P(153, 1) = 1296*225+224;
   P(153, 2) = 1296*224+227;
   P(153, 3) = 1296*227+232;
   P(153, 4) = 1296*232+230;
   P(153, 5) = 1296*230+231;
   P(153, 6) = 1296*231+228;
   P(153, 7) = 1296*228+223;
   P(154, 0) = 1296*223+443;
   P(154, 1) = 1296*443+448;
   P(154, 2) = 1296*448+446;
   P(154, 3) = 1296*446+449;
   P(154, 4) = 1296*449+229;
   P(154, 5) = 1296*229+231;
   P(154, 6) = 1296*231+228;
   P(154, 7) = 1296*228+223;
   P(155, 0) = 1296*224+227;
   P(155, 1) = 1296*227+232;
   P(155, 2) = 1296*232+264;
   P(155, 3) = 1296*264+259;
   P(155, 4) = 1296*259+261;
   P(155, 5) = 1296*261+258;
   P(155, 6) = 1296*258+226;
   P(155, 7) = 1296*226+224;
   P(156, 0) = 1296*228+231;
   P(156, 1) = 1296*231+229;
   P(156, 2) = 1296*229+234;
   P(156, 3) = 1296*234+418;
   P(156, 4) = 1296*418+413;
   P(156, 5) = 1296*413+410;
   P(156, 6) = 1296*410+412;
   P(156, 7) = 1296*412+228;
   P(157, 0) = 1296*229+231;
   P(157, 1) = 1296*231+230;
   P(157, 2) = 1296*230+233;
   P(157, 3) = 1296*233+238;
   P(157, 4) = 1296*238+236;
   P(157, 5) = 1296*236+237;
   P(157, 6) = 1296*237+234;
   P(157, 7) = 1296*234+229;
   P(158, 0) = 1296*229+449;
   P(158, 1) = 1296*449+454;
   P(158, 2) = 1296*454+452;
   P(158, 3) = 1296*452+455;
   P(158, 4) = 1296*455+235;
   P(158, 5) = 1296*235+237;
   P(158, 6) = 1296*237+234;
   P(158, 7) = 1296*234+229;
   P(159, 0) = 1296*230+233;
   P(159, 1) = 1296*233+238;
   P(159, 2) = 1296*238+270;
   P(159, 3) = 1296*270+265;
   P(159, 4) = 1296*265+267;
   P(159, 5) = 1296*267+264;
   P(159, 6) = 1296*264+232;
   P(159, 7) = 1296*232+230;
   P(160, 0) = 1296*234+237;
   P(160, 1) = 1296*237+235;
   P(160, 2) = 1296*235+240;
   P(160, 3) = 1296*240+424;
   P(160, 4) = 1296*424+419;
   P(160, 5) = 1296*419+416;
   P(160, 6) = 1296*416+418;
   P(160, 7) = 1296*418+234;
   P(161, 0) = 1296*235+237;
   P(161, 1) = 1296*237+236;
   P(161, 2) = 1296*236+239;
   P(161, 3) = 1296*239+244;
   P(161, 4) = 1296*244+242;
   P(161, 5) = 1296*242+243;
   P(161, 6) = 1296*243+240;
   P(161, 7) = 1296*240+235;
   P(162, 0) = 1296*235+455;
   P(162, 1) = 1296*455+460;
   P(162, 2) = 1296*460+458;
   P(162, 3) = 1296*458+461;
   P(162, 4) = 1296*461+241;
   P(162, 5) = 1296*241+243;
   P(162, 6) = 1296*243+240;
   P(162, 7) = 1296*240+235;
   P(163, 0) = 1296*236+239;
   P(163, 1) = 1296*239+244;
   P(163, 2) = 1296*244+276;
   P(163, 3) = 1296*276+271;
   P(163, 4) = 1296*271+273;
   P(163, 5) = 1296*273+270;
   P(163, 6) = 1296*270+238;
   P(163, 7) = 1296*238+236;
   P(164, 0) = 1296*240+243;
   P(164, 1) = 1296*243+241;
   P(164, 2) = 1296*241+246;
   P(164, 3) = 1296*246+430;
   P(164, 4) = 1296*430+425;
   P(164, 5) = 1296*425+422;
   P(164, 6) = 1296*422+424;
   P(164, 7) = 1296*424+240;
   P(165, 0) = 1296*241+243;
   P(165, 1) = 1296*243+242;
   P(165, 2) = 1296*242+245;
   P(165, 3) = 1296*245+250;
   P(165, 4) = 1296*250+248;
   P(165, 5) = 1296*248+249;
   P(165, 6) = 1296*249+246;
   P(165, 7) = 1296*246+241;
   P(166, 0) = 1296*241+461;
   P(166, 1) = 1296*461+466;
   P(166, 2) = 1296*466+464;
   P(166, 3) = 1296*464+467;
   P(166, 4) = 1296*467+247;
   P(166, 5) = 1296*247+249;
   P(166, 6) = 1296*249+246;
   P(166, 7) = 1296*246+241;
   P(167, 0) = 1296*242+245;
   P(167, 1) = 1296*245+250;
   P(167, 2) = 1296*250+282;
   P(167, 3) = 1296*282+277;
   P(167, 4) = 1296*277+279;
   P(167, 5) = 1296*279+276;
   P(167, 6) = 1296*276+244;
   P(167, 7) = 1296*244+242;
   P(168, 0) = 1296*252+255;
   P(168, 1) = 1296*255+253;
   P(168, 2) = 1296*253+473;
   P(168, 3) = 1296*473+470;
   P(168, 4) = 1296*470+472;
   P(168, 5) = 1296*472+503;
   P(168, 6) = 1296*503+283;
   P(168, 7) = 1296*283+252;
   P(169, 0) = 1296*252+255;
   P(169, 1) = 1296*255+254;
   P(169, 2) = 1296*254+256;
   P(169, 3) = 1296*256+287;
   P(169, 4) = 1296*287+284;
   P(169, 5) = 1296*284+285;
   P(169, 6) = 1296*285+283;
   P(169, 7) = 1296*283+252;
   P(170, 0) = 1296*253+255;
   P(170, 1) = 1296*255+254;
   P(170, 2) = 1296*254+257;
   P(170, 3) = 1296*257+262;
   P(170, 4) = 1296*262+260;
   P(170, 5) = 1296*260+261;
   P(170, 6) = 1296*261+258;
   P(170, 7) = 1296*258+253;
   P(171, 0) = 1296*253+473;
   P(171, 1) = 1296*473+478;
   P(171, 2) = 1296*478+476;
   P(171, 3) = 1296*476+479;
   P(171, 4) = 1296*479+259;
   P(171, 5) = 1296*259+261;
   P(171, 6) = 1296*261+258;
   P(171, 7) = 1296*258+253;
   P(172, 0) = 1296*254+257;
   P(172, 1) = 1296*257+262;
   P(172, 2) = 1296*262+294;
   P(172, 3) = 1296*294+289;
   P(172, 4) = 1296*289+291;
   P(172, 5) = 1296*291+288;
   P(172, 6) = 1296*288+256;
   P(172, 7) = 1296*256+254;
   P(173, 0) = 1296*256+288;
   P(173, 1) = 1296*288+319;
   P(173, 2) = 1296*319+321;
   P(173, 3) = 1296*321+318;
   P(173, 4) = 1296*318+286;
   P(173, 5) = 1296*286+284;
   P(173, 6) = 1296*284+287;
   P(173, 7) = 1296*287+256;
   P(174, 0) = 1296*259+261;
   P(174, 1) = 1296*261+260;
   P(174, 2) = 1296*260+263;
   P(174, 3) = 1296*263+268;
   P(174, 4) = 1296*268+266;
   P(174, 5) = 1296*266+267;
   P(174, 6) = 1296*267+264;
   P(174, 7) = 1296*264+259;
   P(175, 0) = 1296*259+479;
   P(175, 1) = 1296*479+484;
   P(175, 2) = 1296*484+482;
   P(175, 3) = 1296*482+485;
   P(175, 4) = 1296*485+265;
   P(175, 5) = 1296*265+267;
   P(175, 6) = 1296*267+264;
   P(175, 7) = 1296*264+259;
   P(176, 0) = 1296*260+263;
   P(176, 1) = 1296*263+268;
   P(176, 2) = 1296*268+300;
   P(176, 3) = 1296*300+295;
   P(176, 4) = 1296*295+297;
   P(176, 5) = 1296*297+294;
   P(176, 6) = 1296*294+262;
   P(176, 7) = 1296*262+260;
   P(177, 0) = 1296*265+267;
   P(177, 1) = 1296*267+266;
   P(177, 2) = 1296*266+269;
   P(177, 3) = 1296*269+274;
   P(177, 4) = 1296*274+272;
   P(177, 5) = 1296*272+273;
   P(177, 6) = 1296*273+270;
   P(177, 7) = 1296*270+265;
   P(178, 0) = 1296*265+485;
   P(178, 1) = 1296*485+490;
   P(178, 2) = 1296*490+488;
   P(178, 3) = 1296*488+491;
   P(178, 4) = 1296*491+271;
   P(178, 5) = 1296*271+273;
   P(178, 6) = 1296*273+270;
   P(178, 7) = 1296*270+265;
   P(179, 0) = 1296*266+269;
   P(179, 1) = 1296*269+274;
   P(179, 2) = 1296*274+306;
   P(179, 3) = 1296*306+301;
   P(179, 4) = 1296*301+303;
   P(179, 5) = 1296*303+300;
   P(179, 6) = 1296*300+268;
   P(179, 7) = 1296*268+266;
   P(180, 0) = 1296*271+273;
   P(180, 1) = 1296*273+272;
   P(180, 2) = 1296*272+275;
   P(180, 3) = 1296*275+280;
   P(180, 4) = 1296*280+278;
   P(180, 5) = 1296*278+279;
   P(180, 6) = 1296*279+276;
   P(180, 7) = 1296*276+271;
   P(181, 0) = 1296*271+491;
   P(181, 1) = 1296*491+496;
   P(181, 2) = 1296*496+494;
   P(181, 3) = 1296*494+497;
   P(181, 4) = 1296*497+277;
   P(181, 5) = 1296*277+279;
   P(181, 6) = 1296*279+276;
   P(181, 7) = 1296*276+271;
   P(182, 0) = 1296*272+275;
   P(182, 1) = 1296*275+280;
   P(182, 2) = 1296*280+312;
   P(182, 3) = 1296*312+307;
   P(182, 4) = 1296*307+309;
   P(182, 5) = 1296*309+306;
   P(182, 6) = 1296*306+274;
   P(182, 7) = 1296*274+272;
   P(183, 0) = 1296*277+279;
   P(183, 1) = 1296*279+278;
   P(183, 2) = 1296*278+281;
   P(183, 3) = 1296*281+286;
   P(183, 4) = 1296*286+284;
   P(183, 5) = 1296*284+285;
   P(183, 6) = 1296*285+282;
   P(183, 7) = 1296*282+277;
   P(184, 0) = 1296*277+497;
   P(184, 1) = 1296*497+502;
   P(184, 2) = 1296*502+500;
   P(184, 3) = 1296*500+503;
   P(184, 4) = 1296*503+283;
   P(184, 5) = 1296*283+285;
   P(184, 6) = 1296*285+282;
   P(184, 7) = 1296*282+277;
   P(185, 0) = 1296*278+281;
   P(185, 1) = 1296*281+286;
   P(185, 2) = 1296*286+318;
   P(185, 3) = 1296*318+313;
   P(185, 4) = 1296*313+315;
   P(185, 5) = 1296*315+312;
   P(185, 6) = 1296*312+280;
   P(185, 7) = 1296*280+278;
   P(186, 0) = 1296*288+291;
   P(186, 1) = 1296*291+289;
   P(186, 2) = 1296*289+509;
   P(186, 3) = 1296*509+506;
   P(186, 4) = 1296*506+508;
   P(186, 5) = 1296*508+539;
   P(186, 6) = 1296*539+319;
   P(186, 7) = 1296*319+288;
   P(187, 0) = 1296*288+291;
   P(187, 1) = 1296*291+290;
   P(187, 2) = 1296*290+292;
   P(187, 3) = 1296*292+323;
   P(187, 4) = 1296*323+320;
   P(187, 5) = 1296*320+321;
   P(187, 6) = 1296*321+319;
   P(187, 7) = 1296*319+288;
   P(188, 0) = 1296*289+291;
   P(188, 1) = 1296*291+290;
   P(188, 2) = 1296*290+293;
   P(188, 3) = 1296*293+298;
   P(188, 4) = 1296*298+296;
   P(188, 5) = 1296*296+297;
   P(188, 6) = 1296*297+294;
   P(188, 7) = 1296*294+289;
   P(189, 0) = 1296*289+509;
   P(189, 1) = 1296*509+514;
   P(189, 2) = 1296*514+512;
   P(189, 3) = 1296*512+515;
   P(189, 4) = 1296*515+295;
   P(189, 5) = 1296*295+297;
   P(189, 6) = 1296*297+294;
   P(189, 7) = 1296*294+289;
   P(190, 0) = 1296*290+293;
   P(190, 1) = 1296*293+298;
   P(190, 2) = 1296*298+330;
   P(190, 3) = 1296*330+325;
   P(190, 4) = 1296*325+327;
   P(190, 5) = 1296*327+324;
   P(190, 6) = 1296*324+292;
   P(190, 7) = 1296*292+290;
   P(191, 0) = 1296*292+324;
   P(191, 1) = 1296*324+355;
   P(191, 2) = 1296*355+357;
   P(191, 3) = 1296*357+354;
   P(191, 4) = 1296*354+322;
   P(191, 5) = 1296*322+320;
   P(191, 6) = 1296*320+323;
   P(191, 7) = 1296*323+292;
   P(192, 0) = 1296*295+297;
   P(192, 1) = 1296*297+296;
   P(192, 2) = 1296*296+299;
   P(192, 3) = 1296*299+304;
   P(192, 4) = 1296*304+302;
   P(192, 5) = 1296*302+303;
   P(192, 6) = 1296*303+300;
   P(192, 7) = 1296*300+295;
   P(193, 0) = 1296*295+515;
   P(193, 1) = 1296*515+520;
   P(193, 2) = 1296*520+518;
   P(193, 3) = 1296*518+521;
   P(193, 4) = 1296*521+301;
   P(193, 5) = 1296*301+303;
   P(193, 6) = 1296*303+300;
   P(193, 7) = 1296*300+295;
   P(194, 0) = 1296*296+299;
   P(194, 1) = 1296*299+304;
   P(194, 2) = 1296*304+336;
   P(194, 3) = 1296*336+331;
   P(194, 4) = 1296*331+333;
   P(194, 5) = 1296*333+330;
   P(194, 6) = 1296*330+298;
   P(194, 7) = 1296*298+296;
   P(195, 0) = 1296*301+303;
   P(195, 1) = 1296*303+302;
   P(195, 2) = 1296*302+305;
   P(195, 3) = 1296*305+310;
   P(195, 4) = 1296*310+308;
   P(195, 5) = 1296*308+309;
   P(195, 6) = 1296*309+306;
   P(195, 7) = 1296*306+301;
   P(196, 0) = 1296*301+521;
   P(196, 1) = 1296*521+526;
   P(196, 2) = 1296*526+524;
   P(196, 3) = 1296*524+527;
   P(196, 4) = 1296*527+307;
   P(196, 5) = 1296*307+309;
   P(196, 6) = 1296*309+306;
   P(196, 7) = 1296*306+301;
   P(197, 0) = 1296*302+305;
   P(197, 1) = 1296*305+310;
   P(197, 2) = 1296*310+342;
   P(197, 3) = 1296*342+337;
   P(197, 4) = 1296*337+339;
   P(197, 5) = 1296*339+336;
   P(197, 6) = 1296*336+304;
   P(197, 7) = 1296*304+302;
   P(198, 0) = 1296*307+309;
   P(198, 1) = 1296*309+308;
   P(198, 2) = 1296*308+311;
   P(198, 3) = 1296*311+316;
   P(198, 4) = 1296*316+314;
   P(198, 5) = 1296*314+315;
   P(198, 6) = 1296*315+312;
   P(198, 7) = 1296*312+307;
   P(199, 0) = 1296*307+527;
   P(199, 1) = 1296*527+532;
   P(199, 2) = 1296*532+530;
   P(199, 3) = 1296*530+533;
   P(199, 4) = 1296*533+313;
   P(199, 5) = 1296*313+315;
   P(199, 6) = 1296*315+312;
   P(199, 7) = 1296*312+307;
   P(200, 0) = 1296*308+311;
   P(200, 1) = 1296*311+316;
   P(200, 2) = 1296*316+348;
   P(200, 3) = 1296*348+343;
   P(200, 4) = 1296*343+345;
   P(200, 5) = 1296*345+342;
   P(200, 6) = 1296*342+310;
   P(200, 7) = 1296*310+308;
   P(201, 0) = 1296*313+315;
   P(201, 1) = 1296*315+314;
   P(201, 2) = 1296*314+317;
   P(201, 3) = 1296*317+322;
   P(201, 4) = 1296*322+320;
   P(201, 5) = 1296*320+321;
   P(201, 6) = 1296*321+318;
   P(201, 7) = 1296*318+313;
   P(202, 0) = 1296*313+533;
   P(202, 1) = 1296*533+538;
   P(202, 2) = 1296*538+536;
   P(202, 3) = 1296*536+539;
   P(202, 4) = 1296*539+319;
   P(202, 5) = 1296*319+321;
   P(202, 6) = 1296*321+318;
   P(202, 7) = 1296*318+313;
   P(203, 0) = 1296*314+317;
   P(203, 1) = 1296*317+322;
   P(203, 2) = 1296*322+354;
   P(203, 3) = 1296*354+349;
   P(203, 4) = 1296*349+351;
   P(203, 5) = 1296*351+348;
   P(203, 6) = 1296*348+316;
   P(203, 7) = 1296*316+314;
   P(204, 0) = 1296*324+327;
   P(204, 1) = 1296*327+325;
   P(204, 2) = 1296*325+545;
   P(204, 3) = 1296*545+542;
   P(204, 4) = 1296*542+544;
   P(204, 5) = 1296*544+575;
   P(204, 6) = 1296*575+355;
   P(204, 7) = 1296*355+324;
   P(205, 0) = 1296*324+327;
   P(205, 1) = 1296*327+326;
   P(205, 2) = 1296*326+328;
   P(205, 3) = 1296*328+359;
   P(205, 4) = 1296*359+356;
   P(205, 5) = 1296*356+357;
   P(205, 6) = 1296*357+355;
   P(205, 7) = 1296*355+324;
   P(206, 0) = 1296*325+327;
   P(206, 1) = 1296*327+326;
   P(206, 2) = 1296*326+329;
   P(206, 3) = 1296*329+334;
   P(206, 4) = 1296*334+332;
   P(206, 5) = 1296*332+333;
   P(206, 6) = 1296*333+330;
   P(206, 7) = 1296*330+325;
   P(207, 0) = 1296*325+545;
   P(207, 1) = 1296*545+550;
   P(207, 2) = 1296*550+548;
   P(207, 3) = 1296*548+551;
   P(207, 4) = 1296*551+331;
   P(207, 5) = 1296*331+333;
   P(207, 6) = 1296*333+330;
   P(207, 7) = 1296*330+325;
   P(208, 0) = 1296*326+329;
   P(208, 1) = 1296*329+334;
   P(208, 2) = 1296*334+366;
   P(208, 3) = 1296*366+361;
   P(208, 4) = 1296*361+363;
   P(208, 5) = 1296*363+360;
   P(208, 6) = 1296*360+328;
   P(208, 7) = 1296*328+326;
   P(209, 0) = 1296*328+360;
   P(209, 1) = 1296*360+391;
   P(209, 2) = 1296*391+393;
   P(209, 3) = 1296*393+390;
   P(209, 4) = 1296*390+358;
   P(209, 5) = 1296*358+356;
   P(209, 6) = 1296*356+359;
   P(209, 7) = 1296*359+328;
   P(210, 0) = 1296*331+333;
   P(210, 1) = 1296*333+332;
   P(210, 2) = 1296*332+335;
   P(210, 3) = 1296*335+340;
   P(210, 4) = 1296*340+338;
   P(210, 5) = 1296*338+339;
   P(210, 6) = 1296*339+336;
   P(210, 7) = 1296*336+331;
   P(211, 0) = 1296*331+551;
   P(211, 1) = 1296*551+556;
   P(211, 2) = 1296*556+554;
   P(211, 3) = 1296*554+557;
   P(211, 4) = 1296*557+337;
   P(211, 5) = 1296*337+339;
   P(211, 6) = 1296*339+336;
   P(211, 7) = 1296*336+331;
   P(212, 0) = 1296*332+335;
   P(212, 1) = 1296*335+340;
   P(212, 2) = 1296*340+372;
   P(212, 3) = 1296*372+367;
   P(212, 4) = 1296*367+369;
   P(212, 5) = 1296*369+366;
   P(212, 6) = 1296*366+334;
   P(212, 7) = 1296*334+332;
   P(213, 0) = 1296*337+339;
   P(213, 1) = 1296*339+338;
   P(213, 2) = 1296*338+341;
   P(213, 3) = 1296*341+346;
   P(213, 4) = 1296*346+344;
   P(213, 5) = 1296*344+345;
   P(213, 6) = 1296*345+342;
   P(213, 7) = 1296*342+337;
   P(214, 0) = 1296*337+557;
   P(214, 1) = 1296*557+562;
   P(214, 2) = 1296*562+560;
   P(214, 3) = 1296*560+563;
   P(214, 4) = 1296*563+343;
   P(214, 5) = 1296*343+345;
   P(214, 6) = 1296*345+342;
   P(214, 7) = 1296*342+337;
   P(215, 0) = 1296*338+341;
   P(215, 1) = 1296*341+346;
   P(215, 2) = 1296*346+378;
   P(215, 3) = 1296*378+373;
   P(215, 4) = 1296*373+375;
   P(215, 5) = 1296*375+372;
   P(215, 6) = 1296*372+340;
   P(215, 7) = 1296*340+338;
   P(216, 0) = 1296*343+345;
   P(216, 1) = 1296*345+344;
   P(216, 2) = 1296*344+347;
   P(216, 3) = 1296*347+352;
   P(216, 4) = 1296*352+350;
   P(216, 5) = 1296*350+351;
   P(216, 6) = 1296*351+348;
   P(216, 7) = 1296*348+343;
   P(217, 0) = 1296*343+563;
   P(217, 1) = 1296*563+568;
   P(217, 2) = 1296*568+566;
   P(217, 3) = 1296*566+569;
   P(217, 4) = 1296*569+349;
   P(217, 5) = 1296*349+351;
   P(217, 6) = 1296*351+348;
   P(217, 7) = 1296*348+343;
   P(218, 0) = 1296*344+347;
   P(218, 1) = 1296*347+352;
   P(218, 2) = 1296*352+384;
   P(218, 3) = 1296*384+379;
   P(218, 4) = 1296*379+381;
   P(218, 5) = 1296*381+378;
   P(218, 6) = 1296*378+346;
   P(218, 7) = 1296*346+344;
   P(219, 0) = 1296*349+351;
   P(219, 1) = 1296*351+350;
   P(219, 2) = 1296*350+353;
   P(219, 3) = 1296*353+358;
   P(219, 4) = 1296*358+356;
   P(219, 5) = 1296*356+357;
   P(219, 6) = 1296*357+354;
   P(219, 7) = 1296*354+349;
   P(220, 0) = 1296*349+569;
   P(220, 1) = 1296*569+574;
   P(220, 2) = 1296*574+572;
   P(220, 3) = 1296*572+575;
   P(220, 4) = 1296*575+355;
   P(220, 5) = 1296*355+357;
   P(220, 6) = 1296*357+354;
   P(220, 7) = 1296*354+349;
   P(221, 0) = 1296*350+353;
   P(221, 1) = 1296*353+358;
   P(221, 2) = 1296*358+390;
   P(221, 3) = 1296*390+385;
   P(221, 4) = 1296*385+387;
   P(221, 5) = 1296*387+384;
   P(221, 6) = 1296*384+352;
   P(221, 7) = 1296*352+350;
   P(222, 0) = 1296*360+363;
   P(222, 1) = 1296*363+361;
   P(222, 2) = 1296*361+581;
   P(222, 3) = 1296*581+578;
   P(222, 4) = 1296*578+580;
   P(222, 5) = 1296*580+611;
   P(222, 6) = 1296*611+391;
   P(222, 7) = 1296*391+360;
   P(223, 0) = 1296*360+363;
   P(223, 1) = 1296*363+362;
   P(223, 2) = 1296*362+364;
   P(223, 3) = 1296*364+395;
   P(223, 4) = 1296*395+392;
   P(223, 5) = 1296*392+393;
   P(223, 6) = 1296*393+391;
   P(223, 7) = 1296*391+360;
   P(224, 0) = 1296*361+363;
   P(224, 1) = 1296*363+362;
   P(224, 2) = 1296*362+365;
   P(224, 3) = 1296*365+370;
   P(224, 4) = 1296*370+368;
   P(224, 5) = 1296*368+369;
   P(224, 6) = 1296*369+366;
   P(224, 7) = 1296*366+361;
   P(225, 0) = 1296*361+581;
   P(225, 1) = 1296*581+586;
   P(225, 2) = 1296*586+584;
   P(225, 3) = 1296*584+587;
   P(225, 4) = 1296*587+367;
   P(225, 5) = 1296*367+369;
   P(225, 6) = 1296*369+366;
   P(225, 7) = 1296*366+361;
   P(226, 0) = 1296*362+365;
   P(226, 1) = 1296*365+370;
   P(226, 2) = 1296*370+402;
   P(226, 3) = 1296*402+397;
   P(226, 4) = 1296*397+399;
   P(226, 5) = 1296*399+396;
   P(226, 6) = 1296*396+364;
   P(226, 7) = 1296*364+362;
   P(227, 0) = 1296*364+396;
   P(227, 1) = 1296*396+427;
   P(227, 2) = 1296*427+429;
   P(227, 3) = 1296*429+426;
   P(227, 4) = 1296*426+394;
   P(227, 5) = 1296*394+392;
   P(227, 6) = 1296*392+395;
   P(227, 7) = 1296*395+364;
   P(228, 0) = 1296*367+369;
   P(228, 1) = 1296*369+368;
   P(228, 2) = 1296*368+371;
   P(228, 3) = 1296*371+376;
   P(228, 4) = 1296*376+374;
   P(228, 5) = 1296*374+375;
   P(228, 6) = 1296*375+372;
   P(228, 7) = 1296*372+367;
   P(229, 0) = 1296*367+587;
   P(229, 1) = 1296*587+592;
   P(229, 2) = 1296*592+590;
   P(229, 3) = 1296*590+593;
   P(229, 4) = 1296*593+373;
   P(229, 5) = 1296*373+375;
   P(229, 6) = 1296*375+372;
   P(229, 7) = 1296*372+367;
   P(230, 0) = 1296*368+371;
   P(230, 1) = 1296*371+376;
   P(230, 2) = 1296*376+408;
   P(230, 3) = 1296*408+403;
   P(230, 4) = 1296*403+405;
   P(230, 5) = 1296*405+402;
   P(230, 6) = 1296*402+370;
   P(230, 7) = 1296*370+368;
   P(231, 0) = 1296*373+375;
   P(231, 1) = 1296*375+374;
   P(231, 2) = 1296*374+377;
   P(231, 3) = 1296*377+382;
   P(231, 4) = 1296*382+380;
   P(231, 5) = 1296*380+381;
   P(231, 6) = 1296*381+378;
   P(231, 7) = 1296*378+373;
   P(232, 0) = 1296*373+593;
   P(232, 1) = 1296*593+598;
   P(232, 2) = 1296*598+596;
   P(232, 3) = 1296*596+599;
   P(232, 4) = 1296*599+379;
   P(232, 5) = 1296*379+381;
   P(232, 6) = 1296*381+378;
   P(232, 7) = 1296*378+373;
   P(233, 0) = 1296*374+377;
   P(233, 1) = 1296*377+382;
   P(233, 2) = 1296*382+414;
   P(233, 3) = 1296*414+409;
   P(233, 4) = 1296*409+411;
   P(233, 5) = 1296*411+408;
   P(233, 6) = 1296*408+376;
   P(233, 7) = 1296*376+374;
   P(234, 0) = 1296*379+381;
   P(234, 1) = 1296*381+380;
   P(234, 2) = 1296*380+383;
   P(234, 3) = 1296*383+388;
   P(234, 4) = 1296*388+386;
   P(234, 5) = 1296*386+387;
   P(234, 6) = 1296*387+384;
   P(234, 7) = 1296*384+379;
   P(235, 0) = 1296*379+599;
   P(235, 1) = 1296*599+604;
   P(235, 2) = 1296*604+602;
   P(235, 3) = 1296*602+605;
   P(235, 4) = 1296*605+385;
   P(235, 5) = 1296*385+387;
   P(235, 6) = 1296*387+384;
   P(235, 7) = 1296*384+379;
   P(236, 0) = 1296*380+383;
   P(236, 1) = 1296*383+388;
   P(236, 2) = 1296*388+420;
   P(236, 3) = 1296*420+415;
   P(236, 4) = 1296*415+417;
   P(236, 5) = 1296*417+414;
   P(236, 6) = 1296*414+382;
   P(236, 7) = 1296*382+380;
   P(237, 0) = 1296*385+387;
   P(237, 1) = 1296*387+386;
   P(237, 2) = 1296*386+389;
   P(237, 3) = 1296*389+394;
   P(237, 4) = 1296*394+392;
   P(237, 5) = 1296*392+393;
   P(237, 6) = 1296*393+390;
   P(237, 7) = 1296*390+385;
   P(238, 0) = 1296*385+605;
   P(238, 1) = 1296*605+610;
   P(238, 2) = 1296*610+608;
   P(238, 3) = 1296*608+611;
   P(238, 4) = 1296*611+391;
   P(238, 5) = 1296*391+393;
   P(238, 6) = 1296*393+390;
   P(238, 7) = 1296*390+385;
   P(239, 0) = 1296*386+389;
   P(239, 1) = 1296*389+394;
   P(239, 2) = 1296*394+426;
   P(239, 3) = 1296*426+421;
   P(239, 4) = 1296*421+423;
   P(239, 5) = 1296*423+420;
   P(239, 6) = 1296*420+388;
   P(239, 7) = 1296*388+386;
   P(240, 0) = 1296*396+399;
   P(240, 1) = 1296*399+397;
   P(240, 2) = 1296*397+617;
   P(240, 3) = 1296*617+614;
   P(240, 4) = 1296*614+616;
   P(240, 5) = 1296*616+647;
   P(240, 6) = 1296*647+427;
   P(240, 7) = 1296*427+396;
   P(241, 0) = 1296*396+399;
   P(241, 1) = 1296*399+398;
   P(241, 2) = 1296*398+400;
   P(241, 3) = 1296*400+431;
   P(241, 4) = 1296*431+428;
   P(241, 5) = 1296*428+429;
   P(241, 6) = 1296*429+427;
   P(241, 7) = 1296*427+396;
   P(242, 0) = 1296*397+399;
   P(242, 1) = 1296*399+398;
   P(242, 2) = 1296*398+401;
   P(242, 3) = 1296*401+406;
   P(242, 4) = 1296*406+404;
   P(242, 5) = 1296*404+405;
   P(242, 6) = 1296*405+402;
   P(242, 7) = 1296*402+397;
   P(243, 0) = 1296*397+617;
   P(243, 1) = 1296*617+622;
   P(243, 2) = 1296*622+620;
   P(243, 3) = 1296*620+623;
   P(243, 4) = 1296*623+403;
   P(243, 5) = 1296*403+405;
   P(243, 6) = 1296*405+402;
   P(243, 7) = 1296*402+397;
   P(244, 0) = 1296*403+405;
   P(244, 1) = 1296*405+404;
   P(244, 2) = 1296*404+407;
   P(244, 3) = 1296*407+412;
   P(244, 4) = 1296*412+410;
   P(244, 5) = 1296*410+411;
   P(244, 6) = 1296*411+408;
   P(244, 7) = 1296*408+403;
   P(245, 0) = 1296*403+623;
   P(245, 1) = 1296*623+628;
   P(245, 2) = 1296*628+626;
   P(245, 3) = 1296*626+629;
   P(245, 4) = 1296*629+409;
   P(245, 5) = 1296*409+411;
   P(245, 6) = 1296*411+408;
   P(245, 7) = 1296*408+403;
   P(246, 0) = 1296*409+411;
   P(246, 1) = 1296*411+410;
   P(246, 2) = 1296*410+413;
   P(246, 3) = 1296*413+418;
   P(246, 4) = 1296*418+416;
   P(246, 5) = 1296*416+417;
   P(246, 6) = 1296*417+414;
   P(246, 7) = 1296*414+409;
   P(247, 0) = 1296*409+629;
   P(247, 1) = 1296*629+634;
   P(247, 2) = 1296*634+632;
   P(247, 3) = 1296*632+635;
   P(247, 4) = 1296*635+415;
   P(247, 5) = 1296*415+417;
   P(247, 6) = 1296*417+414;
   P(247, 7) = 1296*414+409;
   P(248, 0) = 1296*415+417;
   P(248, 1) = 1296*417+416;
   P(248, 2) = 1296*416+419;
   P(248, 3) = 1296*419+424;
   P(248, 4) = 1296*424+422;
   P(248, 5) = 1296*422+423;
   P(248, 6) = 1296*423+420;
   P(248, 7) = 1296*420+415;
   P(249, 0) = 1296*415+635;
   P(249, 1) = 1296*635+640;
   P(249, 2) = 1296*640+638;
   P(249, 3) = 1296*638+641;
   P(249, 4) = 1296*641+421;
   P(249, 5) = 1296*421+423;
   P(249, 6) = 1296*423+420;
   P(249, 7) = 1296*420+415;
   P(250, 0) = 1296*421+423;
   P(250, 1) = 1296*423+422;
   P(250, 2) = 1296*422+425;
   P(250, 3) = 1296*425+430;
   P(250, 4) = 1296*430+428;
   P(250, 5) = 1296*428+429;
   P(250, 6) = 1296*429+426;
   P(250, 7) = 1296*426+421;
   P(251, 0) = 1296*421+641;
   P(251, 1) = 1296*641+646;
   P(251, 2) = 1296*646+644;
   P(251, 3) = 1296*644+647;
   P(251, 4) = 1296*647+427;
   P(251, 5) = 1296*427+429;
   P(251, 6) = 1296*429+426;
   P(251, 7) = 1296*426+421;
   P(252, 0) = 1296*432+435;
   P(252, 1) = 1296*435+433;
   P(252, 2) = 1296*433+653;
   P(252, 3) = 1296*653+650;
   P(252, 4) = 1296*650+652;
   P(252, 5) = 1296*652+683;
   P(252, 6) = 1296*683+463;
   P(252, 7) = 1296*463+432;
   P(253, 0) = 1296*432+435;
   P(253, 1) = 1296*435+433;
   P(253, 2) = 1296*433+438;
   P(253, 3) = 1296*438+622;
   P(253, 4) = 1296*622+617;
   P(253, 5) = 1296*617+614;
   P(253, 6) = 1296*614+616;
   P(253, 7) = 1296*616+432;
   P(254, 0) = 1296*432+435;
   P(254, 1) = 1296*435+434;
   P(254, 2) = 1296*434+436;
   P(254, 3) = 1296*436+467;
   P(254, 4) = 1296*467+464;
   P(254, 5) = 1296*464+465;
   P(254, 6) = 1296*465+463;
   P(254, 7) = 1296*463+432;
   P(255, 0) = 1296*432+616;
   P(255, 1) = 1296*616+647;
   P(255, 2) = 1296*647+644;
   P(255, 3) = 1296*644+646;
   P(255, 4) = 1296*646+462;
   P(255, 5) = 1296*462+465;
   P(255, 6) = 1296*465+463;
   P(255, 7) = 1296*463+432;
   P(256, 0) = 1296*433+435;
   P(256, 1) = 1296*435+434;
   P(256, 2) = 1296*434+437;
   P(256, 3) = 1296*437+442;
   P(256, 4) = 1296*442+440;
   P(256, 5) = 1296*440+441;
   P(256, 6) = 1296*441+438;
   P(256, 7) = 1296*438+433;
   P(257, 0) = 1296*433+653;
   P(257, 1) = 1296*653+658;
   P(257, 2) = 1296*658+656;
   P(257, 3) = 1296*656+659;
   P(257, 4) = 1296*659+439;
   P(257, 5) = 1296*439+441;
   P(257, 6) = 1296*441+438;
   P(257, 7) = 1296*438+433;
   P(258, 0) = 1296*434+437;
   P(258, 1) = 1296*437+442;
   P(258, 2) = 1296*442+474;
   P(258, 3) = 1296*474+469;
   P(258, 4) = 1296*469+471;
   P(258, 5) = 1296*471+468;
   P(258, 6) = 1296*468+436;
   P(258, 7) = 1296*436+434;
   P(259, 0) = 1296*436+468;
   P(259, 1) = 1296*468+499;
   P(259, 2) = 1296*499+501;
   P(259, 3) = 1296*501+498;
   P(259, 4) = 1296*498+466;
   P(259, 5) = 1296*466+464;
   P(259, 6) = 1296*464+467;
   P(259, 7) = 1296*467+436;
   P(260, 0) = 1296*438+441;
   P(260, 1) = 1296*441+439;
   P(260, 2) = 1296*439+444;
   P(260, 3) = 1296*444+628;
   P(260, 4) = 1296*628+623;
   P(260, 5) = 1296*623+620;
   P(260, 6) = 1296*620+622;
   P(260, 7) = 1296*622+438;
   P(261, 0) = 1296*439+441;
   P(261, 1) = 1296*441+440;
   P(261, 2) = 1296*440+443;
   P(261, 3) = 1296*443+448;
   P(261, 4) = 1296*448+446;
   P(261, 5) = 1296*446+447;
   P(261, 6) = 1296*447+444;
   P(261, 7) = 1296*444+439;
   P(262, 0) = 1296*439+659;
   P(262, 1) = 1296*659+664;
   P(262, 2) = 1296*664+662;
   P(262, 3) = 1296*662+665;
   P(262, 4) = 1296*665+445;
   P(262, 5) = 1296*445+447;
   P(262, 6) = 1296*447+444;
   P(262, 7) = 1296*444+439;
   P(263, 0) = 1296*440+443;
   P(263, 1) = 1296*443+448;
   P(263, 2) = 1296*448+480;
   P(263, 3) = 1296*480+475;
   P(263, 4) = 1296*475+477;
   P(263, 5) = 1296*477+474;
   P(263, 6) = 1296*474+442;
   P(263, 7) = 1296*442+440;
   P(264, 0) = 1296*444+447;
   P(264, 1) = 1296*447+445;
   P(264, 2) = 1296*445+450;
   P(264, 3) = 1296*450+634;
   P(264, 4) = 1296*634+629;
   P(264, 5) = 1296*629+626;
   P(264, 6) = 1296*626+628;
   P(264, 7) = 1296*628+444;
   P(265, 0) = 1296*445+447;
   P(265, 1) = 1296*447+446;
   P(265, 2) = 1296*446+449;
   P(265, 3) = 1296*449+454;
   P(265, 4) = 1296*454+452;
   P(265, 5) = 1296*452+453;
   P(265, 6) = 1296*453+450;
   P(265, 7) = 1296*450+445;
   P(266, 0) = 1296*445+665;
   P(266, 1) = 1296*665+670;
   P(266, 2) = 1296*670+668;
   P(266, 3) = 1296*668+671;
   P(266, 4) = 1296*671+451;
   P(266, 5) = 1296*451+453;
   P(266, 6) = 1296*453+450;
   P(266, 7) = 1296*450+445;
   P(267, 0) = 1296*446+449;
   P(267, 1) = 1296*449+454;
   P(267, 2) = 1296*454+486;
   P(267, 3) = 1296*486+481;
   P(267, 4) = 1296*481+483;
   P(267, 5) = 1296*483+480;
   P(267, 6) = 1296*480+448;
   P(267, 7) = 1296*448+446;
   P(268, 0) = 1296*450+453;
   P(268, 1) = 1296*453+451;
   P(268, 2) = 1296*451+456;
   P(268, 3) = 1296*456+640;
   P(268, 4) = 1296*640+635;
   P(268, 5) = 1296*635+632;
   P(268, 6) = 1296*632+634;
   P(268, 7) = 1296*634+450;
   P(269, 0) = 1296*451+453;
   P(269, 1) = 1296*453+452;
   P(269, 2) = 1296*452+455;
   P(269, 3) = 1296*455+460;
   P(269, 4) = 1296*460+458;
   P(269, 5) = 1296*458+459;
   P(269, 6) = 1296*459+456;
   P(269, 7) = 1296*456+451;
   P(270, 0) = 1296*451+671;
   P(270, 1) = 1296*671+676;
   P(270, 2) = 1296*676+674;
   P(270, 3) = 1296*674+677;
   P(270, 4) = 1296*677+457;
   P(270, 5) = 1296*457+459;
   P(270, 6) = 1296*459+456;
   P(270, 7) = 1296*456+451;
   P(271, 0) = 1296*452+455;
   P(271, 1) = 1296*455+460;
   P(271, 2) = 1296*460+492;
   P(271, 3) = 1296*492+487;
   P(271, 4) = 1296*487+489;
   P(271, 5) = 1296*489+486;
   P(271, 6) = 1296*486+454;
   P(271, 7) = 1296*454+452;
   P(272, 0) = 1296*456+459;
   P(272, 1) = 1296*459+457;
   P(272, 2) = 1296*457+462;
   P(272, 3) = 1296*462+646;
   P(272, 4) = 1296*646+641;
   P(272, 5) = 1296*641+638;
   P(272, 6) = 1296*638+640;
   P(272, 7) = 1296*640+456;
   P(273, 0) = 1296*457+459;
   P(273, 1) = 1296*459+458;
   P(273, 2) = 1296*458+461;
   P(273, 3) = 1296*461+466;
   P(273, 4) = 1296*466+464;
   P(273, 5) = 1296*464+465;
   P(273, 6) = 1296*465+462;
   P(273, 7) = 1296*462+457;
   P(274, 0) = 1296*457+677;
   P(274, 1) = 1296*677+682;
   P(274, 2) = 1296*682+680;
   P(274, 3) = 1296*680+683;
   P(274, 4) = 1296*683+463;
   P(274, 5) = 1296*463+465;
   P(274, 6) = 1296*465+462;
   P(274, 7) = 1296*462+457;
   P(275, 0) = 1296*458+461;
   P(275, 1) = 1296*461+466;
   P(275, 2) = 1296*466+498;
   P(275, 3) = 1296*498+493;
   P(275, 4) = 1296*493+495;
   P(275, 5) = 1296*495+492;
   P(275, 6) = 1296*492+460;
   P(275, 7) = 1296*460+458;
   P(276, 0) = 1296*468+471;
   P(276, 1) = 1296*471+469;
   P(276, 2) = 1296*469+689;
   P(276, 3) = 1296*689+686;
   P(276, 4) = 1296*686+688;
   P(276, 5) = 1296*688+719;
   P(276, 6) = 1296*719+499;
   P(276, 7) = 1296*499+468;
   P(277, 0) = 1296*468+471;
   P(277, 1) = 1296*471+470;
   P(277, 2) = 1296*470+472;
   P(277, 3) = 1296*472+503;
   P(277, 4) = 1296*503+500;
   P(277, 5) = 1296*500+501;
   P(277, 6) = 1296*501+499;
   P(277, 7) = 1296*499+468;
   P(278, 0) = 1296*469+471;
   P(278, 1) = 1296*471+470;
   P(278, 2) = 1296*470+473;
   P(278, 3) = 1296*473+478;
   P(278, 4) = 1296*478+476;
   P(278, 5) = 1296*476+477;
   P(278, 6) = 1296*477+474;
   P(278, 7) = 1296*474+469;
   P(279, 0) = 1296*469+689;
   P(279, 1) = 1296*689+694;
   P(279, 2) = 1296*694+692;
   P(279, 3) = 1296*692+695;
   P(279, 4) = 1296*695+475;
   P(279, 5) = 1296*475+477;
   P(279, 6) = 1296*477+474;
   P(279, 7) = 1296*474+469;
   P(280, 0) = 1296*470+473;
   P(280, 1) = 1296*473+478;
   P(280, 2) = 1296*478+510;
   P(280, 3) = 1296*510+505;
   P(280, 4) = 1296*505+507;
   P(280, 5) = 1296*507+504;
   P(280, 6) = 1296*504+472;
   P(280, 7) = 1296*472+470;
   P(281, 0) = 1296*472+504;
   P(281, 1) = 1296*504+535;
   P(281, 2) = 1296*535+537;
   P(281, 3) = 1296*537+534;
   P(281, 4) = 1296*534+502;
   P(281, 5) = 1296*502+500;
   P(281, 6) = 1296*500+503;
   P(281, 7) = 1296*503+472;
   P(282, 0) = 1296*475+477;
   P(282, 1) = 1296*477+476;
   P(282, 2) = 1296*476+479;
   P(282, 3) = 1296*479+484;
   P(282, 4) = 1296*484+482;
   P(282, 5) = 1296*482+483;
   P(282, 6) = 1296*483+480;
   P(282, 7) = 1296*480+475;
   P(283, 0) = 1296*475+695;
   P(283, 1) = 1296*695+700;
   P(283, 2) = 1296*700+698;
   P(283, 3) = 1296*698+701;
   P(283, 4) = 1296*701+481;
   P(283, 5) = 1296*481+483;
   P(283, 6) = 1296*483+480;
   P(283, 7) = 1296*480+475;
   P(284, 0) = 1296*476+479;
   P(284, 1) = 1296*479+484;
   P(284, 2) = 1296*484+516;
   P(284, 3) = 1296*516+511;
   P(284, 4) = 1296*511+513;
   P(284, 5) = 1296*513+510;
   P(284, 6) = 1296*510+478;
   P(284, 7) = 1296*478+476;
   P(285, 0) = 1296*481+483;
   P(285, 1) = 1296*483+482;
   P(285, 2) = 1296*482+485;
   P(285, 3) = 1296*485+490;
   P(285, 4) = 1296*490+488;
   P(285, 5) = 1296*488+489;
   P(285, 6) = 1296*489+486;
   P(285, 7) = 1296*486+481;
   P(286, 0) = 1296*481+701;
   P(286, 1) = 1296*701+706;
   P(286, 2) = 1296*706+704;
   P(286, 3) = 1296*704+707;
   P(286, 4) = 1296*707+487;
   P(286, 5) = 1296*487+489;
   P(286, 6) = 1296*489+486;
   P(286, 7) = 1296*486+481;
   P(287, 0) = 1296*482+485;
   P(287, 1) = 1296*485+490;
   P(287, 2) = 1296*490+522;
   P(287, 3) = 1296*522+517;
   P(287, 4) = 1296*517+519;
   P(287, 5) = 1296*519+516;
   P(287, 6) = 1296*516+484;
   P(287, 7) = 1296*484+482;
   P(288, 0) = 1296*487+489;
   P(288, 1) = 1296*489+488;
   P(288, 2) = 1296*488+491;
   P(288, 3) = 1296*491+496;
   P(288, 4) = 1296*496+494;
   P(288, 5) = 1296*494+495;
   P(288, 6) = 1296*495+492;
   P(288, 7) = 1296*492+487;
   P(289, 0) = 1296*487+707;
   P(289, 1) = 1296*707+712;
   P(289, 2) = 1296*712+710;
   P(289, 3) = 1296*710+713;
   P(289, 4) = 1296*713+493;
   P(289, 5) = 1296*493+495;
   P(289, 6) = 1296*495+492;
   P(289, 7) = 1296*492+487;
   P(290, 0) = 1296*488+491;
   P(290, 1) = 1296*491+496;
   P(290, 2) = 1296*496+528;
   P(290, 3) = 1296*528+523;
   P(290, 4) = 1296*523+525;
   P(290, 5) = 1296*525+522;
   P(290, 6) = 1296*522+490;
   P(290, 7) = 1296*490+488;
   P(291, 0) = 1296*493+495;
   P(291, 1) = 1296*495+494;
   P(291, 2) = 1296*494+497;
   P(291, 3) = 1296*497+502;
   P(291, 4) = 1296*502+500;
   P(291, 5) = 1296*500+501;
   P(291, 6) = 1296*501+498;
   P(291, 7) = 1296*498+493;
   P(292, 0) = 1296*493+713;
   P(292, 1) = 1296*713+718;
   P(292, 2) = 1296*718+716;
   P(292, 3) = 1296*716+719;
   P(292, 4) = 1296*719+499;
   P(292, 5) = 1296*499+501;
   P(292, 6) = 1296*501+498;
   P(292, 7) = 1296*498+493;
   P(293, 0) = 1296*494+497;
   P(293, 1) = 1296*497+502;
   P(293, 2) = 1296*502+534;
   P(293, 3) = 1296*534+529;
   P(293, 4) = 1296*529+531;
   P(293, 5) = 1296*531+528;
   P(293, 6) = 1296*528+496;
   P(293, 7) = 1296*496+494;
   P(294, 0) = 1296*504+507;
   P(294, 1) = 1296*507+505;
   P(294, 2) = 1296*505+725;
   P(294, 3) = 1296*725+722;
   P(294, 4) = 1296*722+724;
   P(294, 5) = 1296*724+755;
   P(294, 6) = 1296*755+535;
   P(294, 7) = 1296*535+504;
   P(295, 0) = 1296*504+507;
   P(295, 1) = 1296*507+506;
   P(295, 2) = 1296*506+508;
   P(295, 3) = 1296*508+539;
   P(295, 4) = 1296*539+536;
   P(295, 5) = 1296*536+537;
   P(295, 6) = 1296*537+535;
   P(295, 7) = 1296*535+504;
   P(296, 0) = 1296*505+507;
   P(296, 1) = 1296*507+506;
   P(296, 2) = 1296*506+509;
   P(296, 3) = 1296*509+514;
   P(296, 4) = 1296*514+512;
   P(296, 5) = 1296*512+513;
   P(296, 6) = 1296*513+510;
   P(296, 7) = 1296*510+505;
   P(297, 0) = 1296*505+725;
   P(297, 1) = 1296*725+730;
   P(297, 2) = 1296*730+728;
   P(297, 3) = 1296*728+731;
   P(297, 4) = 1296*731+511;
   P(297, 5) = 1296*511+513;
   P(297, 6) = 1296*513+510;
   P(297, 7) = 1296*510+505;
   P(298, 0) = 1296*506+509;
   P(298, 1) = 1296*509+514;
   P(298, 2) = 1296*514+546;
   P(298, 3) = 1296*546+541;
   P(298, 4) = 1296*541+543;
   P(298, 5) = 1296*543+540;
   P(298, 6) = 1296*540+508;
   P(298, 7) = 1296*508+506;
   P(299, 0) = 1296*508+540;
   P(299, 1) = 1296*540+571;
   P(299, 2) = 1296*571+573;
   P(299, 3) = 1296*573+570;
   P(299, 4) = 1296*570+538;
   P(299, 5) = 1296*538+536;
   P(299, 6) = 1296*536+539;
   P(299, 7) = 1296*539+508;
   P(300, 0) = 1296*511+513;
   P(300, 1) = 1296*513+512;
   P(300, 2) = 1296*512+515;
   P(300, 3) = 1296*515+520;
   P(300, 4) = 1296*520+518;
   P(300, 5) = 1296*518+519;
   P(300, 6) = 1296*519+516;
   P(300, 7) = 1296*516+511;
   P(301, 0) = 1296*511+731;
   P(301, 1) = 1296*731+736;
   P(301, 2) = 1296*736+734;
   P(301, 3) = 1296*734+737;
   P(301, 4) = 1296*737+517;
   P(301, 5) = 1296*517+519;
   P(301, 6) = 1296*519+516;
   P(301, 7) = 1296*516+511;
   P(302, 0) = 1296*512+515;
   P(302, 1) = 1296*515+520;
   P(302, 2) = 1296*520+552;
   P(302, 3) = 1296*552+547;
   P(302, 4) = 1296*547+549;
   P(302, 5) = 1296*549+546;
   P(302, 6) = 1296*546+514;
   P(302, 7) = 1296*514+512;
   P(303, 0) = 1296*517+519;
   P(303, 1) = 1296*519+518;
   P(303, 2) = 1296*518+521;
   P(303, 3) = 1296*521+526;
   P(303, 4) = 1296*526+524;
   P(303, 5) = 1296*524+525;
   P(303, 6) = 1296*525+522;
   P(303, 7) = 1296*522+517;
   P(304, 0) = 1296*517+737;
   P(304, 1) = 1296*737+742;
   P(304, 2) = 1296*742+740;
   P(304, 3) = 1296*740+743;
   P(304, 4) = 1296*743+523;
   P(304, 5) = 1296*523+525;
   P(304, 6) = 1296*525+522;
   P(304, 7) = 1296*522+517;
   P(305, 0) = 1296*518+521;
   P(305, 1) = 1296*521+526;
   P(305, 2) = 1296*526+558;
   P(305, 3) = 1296*558+553;
   P(305, 4) = 1296*553+555;
   P(305, 5) = 1296*555+552;
   P(305, 6) = 1296*552+520;
   P(305, 7) = 1296*520+518;
   P(306, 0) = 1296*523+525;
   P(306, 1) = 1296*525+524;
   P(306, 2) = 1296*524+527;
   P(306, 3) = 1296*527+532;
   P(306, 4) = 1296*532+530;
   P(306, 5) = 1296*530+531;
   P(306, 6) = 1296*531+528;
   P(306, 7) = 1296*528+523;
   P(307, 0) = 1296*523+743;
   P(307, 1) = 1296*743+748;
   P(307, 2) = 1296*748+746;
   P(307, 3) = 1296*746+749;
   P(307, 4) = 1296*749+529;
   P(307, 5) = 1296*529+531;
   P(307, 6) = 1296*531+528;
   P(307, 7) = 1296*528+523;
   P(308, 0) = 1296*524+527;
   P(308, 1) = 1296*527+532;
   P(308, 2) = 1296*532+564;
   P(308, 3) = 1296*564+559;
   P(308, 4) = 1296*559+561;
   P(308, 5) = 1296*561+558;
   P(308, 6) = 1296*558+526;
   P(308, 7) = 1296*526+524;
   P(309, 0) = 1296*529+531;
   P(309, 1) = 1296*531+530;
   P(309, 2) = 1296*530+533;
   P(309, 3) = 1296*533+538;
   P(309, 4) = 1296*538+536;
   P(309, 5) = 1296*536+537;
   P(309, 6) = 1296*537+534;
   P(309, 7) = 1296*534+529;
   P(310, 0) = 1296*529+749;
   P(310, 1) = 1296*749+754;
   P(310, 2) = 1296*754+752;
   P(310, 3) = 1296*752+755;
   P(310, 4) = 1296*755+535;
   P(310, 5) = 1296*535+537;
   P(310, 6) = 1296*537+534;
   P(310, 7) = 1296*534+529;
   P(311, 0) = 1296*530+533;
   P(311, 1) = 1296*533+538;
   P(311, 2) = 1296*538+570;
   P(311, 3) = 1296*570+565;
   P(311, 4) = 1296*565+567;
   P(311, 5) = 1296*567+564;
   P(311, 6) = 1296*564+532;
   P(311, 7) = 1296*532+530;
   P(312, 0) = 1296*540+543;
   P(312, 1) = 1296*543+541;
   P(312, 2) = 1296*541+761;
   P(312, 3) = 1296*761+758;
   P(312, 4) = 1296*758+760;
   P(312, 5) = 1296*760+791;
   P(312, 6) = 1296*791+571;
   P(312, 7) = 1296*571+540;
   P(313, 0) = 1296*540+543;
   P(313, 1) = 1296*543+542;
   P(313, 2) = 1296*542+544;
   P(313, 3) = 1296*544+575;
   P(313, 4) = 1296*575+572;
   P(313, 5) = 1296*572+573;
   P(313, 6) = 1296*573+571;
   P(313, 7) = 1296*571+540;
   P(314, 0) = 1296*541+543;
   P(314, 1) = 1296*543+542;
   P(314, 2) = 1296*542+545;
   P(314, 3) = 1296*545+550;
   P(314, 4) = 1296*550+548;
   P(314, 5) = 1296*548+549;
   P(314, 6) = 1296*549+546;
   P(314, 7) = 1296*546+541;
   P(315, 0) = 1296*541+761;
   P(315, 1) = 1296*761+766;
   P(315, 2) = 1296*766+764;
   P(315, 3) = 1296*764+767;
   P(315, 4) = 1296*767+547;
   P(315, 5) = 1296*547+549;
   P(315, 6) = 1296*549+546;
   P(315, 7) = 1296*546+541;
   P(316, 0) = 1296*542+545;
   P(316, 1) = 1296*545+550;
   P(316, 2) = 1296*550+582;
   P(316, 3) = 1296*582+577;
   P(316, 4) = 1296*577+579;
   P(316, 5) = 1296*579+576;
   P(316, 6) = 1296*576+544;
   P(316, 7) = 1296*544+542;
   P(317, 0) = 1296*544+576;
   P(317, 1) = 1296*576+607;
   P(317, 2) = 1296*607+609;
   P(317, 3) = 1296*609+606;
   P(317, 4) = 1296*606+574;
   P(317, 5) = 1296*574+572;
   P(317, 6) = 1296*572+575;
   P(317, 7) = 1296*575+544;
   P(318, 0) = 1296*547+549;
   P(318, 1) = 1296*549+548;
   P(318, 2) = 1296*548+551;
   P(318, 3) = 1296*551+556;
   P(318, 4) = 1296*556+554;
   P(318, 5) = 1296*554+555;
   P(318, 6) = 1296*555+552;
   P(318, 7) = 1296*552+547;
   P(319, 0) = 1296*547+767;
   P(319, 1) = 1296*767+772;
   P(319, 2) = 1296*772+770;
   P(319, 3) = 1296*770+773;
   P(319, 4) = 1296*773+553;
   P(319, 5) = 1296*553+555;
   P(319, 6) = 1296*555+552;
   P(319, 7) = 1296*552+547;
   P(320, 0) = 1296*548+551;
   P(320, 1) = 1296*551+556;
   P(320, 2) = 1296*556+588;
   P(320, 3) = 1296*588+583;
   P(320, 4) = 1296*583+585;
   P(320, 5) = 1296*585+582;
   P(320, 6) = 1296*582+550;
   P(320, 7) = 1296*550+548;
   P(321, 0) = 1296*553+555;
   P(321, 1) = 1296*555+554;
   P(321, 2) = 1296*554+557;
   P(321, 3) = 1296*557+562;
   P(321, 4) = 1296*562+560;
   P(321, 5) = 1296*560+561;
   P(321, 6) = 1296*561+558;
   P(321, 7) = 1296*558+553;
   P(322, 0) = 1296*553+773;
   P(322, 1) = 1296*773+778;
   P(322, 2) = 1296*778+776;
   P(322, 3) = 1296*776+779;
   P(322, 4) = 1296*779+559;
   P(322, 5) = 1296*559+561;
   P(322, 6) = 1296*561+558;
   P(322, 7) = 1296*558+553;
   P(323, 0) = 1296*554+557;
   P(323, 1) = 1296*557+562;
   P(323, 2) = 1296*562+594;
   P(323, 3) = 1296*594+589;
   P(323, 4) = 1296*589+591;
   P(323, 5) = 1296*591+588;
   P(323, 6) = 1296*588+556;
   P(323, 7) = 1296*556+554;
   P(324, 0) = 1296*559+561;
   P(324, 1) = 1296*561+560;
   P(324, 2) = 1296*560+563;
   P(324, 3) = 1296*563+568;
   P(324, 4) = 1296*568+566;
   P(324, 5) = 1296*566+567;
   P(324, 6) = 1296*567+564;
   P(324, 7) = 1296*564+559;
   P(325, 0) = 1296*559+779;
   P(325, 1) = 1296*779+784;
   P(325, 2) = 1296*784+782;
   P(325, 3) = 1296*782+785;
   P(325, 4) = 1296*785+565;
   P(325, 5) = 1296*565+567;
   P(325, 6) = 1296*567+564;
   P(325, 7) = 1296*564+559;
   P(326, 0) = 1296*560+563;
   P(326, 1) = 1296*563+568;
   P(326, 2) = 1296*568+600;
   P(326, 3) = 1296*600+595;
   P(326, 4) = 1296*595+597;
   P(326, 5) = 1296*597+594;
   P(326, 6) = 1296*594+562;
   P(326, 7) = 1296*562+560;
   P(327, 0) = 1296*565+567;
   P(327, 1) = 1296*567+566;
   P(327, 2) = 1296*566+569;
   P(327, 3) = 1296*569+574;
   P(327, 4) = 1296*574+572;
   P(327, 5) = 1296*572+573;
   P(327, 6) = 1296*573+570;
   P(327, 7) = 1296*570+565;
   P(328, 0) = 1296*565+785;
   P(328, 1) = 1296*785+790;
   P(328, 2) = 1296*790+788;
   P(328, 3) = 1296*788+791;
   P(328, 4) = 1296*791+571;
   P(328, 5) = 1296*571+573;
   P(328, 6) = 1296*573+570;
   P(328, 7) = 1296*570+565;
   P(329, 0) = 1296*566+569;
   P(329, 1) = 1296*569+574;
   P(329, 2) = 1296*574+606;
   P(329, 3) = 1296*606+601;
   P(329, 4) = 1296*601+603;
   P(329, 5) = 1296*603+600;
   P(329, 6) = 1296*600+568;
   P(329, 7) = 1296*568+566;
   P(330, 0) = 1296*576+579;
   P(330, 1) = 1296*579+577;
   P(330, 2) = 1296*577+797;
   P(330, 3) = 1296*797+794;
   P(330, 4) = 1296*794+796;
   P(330, 5) = 1296*796+827;
   P(330, 6) = 1296*827+607;
   P(330, 7) = 1296*607+576;
   P(331, 0) = 1296*576+579;
   P(331, 1) = 1296*579+578;
   P(331, 2) = 1296*578+580;
   P(331, 3) = 1296*580+611;
   P(331, 4) = 1296*611+608;
   P(331, 5) = 1296*608+609;
   P(331, 6) = 1296*609+607;
   P(331, 7) = 1296*607+576;
   P(332, 0) = 1296*577+579;
   P(332, 1) = 1296*579+578;
   P(332, 2) = 1296*578+581;
   P(332, 3) = 1296*581+586;
   P(332, 4) = 1296*586+584;
   P(332, 5) = 1296*584+585;
   P(332, 6) = 1296*585+582;
   P(332, 7) = 1296*582+577;
   P(333, 0) = 1296*577+797;
   P(333, 1) = 1296*797+802;
   P(333, 2) = 1296*802+800;
   P(333, 3) = 1296*800+803;
   P(333, 4) = 1296*803+583;
   P(333, 5) = 1296*583+585;
   P(333, 6) = 1296*585+582;
   P(333, 7) = 1296*582+577;
   P(334, 0) = 1296*578+581;
   P(334, 1) = 1296*581+586;
   P(334, 2) = 1296*586+618;
   P(334, 3) = 1296*618+613;
   P(334, 4) = 1296*613+615;
   P(334, 5) = 1296*615+612;
   P(334, 6) = 1296*612+580;
   P(334, 7) = 1296*580+578;
   P(335, 0) = 1296*580+612;
   P(335, 1) = 1296*612+643;
   P(335, 2) = 1296*643+645;
   P(335, 3) = 1296*645+642;
   P(335, 4) = 1296*642+610;
   P(335, 5) = 1296*610+608;
   P(335, 6) = 1296*608+611;
   P(335, 7) = 1296*611+580;
   P(336, 0) = 1296*583+585;
   P(336, 1) = 1296*585+584;
   P(336, 2) = 1296*584+587;
   P(336, 3) = 1296*587+592;
   P(336, 4) = 1296*592+590;
   P(336, 5) = 1296*590+591;
   P(336, 6) = 1296*591+588;
   P(336, 7) = 1296*588+583;
   P(337, 0) = 1296*583+803;
   P(337, 1) = 1296*803+808;
   P(337, 2) = 1296*808+806;
   P(337, 3) = 1296*806+809;
   P(337, 4) = 1296*809+589;
   P(337, 5) = 1296*589+591;
   P(337, 6) = 1296*591+588;
   P(337, 7) = 1296*588+583;
   P(338, 0) = 1296*584+587;
   P(338, 1) = 1296*587+592;
   P(338, 2) = 1296*592+624;
   P(338, 3) = 1296*624+619;
   P(338, 4) = 1296*619+621;
   P(338, 5) = 1296*621+618;
   P(338, 6) = 1296*618+586;
   P(338, 7) = 1296*586+584;
   P(339, 0) = 1296*589+591;
   P(339, 1) = 1296*591+590;
   P(339, 2) = 1296*590+593;
   P(339, 3) = 1296*593+598;
   P(339, 4) = 1296*598+596;
   P(339, 5) = 1296*596+597;
   P(339, 6) = 1296*597+594;
   P(339, 7) = 1296*594+589;
   P(340, 0) = 1296*589+809;
   P(340, 1) = 1296*809+814;
   P(340, 2) = 1296*814+812;
   P(340, 3) = 1296*812+815;
   P(340, 4) = 1296*815+595;
   P(340, 5) = 1296*595+597;
   P(340, 6) = 1296*597+594;
   P(340, 7) = 1296*594+589;
   P(341, 0) = 1296*590+593;
   P(341, 1) = 1296*593+598;
   P(341, 2) = 1296*598+630;
   P(341, 3) = 1296*630+625;
   P(341, 4) = 1296*625+627;
   P(341, 5) = 1296*627+624;
   P(341, 6) = 1296*624+592;
   P(341, 7) = 1296*592+590;
   P(342, 0) = 1296*595+597;
   P(342, 1) = 1296*597+596;
   P(342, 2) = 1296*596+599;
   P(342, 3) = 1296*599+604;
   P(342, 4) = 1296*604+602;
   P(342, 5) = 1296*602+603;
   P(342, 6) = 1296*603+600;
   P(342, 7) = 1296*600+595;
   P(343, 0) = 1296*595+815;
   P(343, 1) = 1296*815+820;
   P(343, 2) = 1296*820+818;
   P(343, 3) = 1296*818+821;
   P(343, 4) = 1296*821+601;
   P(343, 5) = 1296*601+603;
   P(343, 6) = 1296*603+600;
   P(343, 7) = 1296*600+595;
   P(344, 0) = 1296*596+599;
   P(344, 1) = 1296*599+604;
   P(344, 2) = 1296*604+636;
   P(344, 3) = 1296*636+631;
   P(344, 4) = 1296*631+633;
   P(344, 5) = 1296*633+630;
   P(344, 6) = 1296*630+598;
   P(344, 7) = 1296*598+596;
   P(345, 0) = 1296*601+603;
   P(345, 1) = 1296*603+602;
   P(345, 2) = 1296*602+605;
   P(345, 3) = 1296*605+610;
   P(345, 4) = 1296*610+608;
   P(345, 5) = 1296*608+609;
   P(345, 6) = 1296*609+606;
   P(345, 7) = 1296*606+601;
   P(346, 0) = 1296*601+821;
   P(346, 1) = 1296*821+826;
   P(346, 2) = 1296*826+824;
   P(346, 3) = 1296*824+827;
   P(346, 4) = 1296*827+607;
   P(346, 5) = 1296*607+609;
   P(346, 6) = 1296*609+606;
   P(346, 7) = 1296*606+601;
   P(347, 0) = 1296*602+605;
   P(347, 1) = 1296*605+610;
   P(347, 2) = 1296*610+642;
   P(347, 3) = 1296*642+637;
   P(347, 4) = 1296*637+639;
   P(347, 5) = 1296*639+636;
   P(347, 6) = 1296*636+604;
   P(347, 7) = 1296*604+602;
   P(348, 0) = 1296*612+615;
   P(348, 1) = 1296*615+613;
   P(348, 2) = 1296*613+833;
   P(348, 3) = 1296*833+830;
   P(348, 4) = 1296*830+832;
   P(348, 5) = 1296*832+863;
   P(348, 6) = 1296*863+643;
   P(348, 7) = 1296*643+612;
   P(349, 0) = 1296*612+615;
   P(349, 1) = 1296*615+614;
   P(349, 2) = 1296*614+616;
   P(349, 3) = 1296*616+647;
   P(349, 4) = 1296*647+644;
   P(349, 5) = 1296*644+645;
   P(349, 6) = 1296*645+643;
   P(349, 7) = 1296*643+612;
   P(350, 0) = 1296*613+615;
   P(350, 1) = 1296*615+614;
   P(350, 2) = 1296*614+617;
   P(350, 3) = 1296*617+622;
   P(350, 4) = 1296*622+620;
   P(350, 5) = 1296*620+621;
   P(350, 6) = 1296*621+618;
   P(350, 7) = 1296*618+613;
   P(351, 0) = 1296*613+833;
   P(351, 1) = 1296*833+838;
   P(351, 2) = 1296*838+836;
   P(351, 3) = 1296*836+839;
   P(351, 4) = 1296*839+619;
   P(351, 5) = 1296*619+621;
   P(351, 6) = 1296*621+618;
   P(351, 7) = 1296*618+613;
   P(352, 0) = 1296*619+621;
   P(352, 1) = 1296*621+620;
   P(352, 2) = 1296*620+623;
   P(352, 3) = 1296*623+628;
   P(352, 4) = 1296*628+626;
   P(352, 5) = 1296*626+627;
   P(352, 6) = 1296*627+624;
   P(352, 7) = 1296*624+619;
   P(353, 0) = 1296*619+839;
   P(353, 1) = 1296*839+844;
   P(353, 2) = 1296*844+842;
   P(353, 3) = 1296*842+845;
   P(353, 4) = 1296*845+625;
   P(353, 5) = 1296*625+627;
   P(353, 6) = 1296*627+624;
   P(353, 7) = 1296*624+619;
   P(354, 0) = 1296*625+627;
   P(354, 1) = 1296*627+626;
   P(354, 2) = 1296*626+629;
   P(354, 3) = 1296*629+634;
   P(354, 4) = 1296*634+632;
   P(354, 5) = 1296*632+633;
   P(354, 6) = 1296*633+630;
   P(354, 7) = 1296*630+625;
   P(355, 0) = 1296*625+845;
   P(355, 1) = 1296*845+850;
   P(355, 2) = 1296*850+848;
   P(355, 3) = 1296*848+851;
   P(355, 4) = 1296*851+631;
   P(355, 5) = 1296*631+633;
   P(355, 6) = 1296*633+630;
   P(355, 7) = 1296*630+625;
   P(356, 0) = 1296*631+633;
   P(356, 1) = 1296*633+632;
   P(356, 2) = 1296*632+635;
   P(356, 3) = 1296*635+640;
   P(356, 4) = 1296*640+638;
   P(356, 5) = 1296*638+639;
   P(356, 6) = 1296*639+636;
   P(356, 7) = 1296*636+631;
   P(357, 0) = 1296*631+851;
   P(357, 1) = 1296*851+856;
   P(357, 2) = 1296*856+854;
   P(357, 3) = 1296*854+857;
   P(357, 4) = 1296*857+637;
   P(357, 5) = 1296*637+639;
   P(357, 6) = 1296*639+636;
   P(357, 7) = 1296*636+631;
   P(358, 0) = 1296*637+639;
   P(358, 1) = 1296*639+638;
   P(358, 2) = 1296*638+641;
   P(358, 3) = 1296*641+646;
   P(358, 4) = 1296*646+644;
   P(358, 5) = 1296*644+645;
   P(358, 6) = 1296*645+642;
   P(358, 7) = 1296*642+637;
   P(359, 0) = 1296*637+857;
   P(359, 1) = 1296*857+862;
   P(359, 2) = 1296*862+860;
   P(359, 3) = 1296*860+863;
   P(359, 4) = 1296*863+643;
   P(359, 5) = 1296*643+645;
   P(359, 6) = 1296*645+642;
   P(359, 7) = 1296*642+637;
   P(360, 0) = 1296*648+651;
   P(360, 1) = 1296*651+649;
   P(360, 2) = 1296*649+869;
   P(360, 3) = 1296*869+866;
   P(360, 4) = 1296*866+868;
   P(360, 5) = 1296*868+899;
   P(360, 6) = 1296*899+679;
   P(360, 7) = 1296*679+648;
   P(361, 0) = 1296*648+651;
   P(361, 1) = 1296*651+649;
   P(361, 2) = 1296*649+654;
   P(361, 3) = 1296*654+838;
   P(361, 4) = 1296*838+833;
   P(361, 5) = 1296*833+830;
   P(361, 6) = 1296*830+832;
   P(361, 7) = 1296*832+648;
   P(362, 0) = 1296*648+651;
   P(362, 1) = 1296*651+650;
   P(362, 2) = 1296*650+652;
   P(362, 3) = 1296*652+683;
   P(362, 4) = 1296*683+680;
   P(362, 5) = 1296*680+681;
   P(362, 6) = 1296*681+679;
   P(362, 7) = 1296*679+648;
   P(363, 0) = 1296*648+832;
   P(363, 1) = 1296*832+863;
   P(363, 2) = 1296*863+860;
   P(363, 3) = 1296*860+862;
   P(363, 4) = 1296*862+678;
   P(363, 5) = 1296*678+681;
   P(363, 6) = 1296*681+679;
   P(363, 7) = 1296*679+648;
   P(364, 0) = 1296*649+651;
   P(364, 1) = 1296*651+650;
   P(364, 2) = 1296*650+653;
   P(364, 3) = 1296*653+658;
   P(364, 4) = 1296*658+656;
   P(364, 5) = 1296*656+657;
   P(364, 6) = 1296*657+654;
   P(364, 7) = 1296*654+649;
   P(365, 0) = 1296*649+869;
   P(365, 1) = 1296*869+874;
   P(365, 2) = 1296*874+872;
   P(365, 3) = 1296*872+875;
   P(365, 4) = 1296*875+655;
   P(365, 5) = 1296*655+657;
   P(365, 6) = 1296*657+654;
   P(365, 7) = 1296*654+649;
   P(366, 0) = 1296*650+653;
   P(366, 1) = 1296*653+658;
   P(366, 2) = 1296*658+690;
   P(366, 3) = 1296*690+685;
   P(366, 4) = 1296*685+687;
   P(366, 5) = 1296*687+684;
   P(366, 6) = 1296*684+652;
   P(366, 7) = 1296*652+650;
   P(367, 0) = 1296*652+684;
   P(367, 1) = 1296*684+715;
   P(367, 2) = 1296*715+717;
   P(367, 3) = 1296*717+714;
   P(367, 4) = 1296*714+682;
   P(367, 5) = 1296*682+680;
   P(367, 6) = 1296*680+683;
   P(367, 7) = 1296*683+652;
   P(368, 0) = 1296*654+657;
   P(368, 1) = 1296*657+655;
   P(368, 2) = 1296*655+660;
   P(368, 3) = 1296*660+844;
   P(368, 4) = 1296*844+839;
   P(368, 5) = 1296*839+836;
   P(368, 6) = 1296*836+838;
   P(368, 7) = 1296*838+654;
   P(369, 0) = 1296*655+657;
   P(369, 1) = 1296*657+656;
   P(369, 2) = 1296*656+659;
   P(369, 3) = 1296*659+664;
   P(369, 4) = 1296*664+662;
   P(369, 5) = 1296*662+663;
   P(369, 6) = 1296*663+660;
   P(369, 7) = 1296*660+655;
   P(370, 0) = 1296*655+875;
   P(370, 1) = 1296*875+880;
   P(370, 2) = 1296*880+878;
   P(370, 3) = 1296*878+881;
   P(370, 4) = 1296*881+661;
   P(370, 5) = 1296*661+663;
   P(370, 6) = 1296*663+660;
   P(370, 7) = 1296*660+655;
   P(371, 0) = 1296*656+659;
   P(371, 1) = 1296*659+664;
   P(371, 2) = 1296*664+696;
   P(371, 3) = 1296*696+691;
   P(371, 4) = 1296*691+693;
   P(371, 5) = 1296*693+690;
   P(371, 6) = 1296*690+658;
   P(371, 7) = 1296*658+656;
   P(372, 0) = 1296*660+663;
   P(372, 1) = 1296*663+661;
   P(372, 2) = 1296*661+666;
   P(372, 3) = 1296*666+850;
   P(372, 4) = 1296*850+845;
   P(372, 5) = 1296*845+842;
   P(372, 6) = 1296*842+844;
   P(372, 7) = 1296*844+660;
   P(373, 0) = 1296*661+663;
   P(373, 1) = 1296*663+662;
   P(373, 2) = 1296*662+665;
   P(373, 3) = 1296*665+670;
   P(373, 4) = 1296*670+668;
   P(373, 5) = 1296*668+669;
   P(373, 6) = 1296*669+666;
   P(373, 7) = 1296*666+661;
   P(374, 0) = 1296*661+881;
   P(374, 1) = 1296*881+886;
   P(374, 2) = 1296*886+884;
   P(374, 3) = 1296*884+887;
   P(374, 4) = 1296*887+667;
   P(374, 5) = 1296*667+669;
   P(374, 6) = 1296*669+666;
   P(374, 7) = 1296*666+661;
   P(375, 0) = 1296*662+665;
   P(375, 1) = 1296*665+670;
   P(375, 2) = 1296*670+702;
   P(375, 3) = 1296*702+697;
   P(375, 4) = 1296*697+699;
   P(375, 5) = 1296*699+696;
   P(375, 6) = 1296*696+664;
   P(375, 7) = 1296*664+662;
   P(376, 0) = 1296*666+669;
   P(376, 1) = 1296*669+667;
   P(376, 2) = 1296*667+672;
   P(376, 3) = 1296*672+856;
   P(376, 4) = 1296*856+851;
   P(376, 5) = 1296*851+848;
   P(376, 6) = 1296*848+850;
   P(376, 7) = 1296*850+666;
   P(377, 0) = 1296*667+669;
   P(377, 1) = 1296*669+668;
   P(377, 2) = 1296*668+671;
   P(377, 3) = 1296*671+676;
   P(377, 4) = 1296*676+674;
   P(377, 5) = 1296*674+675;
   P(377, 6) = 1296*675+672;
   P(377, 7) = 1296*672+667;
   P(378, 0) = 1296*667+887;
   P(378, 1) = 1296*887+892;
   P(378, 2) = 1296*892+890;
   P(378, 3) = 1296*890+893;
   P(378, 4) = 1296*893+673;
   P(378, 5) = 1296*673+675;
   P(378, 6) = 1296*675+672;
   P(378, 7) = 1296*672+667;
   P(379, 0) = 1296*668+671;
   P(379, 1) = 1296*671+676;
   P(379, 2) = 1296*676+708;
   P(379, 3) = 1296*708+703;
   P(379, 4) = 1296*703+705;
   P(379, 5) = 1296*705+702;
   P(379, 6) = 1296*702+670;
   P(379, 7) = 1296*670+668;
   P(380, 0) = 1296*672+675;
   P(380, 1) = 1296*675+673;
   P(380, 2) = 1296*673+678;
   P(380, 3) = 1296*678+862;
   P(380, 4) = 1296*862+857;
   P(380, 5) = 1296*857+854;
   P(380, 6) = 1296*854+856;
   P(380, 7) = 1296*856+672;
   P(381, 0) = 1296*673+675;
   P(381, 1) = 1296*675+674;
   P(381, 2) = 1296*674+677;
   P(381, 3) = 1296*677+682;
   P(381, 4) = 1296*682+680;
   P(381, 5) = 1296*680+681;
   P(381, 6) = 1296*681+678;
   P(381, 7) = 1296*678+673;
   P(382, 0) = 1296*673+893;
   P(382, 1) = 1296*893+898;
   P(382, 2) = 1296*898+896;
   P(382, 3) = 1296*896+899;
   P(382, 4) = 1296*899+679;
   P(382, 5) = 1296*679+681;
   P(382, 6) = 1296*681+678;
   P(382, 7) = 1296*678+673;
   P(383, 0) = 1296*674+677;
   P(383, 1) = 1296*677+682;
   P(383, 2) = 1296*682+714;
   P(383, 3) = 1296*714+709;
   P(383, 4) = 1296*709+711;
   P(383, 5) = 1296*711+708;
   P(383, 6) = 1296*708+676;
   P(383, 7) = 1296*676+674;
   P(384, 0) = 1296*684+687;
   P(384, 1) = 1296*687+685;
   P(384, 2) = 1296*685+905;
   P(384, 3) = 1296*905+902;
   P(384, 4) = 1296*902+904;
   P(384, 5) = 1296*904+935;
   P(384, 6) = 1296*935+715;
   P(384, 7) = 1296*715+684;
   P(385, 0) = 1296*684+687;
   P(385, 1) = 1296*687+686;
   P(385, 2) = 1296*686+688;
   P(385, 3) = 1296*688+719;
   P(385, 4) = 1296*719+716;
   P(385, 5) = 1296*716+717;
   P(385, 6) = 1296*717+715;
   P(385, 7) = 1296*715+684;
   P(386, 0) = 1296*685+687;
   P(386, 1) = 1296*687+686;
   P(386, 2) = 1296*686+689;
   P(386, 3) = 1296*689+694;
   P(386, 4) = 1296*694+692;
   P(386, 5) = 1296*692+693;
   P(386, 6) = 1296*693+690;
   P(386, 7) = 1296*690+685;
   P(387, 0) = 1296*685+905;
   P(387, 1) = 1296*905+910;
   P(387, 2) = 1296*910+908;
   P(387, 3) = 1296*908+911;
   P(387, 4) = 1296*911+691;
   P(387, 5) = 1296*691+693;
   P(387, 6) = 1296*693+690;
   P(387, 7) = 1296*690+685;
   P(388, 0) = 1296*686+689;
   P(388, 1) = 1296*689+694;
   P(388, 2) = 1296*694+726;
   P(388, 3) = 1296*726+721;
   P(388, 4) = 1296*721+723;
   P(388, 5) = 1296*723+720;
   P(388, 6) = 1296*720+688;
   P(388, 7) = 1296*688+686;
   P(389, 0) = 1296*688+720;
   P(389, 1) = 1296*720+751;
   P(389, 2) = 1296*751+753;
   P(389, 3) = 1296*753+750;
   P(389, 4) = 1296*750+718;
   P(389, 5) = 1296*718+716;
   P(389, 6) = 1296*716+719;
   P(389, 7) = 1296*719+688;
   P(390, 0) = 1296*691+693;
   P(390, 1) = 1296*693+692;
   P(390, 2) = 1296*692+695;
   P(390, 3) = 1296*695+700;
   P(390, 4) = 1296*700+698;
   P(390, 5) = 1296*698+699;
   P(390, 6) = 1296*699+696;
   P(390, 7) = 1296*696+691;
   P(391, 0) = 1296*691+911;
   P(391, 1) = 1296*911+916;
   P(391, 2) = 1296*916+914;
   P(391, 3) = 1296*914+917;
   P(391, 4) = 1296*917+697;
   P(391, 5) = 1296*697+699;
   P(391, 6) = 1296*699+696;
   P(391, 7) = 1296*696+691;
   P(392, 0) = 1296*692+695;
   P(392, 1) = 1296*695+700;
   P(392, 2) = 1296*700+732;
   P(392, 3) = 1296*732+727;
   P(392, 4) = 1296*727+729;
   P(392, 5) = 1296*729+726;
   P(392, 6) = 1296*726+694;
   P(392, 7) = 1296*694+692;
   P(393, 0) = 1296*697+699;
   P(393, 1) = 1296*699+698;
   P(393, 2) = 1296*698+701;
   P(393, 3) = 1296*701+706;
   P(393, 4) = 1296*706+704;
   P(393, 5) = 1296*704+705;
   P(393, 6) = 1296*705+702;
   P(393, 7) = 1296*702+697;
   P(394, 0) = 1296*697+917;
   P(394, 1) = 1296*917+922;
   P(394, 2) = 1296*922+920;
   P(394, 3) = 1296*920+923;
   P(394, 4) = 1296*923+703;
   P(394, 5) = 1296*703+705;
   P(394, 6) = 1296*705+702;
   P(394, 7) = 1296*702+697;
   P(395, 0) = 1296*698+701;
   P(395, 1) = 1296*701+706;
   P(395, 2) = 1296*706+738;
   P(395, 3) = 1296*738+733;
   P(395, 4) = 1296*733+735;
   P(395, 5) = 1296*735+732;
   P(395, 6) = 1296*732+700;
   P(395, 7) = 1296*700+698;
   P(396, 0) = 1296*703+705;
   P(396, 1) = 1296*705+704;
   P(396, 2) = 1296*704+707;
   P(396, 3) = 1296*707+712;
   P(396, 4) = 1296*712+710;
   P(396, 5) = 1296*710+711;
   P(396, 6) = 1296*711+708;
   P(396, 7) = 1296*708+703;
   P(397, 0) = 1296*703+923;
   P(397, 1) = 1296*923+928;
   P(397, 2) = 1296*928+926;
   P(397, 3) = 1296*926+929;
   P(397, 4) = 1296*929+709;
   P(397, 5) = 1296*709+711;
   P(397, 6) = 1296*711+708;
   P(397, 7) = 1296*708+703;
   P(398, 0) = 1296*704+707;
   P(398, 1) = 1296*707+712;
   P(398, 2) = 1296*712+744;
   P(398, 3) = 1296*744+739;
   P(398, 4) = 1296*739+741;
   P(398, 5) = 1296*741+738;
   P(398, 6) = 1296*738+706;
   P(398, 7) = 1296*706+704;
   P(399, 0) = 1296*709+711;
   P(399, 1) = 1296*711+710;
   P(399, 2) = 1296*710+713;
   P(399, 3) = 1296*713+718;
   P(399, 4) = 1296*718+716;
   P(399, 5) = 1296*716+717;
   P(399, 6) = 1296*717+714;
   P(399, 7) = 1296*714+709;
   P(400, 0) = 1296*709+929;
   P(400, 1) = 1296*929+934;
   P(400, 2) = 1296*934+932;
   P(400, 3) = 1296*932+935;
   P(400, 4) = 1296*935+715;
   P(400, 5) = 1296*715+717;
   P(400, 6) = 1296*717+714;
   P(400, 7) = 1296*714+709;
   P(401, 0) = 1296*710+713;
   P(401, 1) = 1296*713+718;
   P(401, 2) = 1296*718+750;
   P(401, 3) = 1296*750+745;
   P(401, 4) = 1296*745+747;
   P(401, 5) = 1296*747+744;
   P(401, 6) = 1296*744+712;
   P(401, 7) = 1296*712+710;
   P(402, 0) = 1296*720+723;
   P(402, 1) = 1296*723+721;
   P(402, 2) = 1296*721+941;
   P(402, 3) = 1296*941+938;
   P(402, 4) = 1296*938+940;
   P(402, 5) = 1296*940+971;
   P(402, 6) = 1296*971+751;
   P(402, 7) = 1296*751+720;
   P(403, 0) = 1296*720+723;
   P(403, 1) = 1296*723+722;
   P(403, 2) = 1296*722+724;
   P(403, 3) = 1296*724+755;
   P(403, 4) = 1296*755+752;
   P(403, 5) = 1296*752+753;
   P(403, 6) = 1296*753+751;
   P(403, 7) = 1296*751+720;
   P(404, 0) = 1296*721+723;
   P(404, 1) = 1296*723+722;
   P(404, 2) = 1296*722+725;
   P(404, 3) = 1296*725+730;
   P(404, 4) = 1296*730+728;
   P(404, 5) = 1296*728+729;
   P(404, 6) = 1296*729+726;
   P(404, 7) = 1296*726+721;
   P(405, 0) = 1296*721+941;
   P(405, 1) = 1296*941+946;
   P(405, 2) = 1296*946+944;
   P(405, 3) = 1296*944+947;
   P(405, 4) = 1296*947+727;
   P(405, 5) = 1296*727+729;
   P(405, 6) = 1296*729+726;
   P(405, 7) = 1296*726+721;
   P(406, 0) = 1296*722+725;
   P(406, 1) = 1296*725+730;
   P(406, 2) = 1296*730+762;
   P(406, 3) = 1296*762+757;
   P(406, 4) = 1296*757+759;
   P(406, 5) = 1296*759+756;
   P(406, 6) = 1296*756+724;
   P(406, 7) = 1296*724+722;
   P(407, 0) = 1296*724+756;
   P(407, 1) = 1296*756+787;
   P(407, 2) = 1296*787+789;
   P(407, 3) = 1296*789+786;
   P(407, 4) = 1296*786+754;
   P(407, 5) = 1296*754+752;
   P(407, 6) = 1296*752+755;
   P(407, 7) = 1296*755+724;
   P(408, 0) = 1296*727+729;
   P(408, 1) = 1296*729+728;
   P(408, 2) = 1296*728+731;
   P(408, 3) = 1296*731+736;
   P(408, 4) = 1296*736+734;
   P(408, 5) = 1296*734+735;
   P(408, 6) = 1296*735+732;
   P(408, 7) = 1296*732+727;
   P(409, 0) = 1296*727+947;
   P(409, 1) = 1296*947+952;
   P(409, 2) = 1296*952+950;
   P(409, 3) = 1296*950+953;
   P(409, 4) = 1296*953+733;
   P(409, 5) = 1296*733+735;
   P(409, 6) = 1296*735+732;
   P(409, 7) = 1296*732+727;
   P(410, 0) = 1296*728+731;
   P(410, 1) = 1296*731+736;
   P(410, 2) = 1296*736+768;
   P(410, 3) = 1296*768+763;
   P(410, 4) = 1296*763+765;
   P(410, 5) = 1296*765+762;
   P(410, 6) = 1296*762+730;
   P(410, 7) = 1296*730+728;
   P(411, 0) = 1296*733+735;
   P(411, 1) = 1296*735+734;
   P(411, 2) = 1296*734+737;
   P(411, 3) = 1296*737+742;
   P(411, 4) = 1296*742+740;
   P(411, 5) = 1296*740+741;
   P(411, 6) = 1296*741+738;
   P(411, 7) = 1296*738+733;
   P(412, 0) = 1296*733+953;
   P(412, 1) = 1296*953+958;
   P(412, 2) = 1296*958+956;
   P(412, 3) = 1296*956+959;
   P(412, 4) = 1296*959+739;
   P(412, 5) = 1296*739+741;
   P(412, 6) = 1296*741+738;
   P(412, 7) = 1296*738+733;
   P(413, 0) = 1296*734+737;
   P(413, 1) = 1296*737+742;
   P(413, 2) = 1296*742+774;
   P(413, 3) = 1296*774+769;
   P(413, 4) = 1296*769+771;
   P(413, 5) = 1296*771+768;
   P(413, 6) = 1296*768+736;
   P(413, 7) = 1296*736+734;
   P(414, 0) = 1296*739+741;
   P(414, 1) = 1296*741+740;
   P(414, 2) = 1296*740+743;
   P(414, 3) = 1296*743+748;
   P(414, 4) = 1296*748+746;
   P(414, 5) = 1296*746+747;
   P(414, 6) = 1296*747+744;
   P(414, 7) = 1296*744+739;
   P(415, 0) = 1296*739+959;
   P(415, 1) = 1296*959+964;
   P(415, 2) = 1296*964+962;
   P(415, 3) = 1296*962+965;
   P(415, 4) = 1296*965+745;
   P(415, 5) = 1296*745+747;
   P(415, 6) = 1296*747+744;
   P(415, 7) = 1296*744+739;
   P(416, 0) = 1296*740+743;
   P(416, 1) = 1296*743+748;
   P(416, 2) = 1296*748+780;
   P(416, 3) = 1296*780+775;
   P(416, 4) = 1296*775+777;
   P(416, 5) = 1296*777+774;
   P(416, 6) = 1296*774+742;
   P(416, 7) = 1296*742+740;
   P(417, 0) = 1296*745+747;
   P(417, 1) = 1296*747+746;
   P(417, 2) = 1296*746+749;
   P(417, 3) = 1296*749+754;
   P(417, 4) = 1296*754+752;
   P(417, 5) = 1296*752+753;
   P(417, 6) = 1296*753+750;
   P(417, 7) = 1296*750+745;
   P(418, 0) = 1296*745+965;
   P(418, 1) = 1296*965+970;
   P(418, 2) = 1296*970+968;
   P(418, 3) = 1296*968+971;
   P(418, 4) = 1296*971+751;
   P(418, 5) = 1296*751+753;
   P(418, 6) = 1296*753+750;
   P(418, 7) = 1296*750+745;
   P(419, 0) = 1296*746+749;
   P(419, 1) = 1296*749+754;
   P(419, 2) = 1296*754+786;
   P(419, 3) = 1296*786+781;
   P(419, 4) = 1296*781+783;
   P(419, 5) = 1296*783+780;
   P(419, 6) = 1296*780+748;
   P(419, 7) = 1296*748+746;
   P(420, 0) = 1296*756+759;
   P(420, 1) = 1296*759+757;
   P(420, 2) = 1296*757+977;
   P(420, 3) = 1296*977+974;
   P(420, 4) = 1296*974+976;
   P(420, 5) = 1296*976+1007;
   P(420, 6) = 1296*1007+787;
   P(420, 7) = 1296*787+756;
   P(421, 0) = 1296*756+759;
   P(421, 1) = 1296*759+758;
   P(421, 2) = 1296*758+760;
   P(421, 3) = 1296*760+791;
   P(421, 4) = 1296*791+788;
   P(421, 5) = 1296*788+789;
   P(421, 6) = 1296*789+787;
   P(421, 7) = 1296*787+756;
   P(422, 0) = 1296*757+759;
   P(422, 1) = 1296*759+758;
   P(422, 2) = 1296*758+761;
   P(422, 3) = 1296*761+766;
   P(422, 4) = 1296*766+764;
   P(422, 5) = 1296*764+765;
   P(422, 6) = 1296*765+762;
   P(422, 7) = 1296*762+757;
   P(423, 0) = 1296*757+977;
   P(423, 1) = 1296*977+982;
   P(423, 2) = 1296*982+980;
   P(423, 3) = 1296*980+983;
   P(423, 4) = 1296*983+763;
   P(423, 5) = 1296*763+765;
   P(423, 6) = 1296*765+762;
   P(423, 7) = 1296*762+757;
   P(424, 0) = 1296*758+761;
   P(424, 1) = 1296*761+766;
   P(424, 2) = 1296*766+798;
   P(424, 3) = 1296*798+793;
   P(424, 4) = 1296*793+795;
   P(424, 5) = 1296*795+792;
   P(424, 6) = 1296*792+760;
   P(424, 7) = 1296*760+758;
   P(425, 0) = 1296*760+792;
   P(425, 1) = 1296*792+823;
   P(425, 2) = 1296*823+825;
   P(425, 3) = 1296*825+822;
   P(425, 4) = 1296*822+790;
   P(425, 5) = 1296*790+788;
   P(425, 6) = 1296*788+791;
   P(425, 7) = 1296*791+760;
   P(426, 0) = 1296*763+765;
   P(426, 1) = 1296*765+764;
   P(426, 2) = 1296*764+767;
   P(426, 3) = 1296*767+772;
   P(426, 4) = 1296*772+770;
   P(426, 5) = 1296*770+771;
   P(426, 6) = 1296*771+768;
   P(426, 7) = 1296*768+763;
   P(427, 0) = 1296*763+983;
   P(427, 1) = 1296*983+988;
   P(427, 2) = 1296*988+986;
   P(427, 3) = 1296*986+989;
   P(427, 4) = 1296*989+769;
   P(427, 5) = 1296*769+771;
   P(427, 6) = 1296*771+768;
   P(427, 7) = 1296*768+763;
   P(428, 0) = 1296*764+767;
   P(428, 1) = 1296*767+772;
   P(428, 2) = 1296*772+804;
   P(428, 3) = 1296*804+799;
   P(428, 4) = 1296*799+801;
   P(428, 5) = 1296*801+798;
   P(428, 6) = 1296*798+766;
   P(428, 7) = 1296*766+764;
   P(429, 0) = 1296*769+771;
   P(429, 1) = 1296*771+770;
   P(429, 2) = 1296*770+773;
   P(429, 3) = 1296*773+778;
   P(429, 4) = 1296*778+776;
   P(429, 5) = 1296*776+777;
   P(429, 6) = 1296*777+774;
   P(429, 7) = 1296*774+769;
   P(430, 0) = 1296*769+989;
   P(430, 1) = 1296*989+994;
   P(430, 2) = 1296*994+992;
   P(430, 3) = 1296*992+995;
   P(430, 4) = 1296*995+775;
   P(430, 5) = 1296*775+777;
   P(430, 6) = 1296*777+774;
   P(430, 7) = 1296*774+769;
   P(431, 0) = 1296*770+773;
   P(431, 1) = 1296*773+778;
   P(431, 2) = 1296*778+810;
   P(431, 3) = 1296*810+805;
   P(431, 4) = 1296*805+807;
   P(431, 5) = 1296*807+804;
   P(431, 6) = 1296*804+772;
   P(431, 7) = 1296*772+770;
   P(432, 0) = 1296*775+777;
   P(432, 1) = 1296*777+776;
   P(432, 2) = 1296*776+779;
   P(432, 3) = 1296*779+784;
   P(432, 4) = 1296*784+782;
   P(432, 5) = 1296*782+783;
   P(432, 6) = 1296*783+780;
   P(432, 7) = 1296*780+775;
   P(433, 0) = 1296*775+995;
   P(433, 1) = 1296*995+1000;
   P(433, 2) = 1296*1000+998;
   P(433, 3) = 1296*998+1001;
   P(433, 4) = 1296*1001+781;
   P(433, 5) = 1296*781+783;
   P(433, 6) = 1296*783+780;
   P(433, 7) = 1296*780+775;
   P(434, 0) = 1296*776+779;
   P(434, 1) = 1296*779+784;
   P(434, 2) = 1296*784+816;
   P(434, 3) = 1296*816+811;
   P(434, 4) = 1296*811+813;
   P(434, 5) = 1296*813+810;
   P(434, 6) = 1296*810+778;
   P(434, 7) = 1296*778+776;
   P(435, 0) = 1296*781+783;
   P(435, 1) = 1296*783+782;
   P(435, 2) = 1296*782+785;
   P(435, 3) = 1296*785+790;
   P(435, 4) = 1296*790+788;
   P(435, 5) = 1296*788+789;
   P(435, 6) = 1296*789+786;
   P(435, 7) = 1296*786+781;
   P(436, 0) = 1296*781+1001;
   P(436, 1) = 1296*1001+1006;
   P(436, 2) = 1296*1006+1004;
   P(436, 3) = 1296*1004+1007;
   P(436, 4) = 1296*1007+787;
   P(436, 5) = 1296*787+789;
   P(436, 6) = 1296*789+786;
   P(436, 7) = 1296*786+781;
   P(437, 0) = 1296*782+785;
   P(437, 1) = 1296*785+790;
   P(437, 2) = 1296*790+822;
   P(437, 3) = 1296*822+817;
   P(437, 4) = 1296*817+819;
   P(437, 5) = 1296*819+816;
   P(437, 6) = 1296*816+784;
   P(437, 7) = 1296*784+782;
   P(438, 0) = 1296*792+795;
   P(438, 1) = 1296*795+793;
   P(438, 2) = 1296*793+1013;
   P(438, 3) = 1296*1013+1010;
   P(438, 4) = 1296*1010+1012;
   P(438, 5) = 1296*1012+1043;
   P(438, 6) = 1296*1043+823;
   P(438, 7) = 1296*823+792;
   P(439, 0) = 1296*792+795;
   P(439, 1) = 1296*795+794;
   P(439, 2) = 1296*794+796;
   P(439, 3) = 1296*796+827;
   P(439, 4) = 1296*827+824;
   P(439, 5) = 1296*824+825;
   P(439, 6) = 1296*825+823;
   P(439, 7) = 1296*823+792;
   P(440, 0) = 1296*793+795;
   P(440, 1) = 1296*795+794;
   P(440, 2) = 1296*794+797;
   P(440, 3) = 1296*797+802;
   P(440, 4) = 1296*802+800;
   P(440, 5) = 1296*800+801;
   P(440, 6) = 1296*801+798;
   P(440, 7) = 1296*798+793;
   P(441, 0) = 1296*793+1013;
   P(441, 1) = 1296*1013+1018;
   P(441, 2) = 1296*1018+1016;
   P(441, 3) = 1296*1016+1019;
   P(441, 4) = 1296*1019+799;
   P(441, 5) = 1296*799+801;
   P(441, 6) = 1296*801+798;
   P(441, 7) = 1296*798+793;
   P(442, 0) = 1296*794+797;
   P(442, 1) = 1296*797+802;
   P(442, 2) = 1296*802+834;
   P(442, 3) = 1296*834+829;
   P(442, 4) = 1296*829+831;
   P(442, 5) = 1296*831+828;
   P(442, 6) = 1296*828+796;
   P(442, 7) = 1296*796+794;
   P(443, 0) = 1296*796+828;
   P(443, 1) = 1296*828+859;
   P(443, 2) = 1296*859+861;
   P(443, 3) = 1296*861+858;
   P(443, 4) = 1296*858+826;
   P(443, 5) = 1296*826+824;
   P(443, 6) = 1296*824+827;
   P(443, 7) = 1296*827+796;
   P(444, 0) = 1296*799+801;
   P(444, 1) = 1296*801+800;
   P(444, 2) = 1296*800+803;
   P(444, 3) = 1296*803+808;
   P(444, 4) = 1296*808+806;
   P(444, 5) = 1296*806+807;
   P(444, 6) = 1296*807+804;
   P(444, 7) = 1296*804+799;
   P(445, 0) = 1296*799+1019;
   P(445, 1) = 1296*1019+1024;
   P(445, 2) = 1296*1024+1022;
   P(445, 3) = 1296*1022+1025;
   P(445, 4) = 1296*1025+805;
   P(445, 5) = 1296*805+807;
   P(445, 6) = 1296*807+804;
   P(445, 7) = 1296*804+799;
   P(446, 0) = 1296*800+803;
   P(446, 1) = 1296*803+808;
   P(446, 2) = 1296*808+840;
   P(446, 3) = 1296*840+835;
   P(446, 4) = 1296*835+837;
   P(446, 5) = 1296*837+834;
   P(446, 6) = 1296*834+802;
   P(446, 7) = 1296*802+800;
   P(447, 0) = 1296*805+807;
   P(447, 1) = 1296*807+806;
   P(447, 2) = 1296*806+809;
   P(447, 3) = 1296*809+814;
   P(447, 4) = 1296*814+812;
   P(447, 5) = 1296*812+813;
   P(447, 6) = 1296*813+810;
   P(447, 7) = 1296*810+805;
   P(448, 0) = 1296*805+1025;
   P(448, 1) = 1296*1025+1030;
   P(448, 2) = 1296*1030+1028;
   P(448, 3) = 1296*1028+1031;
   P(448, 4) = 1296*1031+811;
   P(448, 5) = 1296*811+813;
   P(448, 6) = 1296*813+810;
   P(448, 7) = 1296*810+805;
   P(449, 0) = 1296*806+809;
   P(449, 1) = 1296*809+814;
   P(449, 2) = 1296*814+846;
   P(449, 3) = 1296*846+841;
   P(449, 4) = 1296*841+843;
   P(449, 5) = 1296*843+840;
   P(449, 6) = 1296*840+808;
   P(449, 7) = 1296*808+806;
   P(450, 0) = 1296*811+813;
   P(450, 1) = 1296*813+812;
   P(450, 2) = 1296*812+815;
   P(450, 3) = 1296*815+820;
   P(450, 4) = 1296*820+818;
   P(450, 5) = 1296*818+819;
   P(450, 6) = 1296*819+816;
   P(450, 7) = 1296*816+811;
   P(451, 0) = 1296*811+1031;
   P(451, 1) = 1296*1031+1036;
   P(451, 2) = 1296*1036+1034;
   P(451, 3) = 1296*1034+1037;
   P(451, 4) = 1296*1037+817;
   P(451, 5) = 1296*817+819;
   P(451, 6) = 1296*819+816;
   P(451, 7) = 1296*816+811;
   P(452, 0) = 1296*812+815;
   P(452, 1) = 1296*815+820;
   P(452, 2) = 1296*820+852;
   P(452, 3) = 1296*852+847;
   P(452, 4) = 1296*847+849;
   P(452, 5) = 1296*849+846;
   P(452, 6) = 1296*846+814;
   P(452, 7) = 1296*814+812;
   P(453, 0) = 1296*817+819;
   P(453, 1) = 1296*819+818;
   P(453, 2) = 1296*818+821;
   P(453, 3) = 1296*821+826;
   P(453, 4) = 1296*826+824;
   P(453, 5) = 1296*824+825;
   P(453, 6) = 1296*825+822;
   P(453, 7) = 1296*822+817;
   P(454, 0) = 1296*817+1037;
   P(454, 1) = 1296*1037+1042;
   P(454, 2) = 1296*1042+1040;
   P(454, 3) = 1296*1040+1043;
   P(454, 4) = 1296*1043+823;
   P(454, 5) = 1296*823+825;
   P(454, 6) = 1296*825+822;
   P(454, 7) = 1296*822+817;
   P(455, 0) = 1296*818+821;
   P(455, 1) = 1296*821+826;
   P(455, 2) = 1296*826+858;
   P(455, 3) = 1296*858+853;
   P(455, 4) = 1296*853+855;
   P(455, 5) = 1296*855+852;
   P(455, 6) = 1296*852+820;
   P(455, 7) = 1296*820+818;
   P(456, 0) = 1296*828+831;
   P(456, 1) = 1296*831+829;
   P(456, 2) = 1296*829+1049;
   P(456, 3) = 1296*1049+1046;
   P(456, 4) = 1296*1046+1048;
   P(456, 5) = 1296*1048+1079;
   P(456, 6) = 1296*1079+859;
   P(456, 7) = 1296*859+828;
   P(457, 0) = 1296*828+831;
   P(457, 1) = 1296*831+830;
   P(457, 2) = 1296*830+832;
   P(457, 3) = 1296*832+863;
   P(457, 4) = 1296*863+860;
   P(457, 5) = 1296*860+861;
   P(457, 6) = 1296*861+859;
   P(457, 7) = 1296*859+828;
   P(458, 0) = 1296*829+831;
   P(458, 1) = 1296*831+830;
   P(458, 2) = 1296*830+833;
   P(458, 3) = 1296*833+838;
   P(458, 4) = 1296*838+836;
   P(458, 5) = 1296*836+837;
   P(458, 6) = 1296*837+834;
   P(458, 7) = 1296*834+829;
   P(459, 0) = 1296*829+1049;
   P(459, 1) = 1296*1049+1054;
   P(459, 2) = 1296*1054+1052;
   P(459, 3) = 1296*1052+1055;
   P(459, 4) = 1296*1055+835;
   P(459, 5) = 1296*835+837;
   P(459, 6) = 1296*837+834;
   P(459, 7) = 1296*834+829;
   P(460, 0) = 1296*835+837;
   P(460, 1) = 1296*837+836;
   P(460, 2) = 1296*836+839;
   P(460, 3) = 1296*839+844;
   P(460, 4) = 1296*844+842;
   P(460, 5) = 1296*842+843;
   P(460, 6) = 1296*843+840;
   P(460, 7) = 1296*840+835;
   P(461, 0) = 1296*835+1055;
   P(461, 1) = 1296*1055+1060;
   P(461, 2) = 1296*1060+1058;
   P(461, 3) = 1296*1058+1061;
   P(461, 4) = 1296*1061+841;
   P(461, 5) = 1296*841+843;
   P(461, 6) = 1296*843+840;
   P(461, 7) = 1296*840+835;
   P(462, 0) = 1296*841+843;
   P(462, 1) = 1296*843+842;
   P(462, 2) = 1296*842+845;
   P(462, 3) = 1296*845+850;
   P(462, 4) = 1296*850+848;
   P(462, 5) = 1296*848+849;
   P(462, 6) = 1296*849+846;
   P(462, 7) = 1296*846+841;
   P(463, 0) = 1296*841+1061;
   P(463, 1) = 1296*1061+1066;
   P(463, 2) = 1296*1066+1064;
   P(463, 3) = 1296*1064+1067;
   P(463, 4) = 1296*1067+847;
   P(463, 5) = 1296*847+849;
   P(463, 6) = 1296*849+846;
   P(463, 7) = 1296*846+841;
   P(464, 0) = 1296*847+849;
   P(464, 1) = 1296*849+848;
   P(464, 2) = 1296*848+851;
   P(464, 3) = 1296*851+856;
   P(464, 4) = 1296*856+854;
   P(464, 5) = 1296*854+855;
   P(464, 6) = 1296*855+852;
   P(464, 7) = 1296*852+847;
   P(465, 0) = 1296*847+1067;
   P(465, 1) = 1296*1067+1072;
   P(465, 2) = 1296*1072+1070;
   P(465, 3) = 1296*1070+1073;
   P(465, 4) = 1296*1073+853;
   P(465, 5) = 1296*853+855;
   P(465, 6) = 1296*855+852;
   P(465, 7) = 1296*852+847;
   P(466, 0) = 1296*853+855;
   P(466, 1) = 1296*855+854;
   P(466, 2) = 1296*854+857;
   P(466, 3) = 1296*857+862;
   P(466, 4) = 1296*862+860;
   P(466, 5) = 1296*860+861;
   P(466, 6) = 1296*861+858;
   P(466, 7) = 1296*858+853;
   P(467, 0) = 1296*853+1073;
   P(467, 1) = 1296*1073+1078;
   P(467, 2) = 1296*1078+1076;
   P(467, 3) = 1296*1076+1079;
   P(467, 4) = 1296*1079+859;
   P(467, 5) = 1296*859+861;
   P(467, 6) = 1296*861+858;
   P(467, 7) = 1296*858+853;
   P(468, 0) = 1296*864+867;
   P(468, 1) = 1296*867+865;
   P(468, 2) = 1296*865+1085;
   P(468, 3) = 1296*1085+1082;
   P(468, 4) = 1296*1082+1084;
   P(468, 5) = 1296*1084+1115;
   P(468, 6) = 1296*1115+895;
   P(468, 7) = 1296*895+864;
   P(469, 0) = 1296*864+867;
   P(469, 1) = 1296*867+865;
   P(469, 2) = 1296*865+870;
   P(469, 3) = 1296*870+1054;
   P(469, 4) = 1296*1054+1049;
   P(469, 5) = 1296*1049+1046;
   P(469, 6) = 1296*1046+1048;
   P(469, 7) = 1296*1048+864;
   P(470, 0) = 1296*864+867;
   P(470, 1) = 1296*867+866;
   P(470, 2) = 1296*866+868;
   P(470, 3) = 1296*868+899;
   P(470, 4) = 1296*899+896;
   P(470, 5) = 1296*896+897;
   P(470, 6) = 1296*897+895;
   P(470, 7) = 1296*895+864;
   P(471, 0) = 1296*864+1048;
   P(471, 1) = 1296*1048+1079;
   P(471, 2) = 1296*1079+1076;
   P(471, 3) = 1296*1076+1078;
   P(471, 4) = 1296*1078+894;
   P(471, 5) = 1296*894+897;
   P(471, 6) = 1296*897+895;
   P(471, 7) = 1296*895+864;
   P(472, 0) = 1296*865+867;
   P(472, 1) = 1296*867+866;
   P(472, 2) = 1296*866+869;
   P(472, 3) = 1296*869+874;
   P(472, 4) = 1296*874+872;
   P(472, 5) = 1296*872+873;
   P(472, 6) = 1296*873+870;
   P(472, 7) = 1296*870+865;
   P(473, 0) = 1296*865+1085;
   P(473, 1) = 1296*1085+1090;
   P(473, 2) = 1296*1090+1088;
   P(473, 3) = 1296*1088+1091;
   P(473, 4) = 1296*1091+871;
   P(473, 5) = 1296*871+873;
   P(473, 6) = 1296*873+870;
   P(473, 7) = 1296*870+865;
   P(474, 0) = 1296*866+869;
   P(474, 1) = 1296*869+874;
   P(474, 2) = 1296*874+906;
   P(474, 3) = 1296*906+901;
   P(474, 4) = 1296*901+903;
   P(474, 5) = 1296*903+900;
   P(474, 6) = 1296*900+868;
   P(474, 7) = 1296*868+866;
   P(475, 0) = 1296*868+900;
   P(475, 1) = 1296*900+931;
   P(475, 2) = 1296*931+933;
   P(475, 3) = 1296*933+930;
   P(475, 4) = 1296*930+898;
   P(475, 5) = 1296*898+896;
   P(475, 6) = 1296*896+899;
   P(475, 7) = 1296*899+868;
   P(476, 0) = 1296*870+873;
   P(476, 1) = 1296*873+871;
   P(476, 2) = 1296*871+876;
   P(476, 3) = 1296*876+1060;
   P(476, 4) = 1296*1060+1055;
   P(476, 5) = 1296*1055+1052;
   P(476, 6) = 1296*1052+1054;
   P(476, 7) = 1296*1054+870;
   P(477, 0) = 1296*871+873;
   P(477, 1) = 1296*873+872;
   P(477, 2) = 1296*872+875;
   P(477, 3) = 1296*875+880;
   P(477, 4) = 1296*880+878;
   P(477, 5) = 1296*878+879;
   P(477, 6) = 1296*879+876;
   P(477, 7) = 1296*876+871;
   P(478, 0) = 1296*871+1091;
   P(478, 1) = 1296*1091+1096;
   P(478, 2) = 1296*1096+1094;
   P(478, 3) = 1296*1094+1097;
   P(478, 4) = 1296*1097+877;
   P(478, 5) = 1296*877+879;
   P(478, 6) = 1296*879+876;
   P(478, 7) = 1296*876+871;
   P(479, 0) = 1296*872+875;
   P(479, 1) = 1296*875+880;
   P(479, 2) = 1296*880+912;
   P(479, 3) = 1296*912+907;
   P(479, 4) = 1296*907+909;
   P(479, 5) = 1296*909+906;
   P(479, 6) = 1296*906+874;
   P(479, 7) = 1296*874+872;
   P(480, 0) = 1296*876+879;
   P(480, 1) = 1296*879+877;
   P(480, 2) = 1296*877+882;
   P(480, 3) = 1296*882+1066;
   P(480, 4) = 1296*1066+1061;
   P(480, 5) = 1296*1061+1058;
   P(480, 6) = 1296*1058+1060;
   P(480, 7) = 1296*1060+876;
   P(481, 0) = 1296*877+879;
   P(481, 1) = 1296*879+878;
   P(481, 2) = 1296*878+881;
   P(481, 3) = 1296*881+886;
   P(481, 4) = 1296*886+884;
   P(481, 5) = 1296*884+885;
   P(481, 6) = 1296*885+882;
   P(481, 7) = 1296*882+877;
   P(482, 0) = 1296*877+1097;
   P(482, 1) = 1296*1097+1102;
   P(482, 2) = 1296*1102+1100;
   P(482, 3) = 1296*1100+1103;
   P(482, 4) = 1296*1103+883;
   P(482, 5) = 1296*883+885;
   P(482, 6) = 1296*885+882;
   P(482, 7) = 1296*882+877;
   P(483, 0) = 1296*878+881;
   P(483, 1) = 1296*881+886;
   P(483, 2) = 1296*886+918;
   P(483, 3) = 1296*918+913;
   P(483, 4) = 1296*913+915;
   P(483, 5) = 1296*915+912;
   P(483, 6) = 1296*912+880;
   P(483, 7) = 1296*880+878;
   P(484, 0) = 1296*882+885;
   P(484, 1) = 1296*885+883;
   P(484, 2) = 1296*883+888;
   P(484, 3) = 1296*888+1072;
   P(484, 4) = 1296*1072+1067;
   P(484, 5) = 1296*1067+1064;
   P(484, 6) = 1296*1064+1066;
   P(484, 7) = 1296*1066+882;
   P(485, 0) = 1296*883+885;
   P(485, 1) = 1296*885+884;
   P(485, 2) = 1296*884+887;
   P(485, 3) = 1296*887+892;
   P(485, 4) = 1296*892+890;
   P(485, 5) = 1296*890+891;
   P(485, 6) = 1296*891+888;
   P(485, 7) = 1296*888+883;
   P(486, 0) = 1296*883+1103;
   P(486, 1) = 1296*1103+1108;
   P(486, 2) = 1296*1108+1106;
   P(486, 3) = 1296*1106+1109;
   P(486, 4) = 1296*1109+889;
   P(486, 5) = 1296*889+891;
   P(486, 6) = 1296*891+888;
   P(486, 7) = 1296*888+883;
   P(487, 0) = 1296*884+887;
   P(487, 1) = 1296*887+892;
   P(487, 2) = 1296*892+924;
   P(487, 3) = 1296*924+919;
   P(487, 4) = 1296*919+921;
   P(487, 5) = 1296*921+918;
   P(487, 6) = 1296*918+886;
   P(487, 7) = 1296*886+884;
   P(488, 0) = 1296*888+891;
   P(488, 1) = 1296*891+889;
   P(488, 2) = 1296*889+894;
   P(488, 3) = 1296*894+1078;
   P(488, 4) = 1296*1078+1073;
   P(488, 5) = 1296*1073+1070;
   P(488, 6) = 1296*1070+1072;
   P(488, 7) = 1296*1072+888;
   P(489, 0) = 1296*889+891;
   P(489, 1) = 1296*891+890;
   P(489, 2) = 1296*890+893;
   P(489, 3) = 1296*893+898;
   P(489, 4) = 1296*898+896;
   P(489, 5) = 1296*896+897;
   P(489, 6) = 1296*897+894;
   P(489, 7) = 1296*894+889;
   P(490, 0) = 1296*889+1109;
   P(490, 1) = 1296*1109+1114;
   P(490, 2) = 1296*1114+1112;
   P(490, 3) = 1296*1112+1115;
   P(490, 4) = 1296*1115+895;
   P(490, 5) = 1296*895+897;
   P(490, 6) = 1296*897+894;
   P(490, 7) = 1296*894+889;
   P(491, 0) = 1296*890+893;
   P(491, 1) = 1296*893+898;
   P(491, 2) = 1296*898+930;
   P(491, 3) = 1296*930+925;
   P(491, 4) = 1296*925+927;
   P(491, 5) = 1296*927+924;
   P(491, 6) = 1296*924+892;
   P(491, 7) = 1296*892+890;
   P(492, 0) = 1296*900+903;
   P(492, 1) = 1296*903+901;
   P(492, 2) = 1296*901+1121;
   P(492, 3) = 1296*1121+1118;
   P(492, 4) = 1296*1118+1120;
   P(492, 5) = 1296*1120+1151;
   P(492, 6) = 1296*1151+931;
   P(492, 7) = 1296*931+900;
   P(493, 0) = 1296*900+903;
   P(493, 1) = 1296*903+902;
   P(493, 2) = 1296*902+904;
   P(493, 3) = 1296*904+935;
   P(493, 4) = 1296*935+932;
   P(493, 5) = 1296*932+933;
   P(493, 6) = 1296*933+931;
   P(493, 7) = 1296*931+900;
   P(494, 0) = 1296*901+903;
   P(494, 1) = 1296*903+902;
   P(494, 2) = 1296*902+905;
   P(494, 3) = 1296*905+910;
   P(494, 4) = 1296*910+908;
   P(494, 5) = 1296*908+909;
   P(494, 6) = 1296*909+906;
   P(494, 7) = 1296*906+901;
   P(495, 0) = 1296*901+1121;
   P(495, 1) = 1296*1121+1126;
   P(495, 2) = 1296*1126+1124;
   P(495, 3) = 1296*1124+1127;
   P(495, 4) = 1296*1127+907;
   P(495, 5) = 1296*907+909;
   P(495, 6) = 1296*909+906;
   P(495, 7) = 1296*906+901;
   P(496, 0) = 1296*902+905;
   P(496, 1) = 1296*905+910;
   P(496, 2) = 1296*910+942;
   P(496, 3) = 1296*942+937;
   P(496, 4) = 1296*937+939;
   P(496, 5) = 1296*939+936;
   P(496, 6) = 1296*936+904;
   P(496, 7) = 1296*904+902;
   P(497, 0) = 1296*904+936;
   P(497, 1) = 1296*936+967;
   P(497, 2) = 1296*967+969;
   P(497, 3) = 1296*969+966;
   P(497, 4) = 1296*966+934;
   P(497, 5) = 1296*934+932;
   P(497, 6) = 1296*932+935;
   P(497, 7) = 1296*935+904;
   P(498, 0) = 1296*907+909;
   P(498, 1) = 1296*909+908;
   P(498, 2) = 1296*908+911;
   P(498, 3) = 1296*911+916;
   P(498, 4) = 1296*916+914;
   P(498, 5) = 1296*914+915;
   P(498, 6) = 1296*915+912;
   P(498, 7) = 1296*912+907;
   P(499, 0) = 1296*907+1127;
   P(499, 1) = 1296*1127+1132;
   P(499, 2) = 1296*1132+1130;
   P(499, 3) = 1296*1130+1133;
   P(499, 4) = 1296*1133+913;
   P(499, 5) = 1296*913+915;
   P(499, 6) = 1296*915+912;
   P(499, 7) = 1296*912+907;
   P(500, 0) = 1296*908+911;
   P(500, 1) = 1296*911+916;
   P(500, 2) = 1296*916+948;
   P(500, 3) = 1296*948+943;
   P(500, 4) = 1296*943+945;
   P(500, 5) = 1296*945+942;
   P(500, 6) = 1296*942+910;
   P(500, 7) = 1296*910+908;
   P(501, 0) = 1296*913+915;
   P(501, 1) = 1296*915+914;
   P(501, 2) = 1296*914+917;
   P(501, 3) = 1296*917+922;
   P(501, 4) = 1296*922+920;
   P(501, 5) = 1296*920+921;
   P(501, 6) = 1296*921+918;
   P(501, 7) = 1296*918+913;
   P(502, 0) = 1296*913+1133;
   P(502, 1) = 1296*1133+1138;
   P(502, 2) = 1296*1138+1136;
   P(502, 3) = 1296*1136+1139;
   P(502, 4) = 1296*1139+919;
   P(502, 5) = 1296*919+921;
   P(502, 6) = 1296*921+918;
   P(502, 7) = 1296*918+913;
   P(503, 0) = 1296*914+917;
   P(503, 1) = 1296*917+922;
   P(503, 2) = 1296*922+954;
   P(503, 3) = 1296*954+949;
   P(503, 4) = 1296*949+951;
   P(503, 5) = 1296*951+948;
   P(503, 6) = 1296*948+916;
   P(503, 7) = 1296*916+914;
   P(504, 0) = 1296*919+921;
   P(504, 1) = 1296*921+920;
   P(504, 2) = 1296*920+923;
   P(504, 3) = 1296*923+928;
   P(504, 4) = 1296*928+926;
   P(504, 5) = 1296*926+927;
   P(504, 6) = 1296*927+924;
   P(504, 7) = 1296*924+919;
   P(505, 0) = 1296*919+1139;
   P(505, 1) = 1296*1139+1144;
   P(505, 2) = 1296*1144+1142;
   P(505, 3) = 1296*1142+1145;
   P(505, 4) = 1296*1145+925;
   P(505, 5) = 1296*925+927;
   P(505, 6) = 1296*927+924;
   P(505, 7) = 1296*924+919;
   P(506, 0) = 1296*920+923;
   P(506, 1) = 1296*923+928;
   P(506, 2) = 1296*928+960;
   P(506, 3) = 1296*960+955;
   P(506, 4) = 1296*955+957;
   P(506, 5) = 1296*957+954;
   P(506, 6) = 1296*954+922;
   P(506, 7) = 1296*922+920;
   P(507, 0) = 1296*925+927;
   P(507, 1) = 1296*927+926;
   P(507, 2) = 1296*926+929;
   P(507, 3) = 1296*929+934;
   P(507, 4) = 1296*934+932;
   P(507, 5) = 1296*932+933;
   P(507, 6) = 1296*933+930;
   P(507, 7) = 1296*930+925;
   P(508, 0) = 1296*925+1145;
   P(508, 1) = 1296*1145+1150;
   P(508, 2) = 1296*1150+1148;
   P(508, 3) = 1296*1148+1151;
   P(508, 4) = 1296*1151+931;
   P(508, 5) = 1296*931+933;
   P(508, 6) = 1296*933+930;
   P(508, 7) = 1296*930+925;
   P(509, 0) = 1296*926+929;
   P(509, 1) = 1296*929+934;
   P(509, 2) = 1296*934+966;
   P(509, 3) = 1296*966+961;
   P(509, 4) = 1296*961+963;
   P(509, 5) = 1296*963+960;
   P(509, 6) = 1296*960+928;
   P(509, 7) = 1296*928+926;
   P(510, 0) = 1296*936+939;
   P(510, 1) = 1296*939+937;
   P(510, 2) = 1296*937+1157;
   P(510, 3) = 1296*1157+1154;
   P(510, 4) = 1296*1154+1156;
   P(510, 5) = 1296*1156+1187;
   P(510, 6) = 1296*1187+967;
   P(510, 7) = 1296*967+936;
   P(511, 0) = 1296*936+939;
   P(511, 1) = 1296*939+938;
   P(511, 2) = 1296*938+940;
   P(511, 3) = 1296*940+971;
   P(511, 4) = 1296*971+968;
   P(511, 5) = 1296*968+969;
   P(511, 6) = 1296*969+967;
   P(511, 7) = 1296*967+936;
   P(512, 0) = 1296*937+939;
   P(512, 1) = 1296*939+938;
   P(512, 2) = 1296*938+941;
   P(512, 3) = 1296*941+946;
   P(512, 4) = 1296*946+944;
   P(512, 5) = 1296*944+945;
   P(512, 6) = 1296*945+942;
   P(512, 7) = 1296*942+937;
   P(513, 0) = 1296*937+1157;
   P(513, 1) = 1296*1157+1162;
   P(513, 2) = 1296*1162+1160;
   P(513, 3) = 1296*1160+1163;
   P(513, 4) = 1296*1163+943;
   P(513, 5) = 1296*943+945;
   P(513, 6) = 1296*945+942;
   P(513, 7) = 1296*942+937;
   P(514, 0) = 1296*938+941;
   P(514, 1) = 1296*941+946;
   P(514, 2) = 1296*946+978;
   P(514, 3) = 1296*978+973;
   P(514, 4) = 1296*973+975;
   P(514, 5) = 1296*975+972;
   P(514, 6) = 1296*972+940;
   P(514, 7) = 1296*940+938;
   P(515, 0) = 1296*940+972;
   P(515, 1) = 1296*972+1003;
   P(515, 2) = 1296*1003+1005;
   P(515, 3) = 1296*1005+1002;
   P(515, 4) = 1296*1002+970;
   P(515, 5) = 1296*970+968;
   P(515, 6) = 1296*968+971;
   P(515, 7) = 1296*971+940;
   P(516, 0) = 1296*943+945;
   P(516, 1) = 1296*945+944;
   P(516, 2) = 1296*944+947;
   P(516, 3) = 1296*947+952;
   P(516, 4) = 1296*952+950;
   P(516, 5) = 1296*950+951;
   P(516, 6) = 1296*951+948;
   P(516, 7) = 1296*948+943;
   P(517, 0) = 1296*943+1163;
   P(517, 1) = 1296*1163+1168;
   P(517, 2) = 1296*1168+1166;
   P(517, 3) = 1296*1166+1169;
   P(517, 4) = 1296*1169+949;
   P(517, 5) = 1296*949+951;
   P(517, 6) = 1296*951+948;
   P(517, 7) = 1296*948+943;
   P(518, 0) = 1296*944+947;
   P(518, 1) = 1296*947+952;
   P(518, 2) = 1296*952+984;
   P(518, 3) = 1296*984+979;
   P(518, 4) = 1296*979+981;
   P(518, 5) = 1296*981+978;
   P(518, 6) = 1296*978+946;
   P(518, 7) = 1296*946+944;
   P(519, 0) = 1296*949+951;
   P(519, 1) = 1296*951+950;
   P(519, 2) = 1296*950+953;
   P(519, 3) = 1296*953+958;
   P(519, 4) = 1296*958+956;
   P(519, 5) = 1296*956+957;
   P(519, 6) = 1296*957+954;
   P(519, 7) = 1296*954+949;
   P(520, 0) = 1296*949+1169;
   P(520, 1) = 1296*1169+1174;
   P(520, 2) = 1296*1174+1172;
   P(520, 3) = 1296*1172+1175;
   P(520, 4) = 1296*1175+955;
   P(520, 5) = 1296*955+957;
   P(520, 6) = 1296*957+954;
   P(520, 7) = 1296*954+949;
   P(521, 0) = 1296*950+953;
   P(521, 1) = 1296*953+958;
   P(521, 2) = 1296*958+990;
   P(521, 3) = 1296*990+985;
   P(521, 4) = 1296*985+987;
   P(521, 5) = 1296*987+984;
   P(521, 6) = 1296*984+952;
   P(521, 7) = 1296*952+950;
   P(522, 0) = 1296*955+957;
   P(522, 1) = 1296*957+956;
   P(522, 2) = 1296*956+959;
   P(522, 3) = 1296*959+964;
   P(522, 4) = 1296*964+962;
   P(522, 5) = 1296*962+963;
   P(522, 6) = 1296*963+960;
   P(522, 7) = 1296*960+955;
   P(523, 0) = 1296*955+1175;
   P(523, 1) = 1296*1175+1180;
   P(523, 2) = 1296*1180+1178;
   P(523, 3) = 1296*1178+1181;
   P(523, 4) = 1296*1181+961;
   P(523, 5) = 1296*961+963;
   P(523, 6) = 1296*963+960;
   P(523, 7) = 1296*960+955;
   P(524, 0) = 1296*956+959;
   P(524, 1) = 1296*959+964;
   P(524, 2) = 1296*964+996;
   P(524, 3) = 1296*996+991;
   P(524, 4) = 1296*991+993;
   P(524, 5) = 1296*993+990;
   P(524, 6) = 1296*990+958;
   P(524, 7) = 1296*958+956;
   P(525, 0) = 1296*961+963;
   P(525, 1) = 1296*963+962;
   P(525, 2) = 1296*962+965;
   P(525, 3) = 1296*965+970;
   P(525, 4) = 1296*970+968;
   P(525, 5) = 1296*968+969;
   P(525, 6) = 1296*969+966;
   P(525, 7) = 1296*966+961;
   P(526, 0) = 1296*961+1181;
   P(526, 1) = 1296*1181+1186;
   P(526, 2) = 1296*1186+1184;
   P(526, 3) = 1296*1184+1187;
   P(526, 4) = 1296*1187+967;
   P(526, 5) = 1296*967+969;
   P(526, 6) = 1296*969+966;
   P(526, 7) = 1296*966+961;
   P(527, 0) = 1296*962+965;
   P(527, 1) = 1296*965+970;
   P(527, 2) = 1296*970+1002;
   P(527, 3) = 1296*1002+997;
   P(527, 4) = 1296*997+999;
   P(527, 5) = 1296*999+996;
   P(527, 6) = 1296*996+964;
   P(527, 7) = 1296*964+962;
   P(528, 0) = 1296*972+975;
   P(528, 1) = 1296*975+973;
   P(528, 2) = 1296*973+1193;
   P(528, 3) = 1296*1193+1190;
   P(528, 4) = 1296*1190+1192;
   P(528, 5) = 1296*1192+1223;
   P(528, 6) = 1296*1223+1003;
   P(528, 7) = 1296*1003+972;
   P(529, 0) = 1296*972+975;
   P(529, 1) = 1296*975+974;
   P(529, 2) = 1296*974+976;
   P(529, 3) = 1296*976+1007;
   P(529, 4) = 1296*1007+1004;
   P(529, 5) = 1296*1004+1005;
   P(529, 6) = 1296*1005+1003;
   P(529, 7) = 1296*1003+972;
   P(530, 0) = 1296*973+975;
   P(530, 1) = 1296*975+974;
   P(530, 2) = 1296*974+977;
   P(530, 3) = 1296*977+982;
   P(530, 4) = 1296*982+980;
   P(530, 5) = 1296*980+981;
   P(530, 6) = 1296*981+978;
   P(530, 7) = 1296*978+973;
   P(531, 0) = 1296*973+1193;
   P(531, 1) = 1296*1193+1198;
   P(531, 2) = 1296*1198+1196;
   P(531, 3) = 1296*1196+1199;
   P(531, 4) = 1296*1199+979;
   P(531, 5) = 1296*979+981;
   P(531, 6) = 1296*981+978;
   P(531, 7) = 1296*978+973;
   P(532, 0) = 1296*974+977;
   P(532, 1) = 1296*977+982;
   P(532, 2) = 1296*982+1014;
   P(532, 3) = 1296*1014+1009;
   P(532, 4) = 1296*1009+1011;
   P(532, 5) = 1296*1011+1008;
   P(532, 6) = 1296*1008+976;
   P(532, 7) = 1296*976+974;
   P(533, 0) = 1296*976+1008;
   P(533, 1) = 1296*1008+1039;
   P(533, 2) = 1296*1039+1041;
   P(533, 3) = 1296*1041+1038;
   P(533, 4) = 1296*1038+1006;
   P(533, 5) = 1296*1006+1004;
   P(533, 6) = 1296*1004+1007;
   P(533, 7) = 1296*1007+976;
   P(534, 0) = 1296*979+981;
   P(534, 1) = 1296*981+980;
   P(534, 2) = 1296*980+983;
   P(534, 3) = 1296*983+988;
   P(534, 4) = 1296*988+986;
   P(534, 5) = 1296*986+987;
   P(534, 6) = 1296*987+984;
   P(534, 7) = 1296*984+979;
   P(535, 0) = 1296*979+1199;
   P(535, 1) = 1296*1199+1204;
   P(535, 2) = 1296*1204+1202;
   P(535, 3) = 1296*1202+1205;
   P(535, 4) = 1296*1205+985;
   P(535, 5) = 1296*985+987;
   P(535, 6) = 1296*987+984;
   P(535, 7) = 1296*984+979;
   P(536, 0) = 1296*980+983;
   P(536, 1) = 1296*983+988;
   P(536, 2) = 1296*988+1020;
   P(536, 3) = 1296*1020+1015;
   P(536, 4) = 1296*1015+1017;
   P(536, 5) = 1296*1017+1014;
   P(536, 6) = 1296*1014+982;
   P(536, 7) = 1296*982+980;
   P(537, 0) = 1296*985+987;
   P(537, 1) = 1296*987+986;
   P(537, 2) = 1296*986+989;
   P(537, 3) = 1296*989+994;
   P(537, 4) = 1296*994+992;
   P(537, 5) = 1296*992+993;
   P(537, 6) = 1296*993+990;
   P(537, 7) = 1296*990+985;
   P(538, 0) = 1296*985+1205;
   P(538, 1) = 1296*1205+1210;
   P(538, 2) = 1296*1210+1208;
   P(538, 3) = 1296*1208+1211;
   P(538, 4) = 1296*1211+991;
   P(538, 5) = 1296*991+993;
   P(538, 6) = 1296*993+990;
   P(538, 7) = 1296*990+985;
   P(539, 0) = 1296*986+989;
   P(539, 1) = 1296*989+994;
   P(539, 2) = 1296*994+1026;
   P(539, 3) = 1296*1026+1021;
   P(539, 4) = 1296*1021+1023;
   P(539, 5) = 1296*1023+1020;
   P(539, 6) = 1296*1020+988;
   P(539, 7) = 1296*988+986;
   P(540, 0) = 1296*991+993;
   P(540, 1) = 1296*993+992;
   P(540, 2) = 1296*992+995;
   P(540, 3) = 1296*995+1000;
   P(540, 4) = 1296*1000+998;
   P(540, 5) = 1296*998+999;
   P(540, 6) = 1296*999+996;
   P(540, 7) = 1296*996+991;
   P(541, 0) = 1296*991+1211;
   P(541, 1) = 1296*1211+1216;
   P(541, 2) = 1296*1216+1214;
   P(541, 3) = 1296*1214+1217;
   P(541, 4) = 1296*1217+997;
   P(541, 5) = 1296*997+999;
   P(541, 6) = 1296*999+996;
   P(541, 7) = 1296*996+991;
   P(542, 0) = 1296*992+995;
   P(542, 1) = 1296*995+1000;
   P(542, 2) = 1296*1000+1032;
   P(542, 3) = 1296*1032+1027;
   P(542, 4) = 1296*1027+1029;
   P(542, 5) = 1296*1029+1026;
   P(542, 6) = 1296*1026+994;
   P(542, 7) = 1296*994+992;
   P(543, 0) = 1296*997+999;
   P(543, 1) = 1296*999+998;
   P(543, 2) = 1296*998+1001;
   P(543, 3) = 1296*1001+1006;
   P(543, 4) = 1296*1006+1004;
   P(543, 5) = 1296*1004+1005;
   P(543, 6) = 1296*1005+1002;
   P(543, 7) = 1296*1002+997;
   P(544, 0) = 1296*997+1217;
   P(544, 1) = 1296*1217+1222;
   P(544, 2) = 1296*1222+1220;
   P(544, 3) = 1296*1220+1223;
   P(544, 4) = 1296*1223+1003;
   P(544, 5) = 1296*1003+1005;
   P(544, 6) = 1296*1005+1002;
   P(544, 7) = 1296*1002+997;
   P(545, 0) = 1296*998+1001;
   P(545, 1) = 1296*1001+1006;
   P(545, 2) = 1296*1006+1038;
   P(545, 3) = 1296*1038+1033;
   P(545, 4) = 1296*1033+1035;
   P(545, 5) = 1296*1035+1032;
   P(545, 6) = 1296*1032+1000;
   P(545, 7) = 1296*1000+998;
   P(546, 0) = 1296*1008+1011;
   P(546, 1) = 1296*1011+1009;
   P(546, 2) = 1296*1009+1229;
   P(546, 3) = 1296*1229+1226;
   P(546, 4) = 1296*1226+1228;
   P(546, 5) = 1296*1228+1259;
   P(546, 6) = 1296*1259+1039;
   P(546, 7) = 1296*1039+1008;
   P(547, 0) = 1296*1008+1011;
   P(547, 1) = 1296*1011+1010;
   P(547, 2) = 1296*1010+1012;
   P(547, 3) = 1296*1012+1043;
   P(547, 4) = 1296*1043+1040;
   P(547, 5) = 1296*1040+1041;
   P(547, 6) = 1296*1041+1039;
   P(547, 7) = 1296*1039+1008;
   P(548, 0) = 1296*1009+1011;
   P(548, 1) = 1296*1011+1010;
   P(548, 2) = 1296*1010+1013;
   P(548, 3) = 1296*1013+1018;
   P(548, 4) = 1296*1018+1016;
   P(548, 5) = 1296*1016+1017;
   P(548, 6) = 1296*1017+1014;
   P(548, 7) = 1296*1014+1009;
   P(549, 0) = 1296*1009+1229;
   P(549, 1) = 1296*1229+1234;
   P(549, 2) = 1296*1234+1232;
   P(549, 3) = 1296*1232+1235;
   P(549, 4) = 1296*1235+1015;
   P(549, 5) = 1296*1015+1017;
   P(549, 6) = 1296*1017+1014;
   P(549, 7) = 1296*1014+1009;
   P(550, 0) = 1296*1010+1013;
   P(550, 1) = 1296*1013+1018;
   P(550, 2) = 1296*1018+1050;
   P(550, 3) = 1296*1050+1045;
   P(550, 4) = 1296*1045+1047;
   P(550, 5) = 1296*1047+1044;
   P(550, 6) = 1296*1044+1012;
   P(550, 7) = 1296*1012+1010;
   P(551, 0) = 1296*1012+1044;
   P(551, 1) = 1296*1044+1075;
   P(551, 2) = 1296*1075+1077;
   P(551, 3) = 1296*1077+1074;
   P(551, 4) = 1296*1074+1042;
   P(551, 5) = 1296*1042+1040;
   P(551, 6) = 1296*1040+1043;
   P(551, 7) = 1296*1043+1012;
   P(552, 0) = 1296*1015+1017;
   P(552, 1) = 1296*1017+1016;
   P(552, 2) = 1296*1016+1019;
   P(552, 3) = 1296*1019+1024;
   P(552, 4) = 1296*1024+1022;
   P(552, 5) = 1296*1022+1023;
   P(552, 6) = 1296*1023+1020;
   P(552, 7) = 1296*1020+1015;
   P(553, 0) = 1296*1015+1235;
   P(553, 1) = 1296*1235+1240;
   P(553, 2) = 1296*1240+1238;
   P(553, 3) = 1296*1238+1241;
   P(553, 4) = 1296*1241+1021;
   P(553, 5) = 1296*1021+1023;
   P(553, 6) = 1296*1023+1020;
   P(553, 7) = 1296*1020+1015;
   P(554, 0) = 1296*1016+1019;
   P(554, 1) = 1296*1019+1024;
   P(554, 2) = 1296*1024+1056;
   P(554, 3) = 1296*1056+1051;
   P(554, 4) = 1296*1051+1053;
   P(554, 5) = 1296*1053+1050;
   P(554, 6) = 1296*1050+1018;
   P(554, 7) = 1296*1018+1016;
   P(555, 0) = 1296*1021+1023;
   P(555, 1) = 1296*1023+1022;
   P(555, 2) = 1296*1022+1025;
   P(555, 3) = 1296*1025+1030;
   P(555, 4) = 1296*1030+1028;
   P(555, 5) = 1296*1028+1029;
   P(555, 6) = 1296*1029+1026;
   P(555, 7) = 1296*1026+1021;
   P(556, 0) = 1296*1021+1241;
   P(556, 1) = 1296*1241+1246;
   P(556, 2) = 1296*1246+1244;
   P(556, 3) = 1296*1244+1247;
   P(556, 4) = 1296*1247+1027;
   P(556, 5) = 1296*1027+1029;
   P(556, 6) = 1296*1029+1026;
   P(556, 7) = 1296*1026+1021;
   P(557, 0) = 1296*1022+1025;
   P(557, 1) = 1296*1025+1030;
   P(557, 2) = 1296*1030+1062;
   P(557, 3) = 1296*1062+1057;
   P(557, 4) = 1296*1057+1059;
   P(557, 5) = 1296*1059+1056;
   P(557, 6) = 1296*1056+1024;
   P(557, 7) = 1296*1024+1022;
   P(558, 0) = 1296*1027+1029;
   P(558, 1) = 1296*1029+1028;
   P(558, 2) = 1296*1028+1031;
   P(558, 3) = 1296*1031+1036;
   P(558, 4) = 1296*1036+1034;
   P(558, 5) = 1296*1034+1035;
   P(558, 6) = 1296*1035+1032;
   P(558, 7) = 1296*1032+1027;
   P(559, 0) = 1296*1027+1247;
   P(559, 1) = 1296*1247+1252;
   P(559, 2) = 1296*1252+1250;
   P(559, 3) = 1296*1250+1253;
   P(559, 4) = 1296*1253+1033;
   P(559, 5) = 1296*1033+1035;
   P(559, 6) = 1296*1035+1032;
   P(559, 7) = 1296*1032+1027;
   P(560, 0) = 1296*1028+1031;
   P(560, 1) = 1296*1031+1036;
   P(560, 2) = 1296*1036+1068;
   P(560, 3) = 1296*1068+1063;
   P(560, 4) = 1296*1063+1065;
   P(560, 5) = 1296*1065+1062;
   P(560, 6) = 1296*1062+1030;
   P(560, 7) = 1296*1030+1028;
   P(561, 0) = 1296*1033+1035;
   P(561, 1) = 1296*1035+1034;
   P(561, 2) = 1296*1034+1037;
   P(561, 3) = 1296*1037+1042;
   P(561, 4) = 1296*1042+1040;
   P(561, 5) = 1296*1040+1041;
   P(561, 6) = 1296*1041+1038;
   P(561, 7) = 1296*1038+1033;
   P(562, 0) = 1296*1033+1253;
   P(562, 1) = 1296*1253+1258;
   P(562, 2) = 1296*1258+1256;
   P(562, 3) = 1296*1256+1259;
   P(562, 4) = 1296*1259+1039;
   P(562, 5) = 1296*1039+1041;
   P(562, 6) = 1296*1041+1038;
   P(562, 7) = 1296*1038+1033;
   P(563, 0) = 1296*1034+1037;
   P(563, 1) = 1296*1037+1042;
   P(563, 2) = 1296*1042+1074;
   P(563, 3) = 1296*1074+1069;
   P(563, 4) = 1296*1069+1071;
   P(563, 5) = 1296*1071+1068;
   P(563, 6) = 1296*1068+1036;
   P(563, 7) = 1296*1036+1034;
   P(564, 0) = 1296*1044+1047;
   P(564, 1) = 1296*1047+1045;
   P(564, 2) = 1296*1045+1265;
   P(564, 3) = 1296*1265+1262;
   P(564, 4) = 1296*1262+1264;
   P(564, 5) = 1296*1264+1295;
   P(564, 6) = 1296*1295+1075;
   P(564, 7) = 1296*1075+1044;
   P(565, 0) = 1296*1044+1047;
   P(565, 1) = 1296*1047+1046;
   P(565, 2) = 1296*1046+1048;
   P(565, 3) = 1296*1048+1079;
   P(565, 4) = 1296*1079+1076;
   P(565, 5) = 1296*1076+1077;
   P(565, 6) = 1296*1077+1075;
   P(565, 7) = 1296*1075+1044;
   P(566, 0) = 1296*1045+1047;
   P(566, 1) = 1296*1047+1046;
   P(566, 2) = 1296*1046+1049;
   P(566, 3) = 1296*1049+1054;
   P(566, 4) = 1296*1054+1052;
   P(566, 5) = 1296*1052+1053;
   P(566, 6) = 1296*1053+1050;
   P(566, 7) = 1296*1050+1045;
   P(567, 0) = 1296*1045+1265;
   P(567, 1) = 1296*1265+1270;
   P(567, 2) = 1296*1270+1268;
   P(567, 3) = 1296*1268+1271;
   P(567, 4) = 1296*1271+1051;
   P(567, 5) = 1296*1051+1053;
   P(567, 6) = 1296*1053+1050;
   P(567, 7) = 1296*1050+1045;
   P(568, 0) = 1296*1051+1053;
   P(568, 1) = 1296*1053+1052;
   P(568, 2) = 1296*1052+1055;
   P(568, 3) = 1296*1055+1060;
   P(568, 4) = 1296*1060+1058;
   P(568, 5) = 1296*1058+1059;
   P(568, 6) = 1296*1059+1056;
   P(568, 7) = 1296*1056+1051;
   P(569, 0) = 1296*1051+1271;
   P(569, 1) = 1296*1271+1276;
   P(569, 2) = 1296*1276+1274;
   P(569, 3) = 1296*1274+1277;
   P(569, 4) = 1296*1277+1057;
   P(569, 5) = 1296*1057+1059;
   P(569, 6) = 1296*1059+1056;
   P(569, 7) = 1296*1056+1051;
   P(570, 0) = 1296*1057+1059;
   P(570, 1) = 1296*1059+1058;
   P(570, 2) = 1296*1058+1061;
   P(570, 3) = 1296*1061+1066;
   P(570, 4) = 1296*1066+1064;
   P(570, 5) = 1296*1064+1065;
   P(570, 6) = 1296*1065+1062;
   P(570, 7) = 1296*1062+1057;
   P(571, 0) = 1296*1057+1277;
   P(571, 1) = 1296*1277+1282;
   P(571, 2) = 1296*1282+1280;
   P(571, 3) = 1296*1280+1283;
   P(571, 4) = 1296*1283+1063;
   P(571, 5) = 1296*1063+1065;
   P(571, 6) = 1296*1065+1062;
   P(571, 7) = 1296*1062+1057;
   P(572, 0) = 1296*1063+1065;
   P(572, 1) = 1296*1065+1064;
   P(572, 2) = 1296*1064+1067;
   P(572, 3) = 1296*1067+1072;
   P(572, 4) = 1296*1072+1070;
   P(572, 5) = 1296*1070+1071;
   P(572, 6) = 1296*1071+1068;
   P(572, 7) = 1296*1068+1063;
   P(573, 0) = 1296*1063+1283;
   P(573, 1) = 1296*1283+1288;
   P(573, 2) = 1296*1288+1286;
   P(573, 3) = 1296*1286+1289;
   P(573, 4) = 1296*1289+1069;
   P(573, 5) = 1296*1069+1071;
   P(573, 6) = 1296*1071+1068;
   P(573, 7) = 1296*1068+1063;
   P(574, 0) = 1296*1069+1071;
   P(574, 1) = 1296*1071+1070;
   P(574, 2) = 1296*1070+1073;
   P(574, 3) = 1296*1073+1078;
   P(574, 4) = 1296*1078+1076;
   P(574, 5) = 1296*1076+1077;
   P(574, 6) = 1296*1077+1074;
   P(574, 7) = 1296*1074+1069;
   P(575, 0) = 1296*1069+1289;
   P(575, 1) = 1296*1289+1294;
   P(575, 2) = 1296*1294+1292;
   P(575, 3) = 1296*1292+1295;
   P(575, 4) = 1296*1295+1075;
   P(575, 5) = 1296*1075+1077;
   P(575, 6) = 1296*1077+1074;
   P(575, 7) = 1296*1074+1069;
   P(576, 0) = 1296*1080+1083;
   P(576, 1) = 1296*1083+1081;
   P(576, 2) = 1296*1081+1086;
   P(576, 3) = 1296*1086+1270;
   P(576, 4) = 1296*1270+1265;
   P(576, 5) = 1296*1265+1262;
   P(576, 6) = 1296*1262+1264;
   P(576, 7) = 1296*1264+1080;
   P(577, 0) = 1296*1080+1083;
   P(577, 1) = 1296*1083+1082;
   P(577, 2) = 1296*1082+1084;
   P(577, 3) = 1296*1084+1115;
   P(577, 4) = 1296*1115+1112;
   P(577, 5) = 1296*1112+1113;
   P(577, 6) = 1296*1113+1111;
   P(577, 7) = 1296*1111+1080;
   P(578, 0) = 1296*1080+1264;
   P(578, 1) = 1296*1264+1295;
   P(578, 2) = 1296*1295+1292;
   P(578, 3) = 1296*1292+1294;
   P(578, 4) = 1296*1294+1110;
   P(578, 5) = 1296*1110+1113;
   P(578, 6) = 1296*1113+1111;
   P(578, 7) = 1296*1111+1080;
   P(579, 0) = 1296*1081+1083;
   P(579, 1) = 1296*1083+1082;
   P(579, 2) = 1296*1082+1085;
   P(579, 3) = 1296*1085+1090;
   P(579, 4) = 1296*1090+1088;
   P(579, 5) = 1296*1088+1089;
   P(579, 6) = 1296*1089+1086;
   P(579, 7) = 1296*1086+1081;
   P(580, 0) = 1296*1082+1085;
   P(580, 1) = 1296*1085+1090;
   P(580, 2) = 1296*1090+1122;
   P(580, 3) = 1296*1122+1117;
   P(580, 4) = 1296*1117+1119;
   P(580, 5) = 1296*1119+1116;
   P(580, 6) = 1296*1116+1084;
   P(580, 7) = 1296*1084+1082;
   P(581, 0) = 1296*1084+1116;
   P(581, 1) = 1296*1116+1147;
   P(581, 2) = 1296*1147+1149;
   P(581, 3) = 1296*1149+1146;
   P(581, 4) = 1296*1146+1114;
   P(581, 5) = 1296*1114+1112;
   P(581, 6) = 1296*1112+1115;
   P(581, 7) = 1296*1115+1084;
   P(582, 0) = 1296*1086+1089;
   P(582, 1) = 1296*1089+1087;
   P(582, 2) = 1296*1087+1092;
   P(582, 3) = 1296*1092+1276;
   P(582, 4) = 1296*1276+1271;
   P(582, 5) = 1296*1271+1268;
   P(582, 6) = 1296*1268+1270;
   P(582, 7) = 1296*1270+1086;
   P(583, 0) = 1296*1087+1089;
   P(583, 1) = 1296*1089+1088;
   P(583, 2) = 1296*1088+1091;
   P(583, 3) = 1296*1091+1096;
   P(583, 4) = 1296*1096+1094;
   P(583, 5) = 1296*1094+1095;
   P(583, 6) = 1296*1095+1092;
   P(583, 7) = 1296*1092+1087;
   P(584, 0) = 1296*1088+1091;
   P(584, 1) = 1296*1091+1096;
   P(584, 2) = 1296*1096+1128;
   P(584, 3) = 1296*1128+1123;
   P(584, 4) = 1296*1123+1125;
   P(584, 5) = 1296*1125+1122;
   P(584, 6) = 1296*1122+1090;
   P(584, 7) = 1296*1090+1088;
   P(585, 0) = 1296*1092+1095;
   P(585, 1) = 1296*1095+1093;
   P(585, 2) = 1296*1093+1098;
   P(585, 3) = 1296*1098+1282;
   P(585, 4) = 1296*1282+1277;
   P(585, 5) = 1296*1277+1274;
   P(585, 6) = 1296*1274+1276;
   P(585, 7) = 1296*1276+1092;
   P(586, 0) = 1296*1093+1095;
   P(586, 1) = 1296*1095+1094;
   P(586, 2) = 1296*1094+1097;
   P(586, 3) = 1296*1097+1102;
   P(586, 4) = 1296*1102+1100;
   P(586, 5) = 1296*1100+1101;
   P(586, 6) = 1296*1101+1098;
   P(586, 7) = 1296*1098+1093;
   P(587, 0) = 1296*1094+1097;
   P(587, 1) = 1296*1097+1102;
   P(587, 2) = 1296*1102+1134;
   P(587, 3) = 1296*1134+1129;
   P(587, 4) = 1296*1129+1131;
   P(587, 5) = 1296*1131+1128;
   P(587, 6) = 1296*1128+1096;
   P(587, 7) = 1296*1096+1094;
   P(588, 0) = 1296*1098+1101;
   P(588, 1) = 1296*1101+1099;
   P(588, 2) = 1296*1099+1104;
   P(588, 3) = 1296*1104+1288;
   P(588, 4) = 1296*1288+1283;
   P(588, 5) = 1296*1283+1280;
   P(588, 6) = 1296*1280+1282;
   P(588, 7) = 1296*1282+1098;
   P(589, 0) = 1296*1099+1101;
   P(589, 1) = 1296*1101+1100;
   P(589, 2) = 1296*1100+1103;
   P(589, 3) = 1296*1103+1108;
   P(589, 4) = 1296*1108+1106;
   P(589, 5) = 1296*1106+1107;
   P(589, 6) = 1296*1107+1104;
   P(589, 7) = 1296*1104+1099;
   P(590, 0) = 1296*1100+1103;
   P(590, 1) = 1296*1103+1108;
   P(590, 2) = 1296*1108+1140;
   P(590, 3) = 1296*1140+1135;
   P(590, 4) = 1296*1135+1137;
   P(590, 5) = 1296*1137+1134;
   P(590, 6) = 1296*1134+1102;
   P(590, 7) = 1296*1102+1100;
   P(591, 0) = 1296*1104+1107;
   P(591, 1) = 1296*1107+1105;
   P(591, 2) = 1296*1105+1110;
   P(591, 3) = 1296*1110+1294;
   P(591, 4) = 1296*1294+1289;
   P(591, 5) = 1296*1289+1286;
   P(591, 6) = 1296*1286+1288;
   P(591, 7) = 1296*1288+1104;
   P(592, 0) = 1296*1105+1107;
   P(592, 1) = 1296*1107+1106;
   P(592, 2) = 1296*1106+1109;
   P(592, 3) = 1296*1109+1114;
   P(592, 4) = 1296*1114+1112;
   P(592, 5) = 1296*1112+1113;
   P(592, 6) = 1296*1113+1110;
   P(592, 7) = 1296*1110+1105;
   P(593, 0) = 1296*1106+1109;
   P(593, 1) = 1296*1109+1114;
   P(593, 2) = 1296*1114+1146;
   P(593, 3) = 1296*1146+1141;
   P(593, 4) = 1296*1141+1143;
   P(593, 5) = 1296*1143+1140;
   P(593, 6) = 1296*1140+1108;
   P(593, 7) = 1296*1108+1106;
   P(594, 0) = 1296*1116+1119;
   P(594, 1) = 1296*1119+1118;
   P(594, 2) = 1296*1118+1120;
   P(594, 3) = 1296*1120+1151;
   P(594, 4) = 1296*1151+1148;
   P(594, 5) = 1296*1148+1149;
   P(594, 6) = 1296*1149+1147;
   P(594, 7) = 1296*1147+1116;
   P(595, 0) = 1296*1117+1119;
   P(595, 1) = 1296*1119+1118;
   P(595, 2) = 1296*1118+1121;
   P(595, 3) = 1296*1121+1126;
   P(595, 4) = 1296*1126+1124;
   P(595, 5) = 1296*1124+1125;
   P(595, 6) = 1296*1125+1122;
   P(595, 7) = 1296*1122+1117;
   P(596, 0) = 1296*1118+1121;
   P(596, 1) = 1296*1121+1126;
   P(596, 2) = 1296*1126+1158;
   P(596, 3) = 1296*1158+1153;
   P(596, 4) = 1296*1153+1155;
   P(596, 5) = 1296*1155+1152;
   P(596, 6) = 1296*1152+1120;
   P(596, 7) = 1296*1120+1118;
   P(597, 0) = 1296*1120+1152;
   P(597, 1) = 1296*1152+1183;
   P(597, 2) = 1296*1183+1185;
   P(597, 3) = 1296*1185+1182;
   P(597, 4) = 1296*1182+1150;
   P(597, 5) = 1296*1150+1148;
   P(597, 6) = 1296*1148+1151;
   P(597, 7) = 1296*1151+1120;
   P(598, 0) = 1296*1123+1125;
   P(598, 1) = 1296*1125+1124;
   P(598, 2) = 1296*1124+1127;
   P(598, 3) = 1296*1127+1132;
   P(598, 4) = 1296*1132+1130;
   P(598, 5) = 1296*1130+1131;
   P(598, 6) = 1296*1131+1128;
   P(598, 7) = 1296*1128+1123;
   P(599, 0) = 1296*1124+1127;
   P(599, 1) = 1296*1127+1132;
   P(599, 2) = 1296*1132+1164;
   P(599, 3) = 1296*1164+1159;
   P(599, 4) = 1296*1159+1161;
   P(599, 5) = 1296*1161+1158;
   P(599, 6) = 1296*1158+1126;
   P(599, 7) = 1296*1126+1124;
   P(600, 0) = 1296*1129+1131;
   P(600, 1) = 1296*1131+1130;
   P(600, 2) = 1296*1130+1133;
   P(600, 3) = 1296*1133+1138;
   P(600, 4) = 1296*1138+1136;
   P(600, 5) = 1296*1136+1137;
   P(600, 6) = 1296*1137+1134;
   P(600, 7) = 1296*1134+1129;
   P(601, 0) = 1296*1130+1133;
   P(601, 1) = 1296*1133+1138;
   P(601, 2) = 1296*1138+1170;
   P(601, 3) = 1296*1170+1165;
   P(601, 4) = 1296*1165+1167;
   P(601, 5) = 1296*1167+1164;
   P(601, 6) = 1296*1164+1132;
   P(601, 7) = 1296*1132+1130;
   P(602, 0) = 1296*1135+1137;
   P(602, 1) = 1296*1137+1136;
   P(602, 2) = 1296*1136+1139;
   P(602, 3) = 1296*1139+1144;
   P(602, 4) = 1296*1144+1142;
   P(602, 5) = 1296*1142+1143;
   P(602, 6) = 1296*1143+1140;
   P(602, 7) = 1296*1140+1135;
   P(603, 0) = 1296*1136+1139;
   P(603, 1) = 1296*1139+1144;
   P(603, 2) = 1296*1144+1176;
   P(603, 3) = 1296*1176+1171;
   P(603, 4) = 1296*1171+1173;
   P(603, 5) = 1296*1173+1170;
   P(603, 6) = 1296*1170+1138;
   P(603, 7) = 1296*1138+1136;
   P(604, 0) = 1296*1141+1143;
   P(604, 1) = 1296*1143+1142;
   P(604, 2) = 1296*1142+1145;
   P(604, 3) = 1296*1145+1150;
   P(604, 4) = 1296*1150+1148;
   P(604, 5) = 1296*1148+1149;
   P(604, 6) = 1296*1149+1146;
   P(604, 7) = 1296*1146+1141;
   P(605, 0) = 1296*1142+1145;
   P(605, 1) = 1296*1145+1150;
   P(605, 2) = 1296*1150+1182;
   P(605, 3) = 1296*1182+1177;
   P(605, 4) = 1296*1177+1179;
   P(605, 5) = 1296*1179+1176;
   P(605, 6) = 1296*1176+1144;
   P(605, 7) = 1296*1144+1142;
   P(606, 0) = 1296*1152+1155;
   P(606, 1) = 1296*1155+1154;
   P(606, 2) = 1296*1154+1156;
   P(606, 3) = 1296*1156+1187;
   P(606, 4) = 1296*1187+1184;
   P(606, 5) = 1296*1184+1185;
   P(606, 6) = 1296*1185+1183;
   P(606, 7) = 1296*1183+1152;
   P(607, 0) = 1296*1153+1155;
   P(607, 1) = 1296*1155+1154;
   P(607, 2) = 1296*1154+1157;
   P(607, 3) = 1296*1157+1162;
   P(607, 4) = 1296*1162+1160;
   P(607, 5) = 1296*1160+1161;
   P(607, 6) = 1296*1161+1158;
   P(607, 7) = 1296*1158+1153;
   P(608, 0) = 1296*1154+1157;
   P(608, 1) = 1296*1157+1162;
   P(608, 2) = 1296*1162+1194;
   P(608, 3) = 1296*1194+1189;
   P(608, 4) = 1296*1189+1191;
   P(608, 5) = 1296*1191+1188;
   P(608, 6) = 1296*1188+1156;
   P(608, 7) = 1296*1156+1154;
   P(609, 0) = 1296*1156+1188;
   P(609, 1) = 1296*1188+1219;
   P(609, 2) = 1296*1219+1221;
   P(609, 3) = 1296*1221+1218;
   P(609, 4) = 1296*1218+1186;
   P(609, 5) = 1296*1186+1184;
   P(609, 6) = 1296*1184+1187;
   P(609, 7) = 1296*1187+1156;
   P(610, 0) = 1296*1159+1161;
   P(610, 1) = 1296*1161+1160;
   P(610, 2) = 1296*1160+1163;
   P(610, 3) = 1296*1163+1168;
   P(610, 4) = 1296*1168+1166;
   P(610, 5) = 1296*1166+1167;
   P(610, 6) = 1296*1167+1164;
   P(610, 7) = 1296*1164+1159;
   P(611, 0) = 1296*1160+1163;
   P(611, 1) = 1296*1163+1168;
   P(611, 2) = 1296*1168+1200;
   P(611, 3) = 1296*1200+1195;
   P(611, 4) = 1296*1195+1197;
   P(611, 5) = 1296*1197+1194;
   P(611, 6) = 1296*1194+1162;
   P(611, 7) = 1296*1162+1160;
   P(612, 0) = 1296*1165+1167;
   P(612, 1) = 1296*1167+1166;
   P(612, 2) = 1296*1166+1169;
   P(612, 3) = 1296*1169+1174;
   P(612, 4) = 1296*1174+1172;
   P(612, 5) = 1296*1172+1173;
   P(612, 6) = 1296*1173+1170;
   P(612, 7) = 1296*1170+1165;
   P(613, 0) = 1296*1166+1169;
   P(613, 1) = 1296*1169+1174;
   P(613, 2) = 1296*1174+1206;
   P(613, 3) = 1296*1206+1201;
   P(613, 4) = 1296*1201+1203;
   P(613, 5) = 1296*1203+1200;
   P(613, 6) = 1296*1200+1168;
   P(613, 7) = 1296*1168+1166;
   P(614, 0) = 1296*1171+1173;
   P(614, 1) = 1296*1173+1172;
   P(614, 2) = 1296*1172+1175;
   P(614, 3) = 1296*1175+1180;
   P(614, 4) = 1296*1180+1178;
   P(614, 5) = 1296*1178+1179;
   P(614, 6) = 1296*1179+1176;
   P(614, 7) = 1296*1176+1171;
   P(615, 0) = 1296*1172+1175;
   P(615, 1) = 1296*1175+1180;
   P(615, 2) = 1296*1180+1212;
   P(615, 3) = 1296*1212+1207;
   P(615, 4) = 1296*1207+1209;
   P(615, 5) = 1296*1209+1206;
   P(615, 6) = 1296*1206+1174;
   P(615, 7) = 1296*1174+1172;
   P(616, 0) = 1296*1177+1179;
   P(616, 1) = 1296*1179+1178;
   P(616, 2) = 1296*1178+1181;
   P(616, 3) = 1296*1181+1186;
   P(616, 4) = 1296*1186+1184;
   P(616, 5) = 1296*1184+1185;
   P(616, 6) = 1296*1185+1182;
   P(616, 7) = 1296*1182+1177;
   P(617, 0) = 1296*1178+1181;
   P(617, 1) = 1296*1181+1186;
   P(617, 2) = 1296*1186+1218;
   P(617, 3) = 1296*1218+1213;
   P(617, 4) = 1296*1213+1215;
   P(617, 5) = 1296*1215+1212;
   P(617, 6) = 1296*1212+1180;
   P(617, 7) = 1296*1180+1178;
   P(618, 0) = 1296*1188+1191;
   P(618, 1) = 1296*1191+1190;
   P(618, 2) = 1296*1190+1192;
   P(618, 3) = 1296*1192+1223;
   P(618, 4) = 1296*1223+1220;
   P(618, 5) = 1296*1220+1221;
   P(618, 6) = 1296*1221+1219;
   P(618, 7) = 1296*1219+1188;
   P(619, 0) = 1296*1189+1191;
   P(619, 1) = 1296*1191+1190;
   P(619, 2) = 1296*1190+1193;
   P(619, 3) = 1296*1193+1198;
   P(619, 4) = 1296*1198+1196;
   P(619, 5) = 1296*1196+1197;
   P(619, 6) = 1296*1197+1194;
   P(619, 7) = 1296*1194+1189;
   P(620, 0) = 1296*1190+1193;
   P(620, 1) = 1296*1193+1198;
   P(620, 2) = 1296*1198+1230;
   P(620, 3) = 1296*1230+1225;
   P(620, 4) = 1296*1225+1227;
   P(620, 5) = 1296*1227+1224;
   P(620, 6) = 1296*1224+1192;
   P(620, 7) = 1296*1192+1190;
   P(621, 0) = 1296*1192+1224;
   P(621, 1) = 1296*1224+1255;
   P(621, 2) = 1296*1255+1257;
   P(621, 3) = 1296*1257+1254;
   P(621, 4) = 1296*1254+1222;
   P(621, 5) = 1296*1222+1220;
   P(621, 6) = 1296*1220+1223;
   P(621, 7) = 1296*1223+1192;
   P(622, 0) = 1296*1195+1197;
   P(622, 1) = 1296*1197+1196;
   P(622, 2) = 1296*1196+1199;
   P(622, 3) = 1296*1199+1204;
   P(622, 4) = 1296*1204+1202;
   P(622, 5) = 1296*1202+1203;
   P(622, 6) = 1296*1203+1200;
   P(622, 7) = 1296*1200+1195;
   P(623, 0) = 1296*1196+1199;
   P(623, 1) = 1296*1199+1204;
   P(623, 2) = 1296*1204+1236;
   P(623, 3) = 1296*1236+1231;
   P(623, 4) = 1296*1231+1233;
   P(623, 5) = 1296*1233+1230;
   P(623, 6) = 1296*1230+1198;
   P(623, 7) = 1296*1198+1196;
   P(624, 0) = 1296*1201+1203;
   P(624, 1) = 1296*1203+1202;
   P(624, 2) = 1296*1202+1205;
   P(624, 3) = 1296*1205+1210;
   P(624, 4) = 1296*1210+1208;
   P(624, 5) = 1296*1208+1209;
   P(624, 6) = 1296*1209+1206;
   P(624, 7) = 1296*1206+1201;
   P(625, 0) = 1296*1202+1205;
   P(625, 1) = 1296*1205+1210;
   P(625, 2) = 1296*1210+1242;
   P(625, 3) = 1296*1242+1237;
   P(625, 4) = 1296*1237+1239;
   P(625, 5) = 1296*1239+1236;
   P(625, 6) = 1296*1236+1204;
   P(625, 7) = 1296*1204+1202;
   P(626, 0) = 1296*1207+1209;
   P(626, 1) = 1296*1209+1208;
   P(626, 2) = 1296*1208+1211;
   P(626, 3) = 1296*1211+1216;
   P(626, 4) = 1296*1216+1214;
   P(626, 5) = 1296*1214+1215;
   P(626, 6) = 1296*1215+1212;
   P(626, 7) = 1296*1212+1207;
   P(627, 0) = 1296*1208+1211;
   P(627, 1) = 1296*1211+1216;
   P(627, 2) = 1296*1216+1248;
   P(627, 3) = 1296*1248+1243;
   P(627, 4) = 1296*1243+1245;
   P(627, 5) = 1296*1245+1242;
   P(627, 6) = 1296*1242+1210;
   P(627, 7) = 1296*1210+1208;
   P(628, 0) = 1296*1213+1215;
   P(628, 1) = 1296*1215+1214;
   P(628, 2) = 1296*1214+1217;
   P(628, 3) = 1296*1217+1222;
   P(628, 4) = 1296*1222+1220;
   P(628, 5) = 1296*1220+1221;
   P(628, 6) = 1296*1221+1218;
   P(628, 7) = 1296*1218+1213;
   P(629, 0) = 1296*1214+1217;
   P(629, 1) = 1296*1217+1222;
   P(629, 2) = 1296*1222+1254;
   P(629, 3) = 1296*1254+1249;
   P(629, 4) = 1296*1249+1251;
   P(629, 5) = 1296*1251+1248;
   P(629, 6) = 1296*1248+1216;
   P(629, 7) = 1296*1216+1214;
   P(630, 0) = 1296*1224+1227;
   P(630, 1) = 1296*1227+1226;
   P(630, 2) = 1296*1226+1228;
   P(630, 3) = 1296*1228+1259;
   P(630, 4) = 1296*1259+1256;
   P(630, 5) = 1296*1256+1257;
   P(630, 6) = 1296*1257+1255;
   P(630, 7) = 1296*1255+1224;
   P(631, 0) = 1296*1225+1227;
   P(631, 1) = 1296*1227+1226;
   P(631, 2) = 1296*1226+1229;
   P(631, 3) = 1296*1229+1234;
   P(631, 4) = 1296*1234+1232;
   P(631, 5) = 1296*1232+1233;
   P(631, 6) = 1296*1233+1230;
   P(631, 7) = 1296*1230+1225;
   P(632, 0) = 1296*1226+1229;
   P(632, 1) = 1296*1229+1234;
   P(632, 2) = 1296*1234+1266;
   P(632, 3) = 1296*1266+1261;
   P(632, 4) = 1296*1261+1263;
   P(632, 5) = 1296*1263+1260;
   P(632, 6) = 1296*1260+1228;
   P(632, 7) = 1296*1228+1226;
   P(633, 0) = 1296*1228+1260;
   P(633, 1) = 1296*1260+1291;
   P(633, 2) = 1296*1291+1293;
   P(633, 3) = 1296*1293+1290;
   P(633, 4) = 1296*1290+1258;
   P(633, 5) = 1296*1258+1256;
   P(633, 6) = 1296*1256+1259;
   P(633, 7) = 1296*1259+1228;
   P(634, 0) = 1296*1231+1233;
   P(634, 1) = 1296*1233+1232;
   P(634, 2) = 1296*1232+1235;
   P(634, 3) = 1296*1235+1240;
   P(634, 4) = 1296*1240+1238;
   P(634, 5) = 1296*1238+1239;
   P(634, 6) = 1296*1239+1236;
   P(634, 7) = 1296*1236+1231;
   P(635, 0) = 1296*1232+1235;
   P(635, 1) = 1296*1235+1240;
   P(635, 2) = 1296*1240+1272;
   P(635, 3) = 1296*1272+1267;
   P(635, 4) = 1296*1267+1269;
   P(635, 5) = 1296*1269+1266;
   P(635, 6) = 1296*1266+1234;
   P(635, 7) = 1296*1234+1232;
   P(636, 0) = 1296*1237+1239;
   P(636, 1) = 1296*1239+1238;
   P(636, 2) = 1296*1238+1241;
   P(636, 3) = 1296*1241+1246;
   P(636, 4) = 1296*1246+1244;
   P(636, 5) = 1296*1244+1245;
   P(636, 6) = 1296*1245+1242;
   P(636, 7) = 1296*1242+1237;
   P(637, 0) = 1296*1238+1241;
   P(637, 1) = 1296*1241+1246;
   P(637, 2) = 1296*1246+1278;
   P(637, 3) = 1296*1278+1273;
   P(637, 4) = 1296*1273+1275;
   P(637, 5) = 1296*1275+1272;
   P(637, 6) = 1296*1272+1240;
   P(637, 7) = 1296*1240+1238;
   P(638, 0) = 1296*1243+1245;
   P(638, 1) = 1296*1245+1244;
   P(638, 2) = 1296*1244+1247;
   P(638, 3) = 1296*1247+1252;
   P(638, 4) = 1296*1252+1250;
   P(638, 5) = 1296*1250+1251;
   P(638, 6) = 1296*1251+1248;
   P(638, 7) = 1296*1248+1243;
   P(639, 0) = 1296*1244+1247;
   P(639, 1) = 1296*1247+1252;
   P(639, 2) = 1296*1252+1284;
   P(639, 3) = 1296*1284+1279;
   P(639, 4) = 1296*1279+1281;
   P(639, 5) = 1296*1281+1278;
   P(639, 6) = 1296*1278+1246;
   P(639, 7) = 1296*1246+1244;
   P(640, 0) = 1296*1249+1251;
   P(640, 1) = 1296*1251+1250;
   P(640, 2) = 1296*1250+1253;
   P(640, 3) = 1296*1253+1258;
   P(640, 4) = 1296*1258+1256;
   P(640, 5) = 1296*1256+1257;
   P(640, 6) = 1296*1257+1254;
   P(640, 7) = 1296*1254+1249;
   P(641, 0) = 1296*1250+1253;
   P(641, 1) = 1296*1253+1258;
   P(641, 2) = 1296*1258+1290;
   P(641, 3) = 1296*1290+1285;
   P(641, 4) = 1296*1285+1287;
   P(641, 5) = 1296*1287+1284;
   P(641, 6) = 1296*1284+1252;
   P(641, 7) = 1296*1252+1250;
   P(642, 0) = 1296*1260+1263;
   P(642, 1) = 1296*1263+1262;
   P(642, 2) = 1296*1262+1264;
   P(642, 3) = 1296*1264+1295;
   P(642, 4) = 1296*1295+1292;
   P(642, 5) = 1296*1292+1293;
   P(642, 6) = 1296*1293+1291;
   P(642, 7) = 1296*1291+1260;
   P(643, 0) = 1296*1261+1263;
   P(643, 1) = 1296*1263+1262;
   P(643, 2) = 1296*1262+1265;
   P(643, 3) = 1296*1265+1270;
   P(643, 4) = 1296*1270+1268;
   P(643, 5) = 1296*1268+1269;
   P(643, 6) = 1296*1269+1266;
   P(643, 7) = 1296*1266+1261;
   P(644, 0) = 1296*1267+1269;
   P(644, 1) = 1296*1269+1268;
   P(644, 2) = 1296*1268+1271;
   P(644, 3) = 1296*1271+1276;
   P(644, 4) = 1296*1276+1274;
   P(644, 5) = 1296*1274+1275;
   P(644, 6) = 1296*1275+1272;
   P(644, 7) = 1296*1272+1267;
   P(645, 0) = 1296*1273+1275;
   P(645, 1) = 1296*1275+1274;
   P(645, 2) = 1296*1274+1277;
   P(645, 3) = 1296*1277+1282;
   P(645, 4) = 1296*1282+1280;
   P(645, 5) = 1296*1280+1281;
   P(645, 6) = 1296*1281+1278;
   P(645, 7) = 1296*1278+1273;
   P(646, 0) = 1296*1279+1281;
   P(646, 1) = 1296*1281+1280;
   P(646, 2) = 1296*1280+1283;
   P(646, 3) = 1296*1283+1288;
   P(646, 4) = 1296*1288+1286;
   P(646, 5) = 1296*1286+1287;
   P(646, 6) = 1296*1287+1284;
   P(646, 7) = 1296*1284+1279;
   P(647, 0) = 1296*1285+1287;
   P(647, 1) = 1296*1287+1286;
   P(647, 2) = 1296*1286+1289;
   P(647, 3) = 1296*1289+1294;
   P(647, 4) = 1296*1294+1292;
   P(647, 5) = 1296*1292+1293;
   P(647, 6) = 1296*1293+1290;
   P(647, 7) = 1296*1290+1285;
	 return P;
  }
  
